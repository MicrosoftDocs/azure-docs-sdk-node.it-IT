### YamlMime:UniversalReference
ms.openlocfilehash: 5920a3392ad6a32cba01fef7382d593a8ebe6a9b
ms.sourcegitcommit: 0e294f7c4dcdfae9df18ff3e82b6563680ef2519
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 01/25/2019
ms.locfileid: "55054628"
items:
- uid: azure-arm-storage.BlobContainer
  name: BlobContainer
  fullName: BlobContainer
  children:
  - azure-arm-storage.BlobContainer.hasImmutabilityPolicy
  - azure-arm-storage.BlobContainer.hasLegalHold
  - azure-arm-storage.BlobContainer.immutabilityPolicy
  - azure-arm-storage.BlobContainer.lastModifiedTime
  - azure-arm-storage.BlobContainer.leaseDuration
  - azure-arm-storage.BlobContainer.leaseState
  - azure-arm-storage.BlobContainer.leaseStatus
  - azure-arm-storage.BlobContainer.legalHold
  - azure-arm-storage.BlobContainer.metadata
  - azure-arm-storage.BlobContainer.publicAccess
  langs:
  - typeScript
  type: interface
  summary: <span data-ttu-id="5c593-101">Proprietà del contenitore blob, ad esempio Id, nome risorsa, il tipo di risorsa, Etag.</span><span class="sxs-lookup"><span data-stu-id="5c593-101">Properties of the blob container, including Id, resource name, resource type, Etag.</span></span>
  extends:
    name: azure-arm-storage.AzureEntityResource
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainer.hasImmutabilityPolicy
  name: hasImmutabilityPolicy
  fullName: hasImmutabilityPolicy
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="5c593-102">La proprietà pubblica hasImmutabilityPolicy è impostata su true per criteri di restrizione software se criteri di immutabilità dei è stato creato per questo contenitore.</span><span class="sxs-lookup"><span data-stu-id="5c593-102">The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container.</span></span> <span data-ttu-id="5c593-103">La proprietà pubblica hasImmutabilityPolicy è impostata su false per criteri di restrizione software se criteri di immutabilità dei non è stato creato per questo contenitore.</span><span class="sxs-lookup"><span data-stu-id="5c593-103">The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.</span></span>
  optional: true
  syntax:
    content: 'hasImmutabilityPolicy?: boolean'
    return:
      type:
      - boolean
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainer.hasLegalHold
  name: hasLegalHold
  fullName: hasLegalHold
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    <span data-ttu-id="5c593-104">La proprietà pubblica hasLegalHold è impostata su true per criteri di restrizione software se sono presenti almeno un tag esistente.</span><span class="sxs-lookup"><span data-stu-id="5c593-104">The hasLegalHold public property is set to true by SRP if there are at least one existing tag.</span></span>

    <span data-ttu-id="5c593-105">La proprietà pubblica hasLegalHold è impostata su false da criteri di restrizione software se tutti esistente legali contengono i tag vengono eliminati. Può esistere un massimo di contenitori blob 1000 con hasLegalHold = true per un determinato account.</span><span class="sxs-lookup"><span data-stu-id="5c593-105">The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.</span></span>
  optional: true
  syntax:
    content: 'hasLegalHold?: boolean'
    return:
      type:
      - boolean
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainer.immutabilityPolicy
  name: immutabilityPolicy
  fullName: immutabilityPolicy
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="5c593-106">La proprietà criterio ImmutabilityPolicy del contenitore.</span><span class="sxs-lookup"><span data-stu-id="5c593-106">The ImmutabilityPolicy property of the container.</span></span>
  optional: true
  syntax:
    content: 'immutabilityPolicy?: ImmutabilityPolicyProperties'
    return:
      type:
      - azure-arm-storage.ImmutabilityPolicyProperties
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainer.lastModifiedTime
  name: lastModifiedTime
  fullName: lastModifiedTime
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="5c593-107">Restituisce la data e ora che dell'ultima modifica apportata al contenitore.</span><span class="sxs-lookup"><span data-stu-id="5c593-107">Returns the date and time the container was last modified.</span></span>
  optional: true
  syntax:
    content: 'lastModifiedTime?: Date'
    return:
      type:
      - Date
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainer.leaseDuration
  name: leaseDuration
  fullName: leaseDuration
  children: []
  langs:
  - typeScript
  type: property
  summary: "<span data-ttu-id=\"5c593-108\">Specifica se il lease su un contenitore è di durata infinita o fissa, solo quando verrà assegnate in lease nel contenitore.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5c593-108\">Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.</span></span> <span data-ttu-id=\"5c593-109\">I valori possibili sono: 'Infinite', 'Fixed'</span><span class=\"sxs-lookup\"><span data-stu-id=\"5c593-109\">Possible values include: 'Infinite', 'Fixed'</span></span>"
  optional: true
  syntax:
    content: 'leaseDuration?: string'
    return:
      type:
      - string
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainer.leaseState
  name: leaseState
  fullName: leaseState
  children: []
  langs:
  - typeScript
  type: property
  summary: "<span data-ttu-id=\"5c593-110\">Stato del contenitore di lease.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5c593-110\">Lease state of the container.</span></span> <span data-ttu-id=\"5c593-111\">I valori possibili sono: 'Disponibili', 'Stato di lease', 'Scaduta', 'Importanti', 'Danneggiato'</span><span class=\"sxs-lookup\"><span data-stu-id=\"5c593-111\">Possible values include: 'Available', 'Leased', 'Expired', 'Breaking', 'Broken'</span></span>"
  optional: true
  syntax:
    content: 'leaseState?: string'
    return:
      type:
      - string
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainer.leaseStatus
  name: leaseStatus
  fullName: leaseStatus
  children: []
  langs:
  - typeScript
  type: property
  summary: "<span data-ttu-id=\"5c593-112\">Lo stato di lease del contenitore.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5c593-112\">The lease status of the container.</span></span> <span data-ttu-id=\"5c593-113\">I valori possibili sono: 'Bloccato', 'Sbloccato'</span><span class=\"sxs-lookup\"><span data-stu-id=\"5c593-113\">Possible values include: 'Locked', 'Unlocked'</span></span>"
  optional: true
  syntax:
    content: 'leaseStatus?: string'
    return:
      type:
      - string
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainer.legalHold
  name: legalHold
  fullName: legalHold
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="5c593-114">La proprietà LegalHold del contenitore.</span><span class="sxs-lookup"><span data-stu-id="5c593-114">The LegalHold property of the container.</span></span>
  optional: true
  syntax:
    content: 'legalHold?: LegalHoldProperties'
    return:
      type:
      - azure-arm-storage.LegalHoldProperties
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainer.metadata
  name: metadata
  fullName: metadata
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="5c593-115">Una coppia nome-valore da associare al contenitore come metadati.</span><span class="sxs-lookup"><span data-stu-id="5c593-115">A name-value pair to associate with the container as metadata.</span></span>
  optional: true
  syntax:
    content: 'metadata?: [key: string]: string'
    return:
      type:
      - '[key: string]: string'
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainer.publicAccess
  name: publicAccess
  fullName: publicAccess
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    <span data-ttu-id="5c593-116">Specifica se i dati nel contenitore sono accessibili pubblicamente e il livello di accesso.</span><span class="sxs-lookup"><span data-stu-id="5c593-116">Specifies whether data in the container may be accessed publicly and the level of access.</span></span>

    <span data-ttu-id="5c593-117">I valori possibili sono: 'Contenitore', 'Blob', 'None'</span><span class="sxs-lookup"><span data-stu-id="5c593-117">Possible values include: 'Container', 'Blob', 'None'</span></span>
  optional: true
  syntax:
    content: 'publicAccess?: string'
    return:
      type:
      - string
  package: azure-arm-storage
references:
- uid: azure-arm-storage.AzureEntityResource
  name: AzureEntityResource
  spec.typeScript:
  - name: AzureEntityResource
    fullName: AzureEntityResource
    uid: azure-arm-storage.AzureEntityResource
- uid: azure-arm-storage.ImmutabilityPolicyProperties
  name: ImmutabilityPolicyProperties
  spec.typeScript:
  - name: ImmutabilityPolicyProperties
    fullName: ImmutabilityPolicyProperties
    uid: azure-arm-storage.ImmutabilityPolicyProperties
- uid: azure-arm-storage.LegalHoldProperties
  name: LegalHoldProperties
  spec.typeScript:
  - name: LegalHoldProperties
    fullName: LegalHoldProperties
    uid: azure-arm-storage.LegalHoldProperties
