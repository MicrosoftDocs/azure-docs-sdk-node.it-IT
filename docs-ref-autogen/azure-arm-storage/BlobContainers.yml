### YamlMime:UniversalReference
ms.openlocfilehash: f6278ec3e2f1f1451d80e1327f91eed10a0fc78d
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/12/2018
ms.locfileid: "40066871"
items:
- uid: azure-arm-storage.BlobContainers
  name: BlobContainers
  fullName: BlobContainers
  children:
  - azure-arm-storage.BlobContainers.clearLegalHold
  - azure-arm-storage.BlobContainers.clearLegalHold_1
  - azure-arm-storage.BlobContainers.clearLegalHold_2
  - azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.create
  - azure-arm-storage.BlobContainers.create_2
  - azure-arm-storage.BlobContainers.create_1
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.createWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.deleteMethod
  - azure-arm-storage.BlobContainers.deleteMethod_1
  - azure-arm-storage.BlobContainers.deleteMethod_2
  - azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.get
  - azure-arm-storage.BlobContainers.get_1
  - azure-arm-storage.BlobContainers.get_2
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.getWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.list
  - azure-arm-storage.BlobContainers.list_1
  - azure-arm-storage.BlobContainers.list_2
  - azure-arm-storage.BlobContainers.listWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.setLegalHold
  - azure-arm-storage.BlobContainers.setLegalHold_1
  - azure-arm-storage.BlobContainers.setLegalHold_2
  - azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.update
  - azure-arm-storage.BlobContainers.update_1
  - azure-arm-storage.BlobContainers.update_2
  - azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Cancella legali contengono tag. La cancellazione del tag stesso o addirittura inesistenti comporta un'operazione idempotente. ClearLegalHold Cancella solo i tag specificati nella richiesta.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: tags
      type:
      - string[]
      description: >
        Ogni tag deve essere compreso tra 3 e 23 caratteri alfanumerici e viene normalizzata in lettere minuscole in Criteri di restrizione software.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold_1
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Cancella legali contengono tag. La cancellazione del tag stesso o addirittura inesistenti comporta un'operazione idempotente. ClearLegalHold Cancella solo i tag specificati nella richiesta.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold_2
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Cancella legali contengono tag. La cancellazione del tag stesso o addirittura inesistenti comporta un'operazione idempotente. ClearLegalHold Cancella solo i tag specificati nella richiesta.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: function, callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
  name: clearLegalHoldWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Cancella legali contengono tag. La cancellazione del tag stesso o addirittura inesistenti comporta un'operazione idempotente. ClearLegalHold Cancella solo i tag specificati nella richiesta.
  syntax:
    content: 'function clearLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: tags
      type:
      - string[]
      description: >
        Ogni tag deve essere compreso tra 3 e 23 caratteri alfanumerici e viene normalizzata in lettere minuscole in Criteri di restrizione software.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un nuovo contenitore nell'account specificato come descritto dal corpo della richiesta. La risorsa di contenitore include i metadati e proprietà per tale contenitore. Non include un elenco dei BLOB presenti nel contenitore.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un nuovo contenitore nell'account specificato come descritto dal corpo della richiesta. La risorsa di contenitore include i metadati e proprietà per tale contenitore. Non include un elenco dei BLOB presenti nel contenitore.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options: function, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un nuovo contenitore nell'account specificato come descritto dal corpo della richiesta. La risorsa di contenitore include i metadati e proprietà per tale contenitore. Non include un elenco dei BLOB presenti nel contenitore.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea o aggiorna criteri di immutabilità sbloccato. Se specificato, ma non necessario per questa operazione, viene rispettato ETag in If-Match.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        Il periodo di immutabilità per i BLOB nel contenitore dopo la creazione del criterio, in giorni.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea o aggiorna criteri di immutabilità sbloccato. Se specificato, ma non necessario per questa operazione, viene rispettato ETag in If-Match.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea o aggiorna criteri di immutabilità sbloccato. Se specificato, ma non necessario per questa operazione, viene rispettato ETag in If-Match.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options: function, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  name: createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea o aggiorna criteri di immutabilità sbloccato. Se specificato, ma non necessario per questa operazione, viene rispettato ETag in If-Match.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        Il periodo di immutabilità per i BLOB nel contenitore dopo la creazione del criterio, in giorni.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un nuovo contenitore nell'account specificato come descritto dal corpo della richiesta. La risorsa di contenitore include i metadati e proprietà per tale contenitore. Non include un elenco dei BLOB presenti nel contenitore.
  syntax:
    content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Interrompe un criteri di immutabilità sbloccato. La risposta di eliminazione ha immutabilityPeriodSinceCreationInDays impostato su 0. Valore ETag in If-Match è obbligatorio per questa operazione. L'eliminazione di criteri di immutabilità bloccati non è consentito, unico modo consiste nell'eliminare il contenitore dopo l'eliminazione di tutti i BLOB all'interno del contenitore.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Interrompe un criteri di immutabilità sbloccato. La risposta di eliminazione ha immutabilityPeriodSinceCreationInDays impostato su 0. Valore ETag in If-Match è obbligatorio per questa operazione. L'eliminazione di criteri di immutabilità bloccati non è consentito, unico modo consiste nell'eliminare il contenitore dopo l'eliminazione di tutti i BLOB all'interno del contenitore.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: ifMatch
      type:
      - string
      description: >
        La versione dello stato (ETag) di entità dei criteri di immutabilità da aggiornare. Un valore di "*" può essere usato per applicare l'operazione solo se i criteri di immutabilità esistono già. Se omesso, questa operazione verrà sempre applicata.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Interrompe un criteri di immutabilità sbloccato. La risposta di eliminazione ha immutabilityPeriodSinceCreationInDays impostato su 0. Valore ETag in If-Match è obbligatorio per questa operazione. L'eliminazione di criteri di immutabilità bloccati non è consentito, unico modo consiste nell'eliminare il contenitore dopo l'eliminazione di tutti i BLOB all'interno del contenitore.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: function, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
  name: deleteImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Interrompe un criteri di immutabilità sbloccato. La risposta di eliminazione ha immutabilityPeriodSinceCreationInDays impostato su 0. Valore ETag in If-Match è obbligatorio per questa operazione. L'eliminazione di criteri di immutabilità bloccati non è consentito, unico modo consiste nell'eliminare il contenitore dopo l'eliminazione di tutti i BLOB all'interno del contenitore.
  syntax:
    content: 'function deleteImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: ifMatch
      type:
      - string
      description: >
        La versione dello stato (ETag) di entità dei criteri di immutabilità da aggiornare. Un valore di "*" può essere usato per applicare l'operazione solo se i criteri di immutabilità esistono già. Se omesso, questa operazione verrà sempre applicata.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina il contenitore con un account specificato.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina il contenitore con un account specificato.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina il contenitore con un account specificato.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina il contenitore con un account specificato.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Estende il immutabilityPeriodSinceCreationInDays di un criterio immutabilityPolicy bloccato. L'unica operazione consentita su criteri Locked sarà questa azione. Valore ETag in If-Match è obbligatorio per questa operazione.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: ifMatch
      type:
      - string
      description: >
        La versione dello stato (ETag) di entità dei criteri di immutabilità da aggiornare. Un valore di "*" può essere usato per applicare l'operazione solo se i criteri di immutabilità esistono già. Se omesso, questa operazione verrà sempre applicata.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        Il periodo di immutabilità per i BLOB nel contenitore dopo la creazione del criterio, in giorni.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Estende il immutabilityPeriodSinceCreationInDays di un criterio immutabilityPolicy bloccato. L'unica operazione consentita su criteri Locked sarà questa azione. Valore ETag in If-Match è obbligatorio per questa operazione.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Estende il immutabilityPeriodSinceCreationInDays di un criterio immutabilityPolicy bloccato. L'unica operazione consentita su criteri Locked sarà questa azione. Valore ETag in If-Match è obbligatorio per questa operazione.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options: function, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
  name: extendImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Estende il immutabilityPeriodSinceCreationInDays di un criterio immutabilityPolicy bloccato. L'unica operazione consentita su criteri Locked sarà questa azione. Valore ETag in If-Match è obbligatorio per questa operazione.
  syntax:
    content: 'function extendImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: ifMatch
      type:
      - string
      description: >
        La versione dello stato (ETag) di entità dei criteri di immutabilità da aggiornare. Un valore di "*" può essere usato per applicare l'operazione solo se i criteri di immutabilità esistono già. Se omesso, questa operazione verrà sempre applicata.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        Il periodo di immutabilità per i BLOB nel contenitore dopo la creazione del criterio, in giorni.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene le proprietà di un contenitore specificato.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene le proprietà di un contenitore specificato.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene le proprietà di un contenitore specificato.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options: function, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene i criteri di immutabilità esistente con il valore ETag corrispondente nel corpo e intestazioni della risposta.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene i criteri di immutabilità esistente con il valore ETag corrispondente nel corpo e intestazioni della risposta.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options: function, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene i criteri di immutabilità esistente con il valore ETag corrispondente nel corpo e intestazioni della risposta.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
  name: getImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene i criteri di immutabilità esistente con il valore ETag corrispondente nel corpo e intestazioni della risposta.
  syntax:
    content: 'function getImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene le proprietà di un contenitore specificato.
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Elenca tutti i contenitori e non supporta un prefisso, ad esempio piano dati. Inoltre criteri di restrizione software oggi non restituisce il token di continuazione.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Elenca tutti i contenitori e non supporta un prefisso, ad esempio piano dati. Inoltre criteri di restrizione software oggi non restituisce il token di continuazione.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, callback: ServiceCallback<ListContainerItems>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListContainerItems>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Elenca tutti i contenitori e non supporta un prefisso, ad esempio piano dati. Inoltre criteri di restrizione software oggi non restituisce il token di continuazione.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, options: function, callback: ServiceCallback<ListContainerItems>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListContainerItems>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Elenca tutti i contenitori e non supporta un prefisso, ad esempio piano dati. Inoltre criteri di restrizione software oggi non restituisce il token di continuazione.
  syntax:
    content: 'function listWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Imposta il criterio ImmutabilityPolicy bloccato sullo stato. L'unica operazione consentita su criteri bloccato è ExtendImmutabilityPolicy azione. Valore ETag in If-Match è obbligatorio per questa operazione.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: ifMatch
      type:
      - string
      description: >
        La versione dello stato (ETag) di entità dei criteri di immutabilità da aggiornare. Un valore di "*" può essere usato per applicare l'operazione solo se i criteri di immutabilità esistono già. Se omesso, questa operazione verrà sempre applicata.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Imposta il criterio ImmutabilityPolicy bloccato sullo stato. L'unica operazione consentita su criteri bloccato è ExtendImmutabilityPolicy azione. Valore ETag in If-Match è obbligatorio per questa operazione.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Imposta il criterio ImmutabilityPolicy bloccato sullo stato. L'unica operazione consentita su criteri bloccato è ExtendImmutabilityPolicy azione. Valore ETag in If-Match è obbligatorio per questa operazione.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: function, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
  name: lockImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Imposta il criterio ImmutabilityPolicy bloccato sullo stato. L'unica operazione consentita su criteri bloccato è ExtendImmutabilityPolicy azione. Valore ETag in If-Match è obbligatorio per questa operazione.
  syntax:
    content: 'function lockImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: ifMatch
      type:
      - string
      description: >
        La versione dello stato (ETag) di entità dei criteri di immutabilità da aggiornare. Un valore di "*" può essere usato per applicare l'operazione solo se i criteri di immutabilità esistono già. Se omesso, questa operazione verrà sempre applicata.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Set legali contengono tag. Impostare gli stessi risultati di tag in un'operazione idempotente. SetLegalHold segue un modello di accodamento e non cancellare out i tag esistenti che non sono specificati nella richiesta.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: tags
      type:
      - string[]
      description: >
        Ogni tag deve essere compreso tra 3 e 23 caratteri alfanumerici e viene normalizzata in lettere minuscole in Criteri di restrizione software.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold_1
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Set legali contengono tag. Impostare gli stessi risultati di tag in un'operazione idempotente. SetLegalHold segue un modello di accodamento e non cancellare out i tag esistenti che non sono specificati nella richiesta.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold_2
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Set legali contengono tag. Impostare gli stessi risultati di tag in un'operazione idempotente. SetLegalHold segue un modello di accodamento e non cancellare out i tag esistenti che non sono specificati nella richiesta.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: function, callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
  name: setLegalHoldWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Set legali contengono tag. Impostare gli stessi risultati di tag in un'operazione idempotente. SetLegalHold segue un modello di accodamento e non cancellare out i tag esistenti che non sono specificati nella richiesta.
  syntax:
    content: 'function setLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: tags
      type:
      - string[]
      description: >
        Ogni tag deve essere compreso tra 3 e 23 caratteri alfanumerici e viene normalizzata in lettere minuscole in Criteri di restrizione software.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiorna le proprietà del contenitore come specificato nel corpo della richiesta. Proprietà non citate nella richiesta sarà invariata. Aggiornamento non riesce se il contenitore specificato non esiste già.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiorna le proprietà del contenitore come specificato nel corpo della richiesta. Proprietà non citate nella richiesta sarà invariata. Aggiornamento non riesce se il contenitore specificato non esiste già.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiorna le proprietà del contenitore come specificato nel corpo della richiesta. Proprietà non citate nella richiesta sarà invariata. Aggiornamento non riesce se il contenitore specificato non esiste già.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options: function, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiorna le proprietà del contenitore come specificato nel corpo della richiesta. Proprietà non citate nella richiesta sarà invariata. Aggiornamento non riesce se il contenitore specificato non esiste già.
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Il nome del gruppo di risorse nella sottoscrizione dell'utente. Il nome è maiuscole e minuscole.
    - id: accountName
      type:
      - string
      description: >
        Il nome dell'account di archiviazione all'interno del gruppo di risorse specificato. I nomi degli account di archiviazione devono essere di lunghezza compresa tra 3 e 24 caratteri e utilizzare solo numeri e lettere minuscole.
    - id: containerName
      type:
      - string
      description: >
        Il nome del contenitore blob all'interno dell'account di archiviazione specificato. I nomi dei contenitori BLOB deve essere di lunghezza compresa tra 3 e 63 caratteri e utilizzare numeri, lettere e trattini (-).

        Ogni trattino (-) deve essere immediatamente preceduto e seguito da una lettera o un numero.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
references:
- uid: Promise<azure-arm-storage.LegalHold>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.LegalHold>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.BlobContainer>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.BlobContainer>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>'
    fullName: '>'
- uid: Promise<azure-arm-storage.ImmutabilityPolicy>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.ListContainerItems>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ListContainerItems>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>>'
    fullName: '>>'
