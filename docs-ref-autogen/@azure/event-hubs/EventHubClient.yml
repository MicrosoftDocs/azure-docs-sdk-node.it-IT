### YamlMime:UniversalReference
ms.openlocfilehash: 8d938a3c6a00b78d7c7dfd44eebfa476424900af
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 12/13/2018
ms.locfileid: "52042606"
items:
- uid: '@azure/event-hubs.EventHubClient'
  name: EventHubClient
  fullName: EventHubClient
  children:
  - '@azure/event-hubs.EventHubClient.close'
  - '@azure/event-hubs.EventHubClient.connectionId'
  - '@azure/event-hubs.EventHubClient.createFromAadTokenCredentials'
  - '@azure/event-hubs.EventHubClient.createFromConnectionString'
  - '@azure/event-hubs.EventHubClient.createFromIotHubConnectionString'
  - '@azure/event-hubs.EventHubClient.createFromTokenProvider'
  - '@azure/event-hubs.EventHubClient.constructor'
  - '@azure/event-hubs.EventHubClient.eventhubName'
  - '@azure/event-hubs.EventHubClient.getHubRuntimeInformation'
  - '@azure/event-hubs.EventHubClient.getPartitionIds'
  - '@azure/event-hubs.EventHubClient.getPartitionInformation'
  - '@azure/event-hubs.EventHubClient.receive'
  - '@azure/event-hubs.EventHubClient.receiveBatch'
  - '@azure/event-hubs.EventHubClient.send'
  - '@azure/event-hubs.EventHubClient.sendBatch'
  langs:
  - typeScript
  type: class
  summary: ''
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.close'
  name: close()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-101">Chiude la connessione AMQP per l'Hub eventi per questo client, la restituzione di un suggerimento che viene risolto quando viene completata la disconnessione.</span><span class="sxs-lookup"><span data-stu-id="75807-101">Closes the AMQP connection to the Event Hub for this client, returning a promise that will be resolved when disconnection is completed.</span></span>
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.connectionId'
  name: connectionId
  fullName: connectionId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="75807-102">{string} [connectionId] Id connessione amqp che identifica in modo univoco la connessione all'interno di un processo.</span><span class="sxs-lookup"><span data-stu-id="75807-102">{string} [connectionId] The amqp connection id that uniquely identifies the connection within a process.</span></span>
  optional: true
  syntax:
    content: 'connectionId?: undefined | string'
    return:
      type:
      - undefined | string
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.createFromAadTokenCredentials'
  name: createFromAadTokenCredentials(string, string, ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, ClientOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-103">Crea un Client di hub eventi da AADTokenCredentials.</span><span class="sxs-lookup"><span data-stu-id="75807-103">Creates an EventHub Client from AADTokenCredentials.</span></span>
  syntax:
    content: 'static function createFromAadTokenCredentials(host: string, entityPath: string, credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, options?: ClientOptionsBase)'
    parameters:
    - id: host
      type:
      - string
      description: <span data-ttu-id="75807-104">Nome di dominio completo per gli hub eventi.</span><span class="sxs-lookup"><span data-stu-id="75807-104">Fully qualified domain name for Event Hubs.</span></span> <span data-ttu-id="75807-105">Molto probabilmente, <yournamespace>. servicebus.windows.net</span><span class="sxs-lookup"><span data-stu-id="75807-105">Most likely, <yournamespace>.servicebus.windows.net</span></span>
    - id: entityPath
      type:
      - string
      description: <span data-ttu-id="75807-106">Percorso dell'hub eventi del modulo 'my-eventi-hub-name'</span><span class="sxs-lookup"><span data-stu-id="75807-106">EventHub path of the form 'my-event-hub-name'</span></span>
    - id: credentials
      type:
      - ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials
      description: '<span data-ttu-id="75807-107">Le credenziali del Token di AAD.</span><span class="sxs-lookup"><span data-stu-id="75807-107">The AAD Token credentials.</span></span> <span data-ttu-id="75807-108">Pu√≤ essere uno dei seguenti: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials.</span><span class="sxs-lookup"><span data-stu-id="75807-108">It can be one of the following: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials.</span></span>'
    - id: options
      type:
      - '@azure/event-hubs.ClientOptionsBase'
      description: <span data-ttu-id="75807-109">Le opzioni che possono essere specificate durante la creazione di client.</span><span class="sxs-lookup"><span data-stu-id="75807-109">The options that can be provided during client creation.</span></span>
      optional: true
    return:
      type:
      - '@azure/event-hubs.EventHubClient'
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.createFromConnectionString'
  name: createFromConnectionString(string, undefined | string, ClientOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-110">Crea un Client di hub eventi dalla stringa di connessione.</span><span class="sxs-lookup"><span data-stu-id="75807-110">Creates an EventHub Client from connection string.</span></span>
  syntax:
    content: 'static function createFromConnectionString(connectionString: string, path?: undefined | string, options?: ClientOptions)'
    parameters:
    - id: connectionString
      type:
      - string
      description: <span data-ttu-id="75807-111">Stringa di connessione nel formato ' Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/; SharedAccessKeyName = my-SA-name; SharedAccessKey = my-SA-key'</span><span class="sxs-lookup"><span data-stu-id="75807-111">Connection string of the form 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'</span></span>
    - id: path
      type:
      - undefined | string
      description: ''
      optional: true
    - id: options
      type:
      - '@azure/event-hubs.ClientOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-hubs.EventHubClient'
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.createFromIotHubConnectionString'
  name: createFromIotHubConnectionString(string, ClientOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-112">Crea un Client di hub eventi dalla stringa di connessione.</span><span class="sxs-lookup"><span data-stu-id="75807-112">Creates an EventHub Client from connection string.</span></span>
  syntax:
    content: 'static function createFromIotHubConnectionString(iothubConnectionString: string, options?: ClientOptions)'
    parameters:
    - id: iothubConnectionString
      type:
      - string
      description: <span data-ttu-id="75807-113">Stringa di connessione nel formato ' HostName = nome-host-iot; SharedAccessKeyName = my-SA-name; SharedAccessKey = my-SA-key'</span><span class="sxs-lookup"><span data-stu-id="75807-113">Connection string of the form 'HostName=iot-host-name;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'</span></span>
    - id: options
      type:
      - '@azure/event-hubs.ClientOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/event-hubs.EventHubClient>
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.createFromTokenProvider'
  name: createFromTokenProvider(string, string, TokenProvider, ClientOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-114">Crea un Client di hub eventi da un provider di token generico.</span><span class="sxs-lookup"><span data-stu-id="75807-114">Creates an EventHub Client from a generic token provider.</span></span>
  syntax:
    content: 'static function createFromTokenProvider(host: string, entityPath: string, tokenProvider: TokenProvider, options?: ClientOptionsBase)'
    parameters:
    - id: host
      type:
      - string
      description: <span data-ttu-id="75807-115">Nome di dominio completo per gli hub eventi.</span><span class="sxs-lookup"><span data-stu-id="75807-115">Fully qualified domain name for Event Hubs.</span></span> <span data-ttu-id="75807-116">Molto probabilmente, <yournamespace>. servicebus.windows.net</span><span class="sxs-lookup"><span data-stu-id="75807-116">Most likely, <yournamespace>.servicebus.windows.net</span></span>
    - id: entityPath
      type:
      - string
      description: <span data-ttu-id="75807-117">Percorso dell'hub eventi del modulo 'my-eventi-hub-name'</span><span class="sxs-lookup"><span data-stu-id="75807-117">EventHub path of the form 'my-event-hub-name'</span></span>
    - id: tokenProvider
      type:
      - TokenProvider
      description: <span data-ttu-id="75807-118">Il provider di token che implementa l'interfaccia TokenProvider.</span><span class="sxs-lookup"><span data-stu-id="75807-118">Your token provider that implements the TokenProvider interface.</span></span>
    - id: options
      type:
      - '@azure/event-hubs.ClientOptionsBase'
      description: <span data-ttu-id="75807-119">Le opzioni che possono essere specificate durante la creazione di client.</span><span class="sxs-lookup"><span data-stu-id="75807-119">The options that can be provided during client creation.</span></span>
      optional: true
    return:
      type:
      - '@azure/event-hubs.EventHubClient'
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.constructor'
  name: EventHubClient(EventHubConnectionConfig, ClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-120">Crea un'istanza di un client che punta all'Hub eventi specificato da questa configurazione.</span><span class="sxs-lookup"><span data-stu-id="75807-120">Instantiates a client pointing to the Event Hub given by this configuration.</span></span>
  syntax:
    content: 'new EventHubClient(config: EventHubConnectionConfig, options?: ClientOptions)'
    parameters:
    - id: config
      type:
      - EventHubConnectionConfig
      description: <span data-ttu-id="75807-121">Configurazione della connessione per creare il Client di hub eventi.</span><span class="sxs-lookup"><span data-stu-id="75807-121">The connection configuration to create the EventHub Client.</span></span>
    - id: options
      type:
      - '@azure/event-hubs.ClientOptions'
      description: >
        <span data-ttu-id="75807-122">I parametri facoltativi che possono essere forniti al costruttore del Client di hub eventi.</span><span class="sxs-lookup"><span data-stu-id="75807-122">The optional parameters that can be provided to the EventHub Client constructor.</span></span>
      optional: true
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.eventhubName'
  name: eventhubName
  fullName: eventhubName
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="75807-123">{stringa} eventhubName il nome dell'hub eventi.</span><span class="sxs-lookup"><span data-stu-id="75807-123">{string} eventhubName The name of the Eventhub.</span></span>
  syntax:
    content: 'eventhubName: string'
    return:
      type:
      - string
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.getHubRuntimeInformation'
  name: getHubRuntimeInformation()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-124">Fornisce le informazioni di runtime di hub eventi.</span><span class="sxs-lookup"><span data-stu-id="75807-124">Provides the eventhub runtime information.</span></span>
  syntax:
    content: function getHubRuntimeInformation()
    parameters: []
    return:
      type:
      - Promise<@azure/event-hubs.EventHubRuntimeInformation>
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.getPartitionIds'
  name: getPartitionIds()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-125">Fornisce una matrice di partitionIds.</span><span class="sxs-lookup"><span data-stu-id="75807-125">Provides an array of partitionIds.</span></span>
  syntax:
    content: function getPartitionIds()
    parameters: []
    return:
      type:
      - Promise<Array<string>>
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.getPartitionInformation'
  name: getPartitionInformation(string | number)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-126">Vengono fornite informazioni sulla partizione specificata.</span><span class="sxs-lookup"><span data-stu-id="75807-126">Provides information about the specified partition.</span></span>
  syntax:
    content: 'function getPartitionInformation(partitionId: string | number)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: <span data-ttu-id="75807-127">ID di partizione per la partizione in cui sono richieste informazioni.</span><span class="sxs-lookup"><span data-stu-id="75807-127">Partition ID for which partition information is required.</span></span>
    return:
      type:
      - Promise<@azure/event-hubs.EventHubPartitionRuntimeInformation>
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.receive'
  name: receive(string | number, OnMessage, OnError, ReceiveOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-128">Avvia il ricevitore per stabilire una sessione AMQP e un collegamento ricevitore AMQP nella sessione.</span><span class="sxs-lookup"><span data-stu-id="75807-128">Starts the receiver by establishing an AMQP session and an AMQP receiver link on the session.</span></span> <span data-ttu-id="75807-129">I messaggi verranno passati al gestore onMessage fornito ed errore verr√† passato al gestore onError fornito.</span><span class="sxs-lookup"><span data-stu-id="75807-129">Messages will be passed to the provided onMessage handler and error will be passed to the provided onError handler.</span></span>
  syntax:
    content: 'function receive(partitionId: string | number, onMessage: OnMessage, onError: OnError, options?: ReceiveOptions)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: <span data-ttu-id="75807-130">ID di partizione da cui ricevere.</span><span class="sxs-lookup"><span data-stu-id="75807-130">Partition ID from which to receive.</span></span>
    - id: onMessage
      type:
      - '@azure/event-hubs.OnMessage'
      description: <span data-ttu-id="75807-131">Il gestore di messaggi per ricevere gli oggetti dati di evento.</span><span class="sxs-lookup"><span data-stu-id="75807-131">The message handler to receive event data objects.</span></span>
    - id: onError
      type:
      - '@azure/event-hubs.OnError'
      description: <span data-ttu-id="75807-132">Il gestore degli errori per ricevere un errore che si verifica durante la ricezione di messaggi.</span><span class="sxs-lookup"><span data-stu-id="75807-132">The error handler to receive an error that occurs while receiving messages.</span></span>
    - id: options
      type:
      - '@azure/event-hubs.ReceiveOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-hubs.ReceiveHandler'
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.receiveBatch'
  name: receiveBatch(string | number, number, undefined | number, ReceiveOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-133">Riceve un batch di oggetti EventData da una partizione di hub eventi per un conteggio specificato e un determinato massimo tempo di attesa in secondi, a seconda di quale si verifica per primo.</span><span class="sxs-lookup"><span data-stu-id="75807-133">Receives a batch of EventData objects from an EventHub partition for a given count and a given max wait time in seconds, whichever happens first.</span></span> <span data-ttu-id="75807-134">Questo metodo pu√≤ essere utilizzato direttamente dopo la creazione dell'oggetto destinatario e **non deve** essere utilizzato con il `start()` (metodo).</span><span class="sxs-lookup"><span data-stu-id="75807-134">This method can be used directly after creating the receiver object and **MUST NOT** be used along with the `start()` method.</span></span>
  syntax:
    content: 'function receiveBatch(partitionId: string | number, maxMessageCount: number, maxWaitTimeInSeconds?: undefined | number, options?: ReceiveOptions)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: <span data-ttu-id="75807-135">ID di partizione da cui ricevere.</span><span class="sxs-lookup"><span data-stu-id="75807-135">Partition ID from which to receive.</span></span>
    - id: maxMessageCount
      type:
      - number
      description: <span data-ttu-id="75807-136">Il numero massimo di messaggi.</span><span class="sxs-lookup"><span data-stu-id="75807-136">The maximum message count.</span></span> <span data-ttu-id="75807-137">Deve essere un valore maggiore di 0.</span><span class="sxs-lookup"><span data-stu-id="75807-137">Must be a value greater than 0.</span></span>
    - id: maxWaitTimeInSeconds
      type:
      - undefined | number
      description: ''
      optional: true
    - id: options
      type:
      - '@azure/event-hubs.ReceiveOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/event-hubs.EventData[]>
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.send'
  name: send(EventData, string | number)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-138">Invia il messaggio all'hub eventi.</span><span class="sxs-lookup"><span data-stu-id="75807-138">Sends the given message to the EventHub.</span></span>
  syntax:
    content: 'function send(data: EventData, partitionId?: string | number)'
    parameters:
    - id: data
      type:
      - '@azure/event-hubs.EventData'
      description: <span data-ttu-id="75807-139">Messaggio da inviare.</span><span class="sxs-lookup"><span data-stu-id="75807-139">Message to send.</span></span>  <span data-ttu-id="75807-140">Verr√† inviato come stringa JSON con codifica UTF8.</span><span class="sxs-lookup"><span data-stu-id="75807-140">Will be sent as UTF8-encoded JSON string.</span></span>
    - id: partitionId
      type:
      - string | number
      description: ''
      optional: true
    return:
      type:
      - Promise<Delivery>
  package: '@azure/event-hubs'
- uid: '@azure/event-hubs.EventHubClient.sendBatch'
  name: sendBatch(EventData[], string | number)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="75807-141">Inviare un batch di EventData all'hub eventi.</span><span class="sxs-lookup"><span data-stu-id="75807-141">Send a batch of EventData to the EventHub.</span></span> <span data-ttu-id="75807-142">Il "message_annotations", "application_properties" e "propriet√†" del primo messaggio verr√† impostata come che della busta (messaggio batch).</span><span class="sxs-lookup"><span data-stu-id="75807-142">The "message_annotations", "application_properties" and "properties" of the first message will be set as that of the envelope (batch message).</span></span>
  syntax:
    content: 'function sendBatch(datas: EventData[], partitionId?: string | number)'
    parameters:
    - id: datas
      type:
      - '@azure/event-hubs.EventData[]'
      description: <span data-ttu-id="75807-143">Una matrice di oggetti EventData da inviare in un messaggio Batch.</span><span class="sxs-lookup"><span data-stu-id="75807-143">An array of EventData objects to be sent in a Batch message.</span></span>
    - id: partitionId
      type:
      - string | number
      description: ''
      optional: true
    return:
      type:
      - Promise<Delivery>
  package: '@azure/event-hubs'
references:
- uid: '@azure/event-hubs.ClientOptions'
  name: ClientOptions
  spec.typeScript:
  - name: ClientOptions
    fullName: ClientOptions
    uid: '@azure/event-hubs.ClientOptions'
- uid: Promise<@azure/event-hubs.EventHubRuntimeInformation>
  name: EventHubRuntimeInformation>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventHubRuntimeInformation
    fullName: EventHubRuntimeInformation
    uid: '@azure/event-hubs.EventHubRuntimeInformation'
  - name: '>'
    fullName: '>'
- uid: Promise<@azure/event-hubs.EventHubPartitionRuntimeInformation>
  name: EventHubPartitionRuntimeInformation>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventHubPartitionRuntimeInformation
    fullName: EventHubPartitionRuntimeInformation
    uid: '@azure/event-hubs.EventHubPartitionRuntimeInformation'
  - name: '>'
    fullName: '>'
- uid: '@azure/event-hubs.OnMessage'
  name: OnMessage
  spec.typeScript:
  - name: OnMessage
    fullName: OnMessage
    uid: '@azure/event-hubs.OnMessage'
- uid: '@azure/event-hubs.OnError'
  name: OnError
  spec.typeScript:
  - name: OnError
    fullName: OnError
    uid: '@azure/event-hubs.OnError'
- uid: '@azure/event-hubs.ReceiveOptions'
  name: ReceiveOptions
  spec.typeScript:
  - name: ReceiveOptions
    fullName: ReceiveOptions
    uid: '@azure/event-hubs.ReceiveOptions'
- uid: '@azure/event-hubs.ReceiveHandler'
  name: ReceiveHandler
  spec.typeScript:
  - name: ReceiveHandler
    fullName: ReceiveHandler
    uid: '@azure/event-hubs.ReceiveHandler'
- uid: Promise<@azure/event-hubs.EventData[]>
  name: EventData[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventData
    fullName: EventData
    uid: '@azure/event-hubs.EventData'
  - name: '[]>'
    fullName: '[]>'
- uid: '@azure/event-hubs.EventData'
  name: EventData
  spec.typeScript:
  - name: EventData
    fullName: EventData
    uid: '@azure/event-hubs.EventData'
- uid: '@azure/event-hubs.EventData[]'
  name: EventData[]
  spec.typeScript:
  - name: EventData
    fullName: EventData
    uid: '@azure/event-hubs.EventData'
  - name: '[]'
    fullName: '[]'
- uid: '@azure/event-hubs.ClientOptionsBase'
  name: ClientOptionsBase
  spec.typeScript:
  - name: ClientOptionsBase
    fullName: ClientOptionsBase
    uid: '@azure/event-hubs.ClientOptionsBase'
- uid: '@azure/event-hubs.EventHubClient'
  name: EventHubClient
  spec.typeScript:
  - name: EventHubClient
    fullName: EventHubClient
    uid: '@azure/event-hubs.EventHubClient'
- uid: Promise<@azure/event-hubs.EventHubClient>
  name: EventHubClient>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventHubClient
    fullName: EventHubClient
    uid: '@azure/event-hubs.EventHubClient'
  - name: '>'
    fullName: '>'
