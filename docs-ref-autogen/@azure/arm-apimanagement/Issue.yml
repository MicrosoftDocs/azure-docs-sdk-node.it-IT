### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.Issue'
    name: Issue
    fullName: Issue
    children:
      - '@azure/arm-apimanagement.Issue.get'
      - '@azure/arm-apimanagement.Issue.get_2'
      - '@azure/arm-apimanagement.Issue.get_1'
      - '@azure/arm-apimanagement.Issue.constructor'
      - '@azure/arm-apimanagement.Issue.listByService_2'
      - '@azure/arm-apimanagement.Issue.listByService'
      - '@azure/arm-apimanagement.Issue.listByService_1'
      - '@azure/arm-apimanagement.Issue.listByServiceNext'
      - '@azure/arm-apimanagement.Issue.listByServiceNext_2'
      - '@azure/arm-apimanagement.Issue.listByServiceNext_1'
    langs:
      - typeScript
    type: class
    summary: Classe che rappresenta un problema.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Issue.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ottiene i dettagli del problema di gestione API
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, issueId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nome del gruppo di risorse.
        - id: serviceName
          type:
            - string
          description: Il nome del servizio Gestione API.
        - id: issueId
          type:
            - string
          description: Problema identificatore. Deve essere univoco nell'istanza del servizio Gestione API corrente.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IssueGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Issue.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<IssueContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, issueId: string, options: RequestOptionsBase, callback: ServiceCallback<IssueContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nome del gruppo di risorse.
        - id: serviceName
          type:
            - string
          description: Il nome del servizio Gestione API.
        - id: issueId
          type:
            - string
          description: Problema identificatore. Deve essere univoco nell'istanza del servizio Gestione API corrente.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueContract>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.IssueGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Issue.get_1'
    name: 'get(string, string, string, ServiceCallback<IssueContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, issueId: string, callback: ServiceCallback<IssueContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nome del gruppo di risorse.
        - id: serviceName
          type:
            - string
          description: Il nome del servizio Gestione API.
        - id: issueId
          type:
            - string
          description: Problema identificatore. Deve essere univoco nell'istanza del servizio Gestione API corrente.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueContract>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.IssueGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Issue.constructor'
    name: Issue(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creare un problema.
    syntax:
      content: 'new Issue(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Riferimento al client del servizio.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Issue.listByService_2'
    name: 'listByService(string, string, IssueListByServiceOptionalParams, ServiceCallback<IssueCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options: IssueListByServiceOptionalParams, callback: ServiceCallback<IssueCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nome del gruppo di risorse.
        - id: serviceName
          type:
            - string
          description: Il nome del servizio Gestione API.
        - id: options
          type:
            - '@azure/arm-apimanagement.IssueListByServiceOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueCollection>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.IssueListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Issue.listByService'
    name: 'listByService(string, string, Models.IssueListByServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Elenca una raccolta di problemi nell'istanza del servizio specificato.
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options?: Models.IssueListByServiceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nome del gruppo di risorse.
        - id: serviceName
          type:
            - string
          description: Il nome del servizio Gestione API.
        - id: options
          type:
            - Models.IssueListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IssueListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Issue.listByService_1'
    name: 'listByService(string, string, ServiceCallback<IssueCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, callback: ServiceCallback<IssueCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nome del gruppo di risorse.
        - id: serviceName
          type:
            - string
          description: Il nome del servizio Gestione API.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueCollection>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.IssueListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Issue.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Elenca una raccolta di problemi nell'istanza del servizio specificato.
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.IssueListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Issue.listByServiceNext_2'
    name: 'listByServiceNext(string, RequestOptionsBase, ServiceCallback<IssueCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<IssueCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueCollection>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.IssueListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Issue.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<IssueCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<IssueCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.IssueCollection>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.IssueListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: ServiceCallback<@azure/arm-apimanagement.IssueContract>
    name: IssueContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IssueContract
        fullName: IssueContract
        uid: '@azure/arm-apimanagement.IssueContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.IssueCollection>
    name: IssueCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IssueCollection
        fullName: IssueCollection
        uid: '@azure/arm-apimanagement.IssueCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.IssueListByServiceOptionalParams'
    name: IssueListByServiceOptionalParams
    spec.typeScript:
      - name: IssueListByServiceOptionalParams
        fullName: IssueListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.IssueListByServiceOptionalParams'