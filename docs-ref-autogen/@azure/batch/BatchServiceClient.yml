### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.BatchServiceClient'
    name: BatchServiceClient
    fullName: BatchServiceClient
    children:
      - '@azure/batch.BatchServiceClient.acceptLanguage'
      - '@azure/batch.BatchServiceClient.account'
      - '@azure/batch.BatchServiceClient.apiVersion'
      - '@azure/batch.BatchServiceClient.application'
      - '@azure/batch.BatchServiceClient.constructor'
      - '@azure/batch.BatchServiceClient.batchUrl'
      - '@azure/batch.BatchServiceClient.beginLongRunningRequest'
      - '@azure/batch.BatchServiceClient.certificate'
      - '@azure/batch.BatchServiceClient.computeNode'
      - '@azure/batch.BatchServiceClient.credentials'
      - '@azure/batch.BatchServiceClient.file'
      - '@azure/batch.BatchServiceClient.job'
      - '@azure/batch.BatchServiceClient.jobSchedule'
      - '@azure/batch.BatchServiceClient.longRunningOperationRetryTimeout'
      - '@azure/batch.BatchServiceClient.pool'
      - '@azure/batch.BatchServiceClient.restoreLROPoller'
      - '@azure/batch.BatchServiceClient.sendLongRunningRequest'
      - '@azure/batch.BatchServiceClient.sendLRORequest'
      - '@azure/batch.BatchServiceClient.sendOperationRequest'
      - '@azure/batch.BatchServiceClient.sendRequest'
      - '@azure/batch.BatchServiceClient.task'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/batch.BatchServiceClientContext'
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.account'
    name: account
    fullName: account
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'account: Account'
      return:
        type:
          - '@azure/batch.Account'
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.application'
    name: application
    fullName: application
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'application: Application'
      return:
        type:
          - '@azure/batch.Application'
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.constructor'
    name: 'BatchServiceClient(ServiceClientCredentials, string, msRestAzure.AzureServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Inizializza una nuova istanza della classe BatchServiceClient.
    syntax:
      content: 'new BatchServiceClient(credentials: ServiceClientCredentials, batchUrl: string, options?: msRestAzure.AzureServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credenziali necessarie per il client per connettersi ad Azure.
        - id: batchUrl
          type:
            - string
          description: L'URL di base per tutte le richieste di servizio di Azure Batch.
        - id: options
          type:
            - msRestAzure.AzureServiceClientOptions
          description: ''
          optional: true
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.batchUrl'
    name: batchUrl
    fullName: batchUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'batchUrl: string'
      return:
        type:
          - string
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inviare la richiesta iniziale di un operazioni a esecuzione Prolungata (operazione a esecuzione prolungata) e ottenere nuovamente un HttpLongRunningOperationResponse che fornisce metodi per il polling di operazioni a esecuzione Prolungata e verifica se le operazioni a esecuzione Prolungata è stata completata.
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: L'oggetto richiesta
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.certificate'
    name: certificate
    fullName: certificate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'certificate: CertificateOperations'
      return:
        type:
          - '@azure/batch.CertificateOperations'
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.computeNode'
    name: computeNode
    fullName: computeNode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'computeNode: ComputeNodeOperations'
      return:
        type:
          - '@azure/batch.ComputeNodeOperations'
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.file'
    name: file
    fullName: file
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'file: File'
      return:
        type:
          - '@azure/batch.File'
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.job'
    name: job
    fullName: job
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'job: Job'
      return:
        type:
          - '@azure/batch.Job'
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.jobSchedule'
    name: jobSchedule
    fullName: jobSchedule
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'jobSchedule: JobSchedule'
      return:
        type:
          - '@azure/batch.JobSchedule'
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: Il timeout di ripetizione dei tentativi in secondi per operazioni con esecuzione prolungata. Il valore predefinito è 30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.pool'
    name: pool
    fullName: pool
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'pool: Pool'
      return:
        type:
          - '@azure/batch.Pool'
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: Ripristinare un LROPoller dal LROPollState fornito. Questo metodo può essere utilizzato per ricreare un LROPoller su un altro processo o computer.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Fornisce un meccanismo per eseguire una richiesta che si esegue il polling e fornirà il risultato finale.
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: L'oggetto richiesta
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inviare la richiesta iniziale di un operazioni a esecuzione Prolungata (operazione a esecuzione prolungata) e ottenere nuovamente un LROPoller che fornisce metodi per il polling di operazioni a esecuzione Prolungata e verifica se le operazioni a esecuzione Prolungata è stata completata.
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Gli argomenti per l'operazione.
        - id: operationSpec
          type:
            - OperationSpec
          description: Specifica per l'operazione.
        - id: options
          type:
            - RequestOptionsBase
          description: Opzioni aggiuntive da inviare durante la richiesta.
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inviare una richiesta HTTP che viene popolata usando il OperationSpec fornito.
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Gli argomenti che verranno popolati con i valori basati su modelli della richiesta HTTP.
        - id: operationSpec
          type:
            - OperationSpec
          description: OperationSpec da usare per popolare il httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Callback da chiamare quando viene ricevuta la risposta.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invio di richiesta HTTP specificato.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.BatchServiceClient.task'
    name: task
    fullName: task
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'task: Task'
      return:
        type:
          - '@azure/batch.Task'
    package: '@azure/batch'
references:
  - uid: '@azure/batch.BatchServiceClientContext'
    name: BatchServiceClientContext
    spec.typeScript:
      - name: BatchServiceClientContext
        fullName: BatchServiceClientContext
        uid: '@azure/batch.BatchServiceClientContext'
  - uid: '@azure/batch.Account'
    name: Account
    spec.typeScript:
      - name: Account
        fullName: Account
        uid: '@azure/batch.Account'
  - uid: '@azure/batch.Application'
    name: Application
    spec.typeScript:
      - name: Application
        fullName: Application
        uid: '@azure/batch.Application'
  - uid: '@azure/batch.CertificateOperations'
    name: CertificateOperations
    spec.typeScript:
      - name: CertificateOperations
        fullName: CertificateOperations
        uid: '@azure/batch.CertificateOperations'
  - uid: '@azure/batch.ComputeNodeOperations'
    name: ComputeNodeOperations
    spec.typeScript:
      - name: ComputeNodeOperations
        fullName: ComputeNodeOperations
        uid: '@azure/batch.ComputeNodeOperations'
  - uid: '@azure/batch.File'
    name: File
    spec.typeScript:
      - name: File
        fullName: File
        uid: '@azure/batch.File'
  - uid: '@azure/batch.Job'
    name: Job
    spec.typeScript:
      - name: Job
        fullName: Job
        uid: '@azure/batch.Job'
  - uid: '@azure/batch.JobSchedule'
    name: JobSchedule
    spec.typeScript:
      - name: JobSchedule
        fullName: JobSchedule
        uid: '@azure/batch.JobSchedule'
  - uid: '@azure/batch.Pool'
    name: Pool
    spec.typeScript:
      - name: Pool
        fullName: Pool
        uid: '@azure/batch.Pool'
  - uid: '@azure/batch.Task'
    name: Task
    spec.typeScript:
      - name: Task
        fullName: Task
        uid: '@azure/batch.Task'