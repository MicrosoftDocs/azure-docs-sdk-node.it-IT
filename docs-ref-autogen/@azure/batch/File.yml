### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.File'
    name: File
    fullName: File
    children:
      - '@azure/batch.File.deleteFromComputeNode_2'
      - '@azure/batch.File.deleteFromComputeNode'
      - '@azure/batch.File.deleteFromComputeNode_1'
      - '@azure/batch.File.deleteFromTask_2'
      - '@azure/batch.File.deleteFromTask'
      - '@azure/batch.File.deleteFromTask_1'
      - '@azure/batch.File.constructor'
      - '@azure/batch.File.getFromComputeNode_2'
      - '@azure/batch.File.getFromComputeNode'
      - '@azure/batch.File.getFromComputeNode_1'
      - '@azure/batch.File.getFromTask_2'
      - '@azure/batch.File.getFromTask'
      - '@azure/batch.File.getFromTask_1'
      - '@azure/batch.File.getPropertiesFromComputeNode_2'
      - '@azure/batch.File.getPropertiesFromComputeNode'
      - '@azure/batch.File.getPropertiesFromComputeNode_1'
      - '@azure/batch.File.getPropertiesFromTask_2'
      - '@azure/batch.File.getPropertiesFromTask'
      - '@azure/batch.File.getPropertiesFromTask_1'
      - '@azure/batch.File.listFromComputeNode_2'
      - '@azure/batch.File.listFromComputeNode'
      - '@azure/batch.File.listFromComputeNode_1'
      - '@azure/batch.File.listFromComputeNodeNext_2'
      - '@azure/batch.File.listFromComputeNodeNext'
      - '@azure/batch.File.listFromComputeNodeNext_1'
      - '@azure/batch.File.listFromTask_2'
      - '@azure/batch.File.listFromTask'
      - '@azure/batch.File.listFromTask_1'
      - '@azure/batch.File.listFromTaskNext_2'
      - '@azure/batch.File.listFromTaskNext'
      - '@azure/batch.File.listFromTaskNext_1'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="22a48-101">Classe che rappresenta un File.</span><span class="sxs-lookup"><span data-stu-id="22a48-101">Class representing a File.</span></span>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromComputeNode_2'
    name: 'deleteFromComputeNode(string, string, string, FileDeleteFromComputeNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, options: FileDeleteFromComputeNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-102">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-102">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-103">ID del nodo di calcolo dal quale si desidera eliminare il file.</span><span class="sxs-lookup"><span data-stu-id="22a48-103">The ID of the compute node from which you want to delete the file.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-104">Il percorso del file o directory che si desidera eliminare.</span><span class="sxs-lookup"><span data-stu-id="22a48-104">The path to the file or directory that you want to delete.</span></span>
        - id: options
          type:
            - '@azure/batch.FileDeleteFromComputeNodeOptionalParams'
          description: <span data-ttu-id="22a48-105">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="22a48-105">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-106">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-106">The callback</span></span>
      return:
        type:
          - Promise<Models.FileDeleteFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromComputeNode'
    name: 'deleteFromComputeNode(string, string, string, Models.FileDeleteFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileDeleteFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-107">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-107">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-108">ID del nodo di calcolo dal quale si desidera eliminare il file.</span><span class="sxs-lookup"><span data-stu-id="22a48-108">The ID of the compute node from which you want to delete the file.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-109">Il percorso del file o directory che si desidera eliminare.</span><span class="sxs-lookup"><span data-stu-id="22a48-109">The path to the file or directory that you want to delete.</span></span>
        - id: options
          type:
            - Models.FileDeleteFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileDeleteFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromComputeNode_1'
    name: 'deleteFromComputeNode(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-110">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-110">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-111">ID del nodo di calcolo dal quale si desidera eliminare il file.</span><span class="sxs-lookup"><span data-stu-id="22a48-111">The ID of the compute node from which you want to delete the file.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-112">Il percorso del file o directory che si desidera eliminare.</span><span class="sxs-lookup"><span data-stu-id="22a48-112">The path to the file or directory that you want to delete.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-113">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-113">The callback</span></span>
      return:
        type:
          - Promise<Models.FileDeleteFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromTask_2'
    name: 'deleteFromTask(string, string, string, FileDeleteFromTaskOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromTask(jobId: string, taskId: string, filePath: string, options: FileDeleteFromTaskOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-114">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-114">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-115">L'ID dell'attività il cui file che si desidera eliminare.</span><span class="sxs-lookup"><span data-stu-id="22a48-115">The ID of the task whose file you want to delete.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-116">Il percorso al file delle attività o alla directory che si desidera eliminare.</span><span class="sxs-lookup"><span data-stu-id="22a48-116">The path to the task file or directory that you want to delete.</span></span>
        - id: options
          type:
            - '@azure/batch.FileDeleteFromTaskOptionalParams'
          description: <span data-ttu-id="22a48-117">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="22a48-117">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-118">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-118">The callback</span></span>
      return:
        type:
          - Promise<Models.FileDeleteFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromTask'
    name: 'deleteFromTask(string, string, string, Models.FileDeleteFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileDeleteFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-119">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-119">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-120">L'ID dell'attività il cui file che si desidera eliminare.</span><span class="sxs-lookup"><span data-stu-id="22a48-120">The ID of the task whose file you want to delete.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-121">Il percorso al file delle attività o alla directory che si desidera eliminare.</span><span class="sxs-lookup"><span data-stu-id="22a48-121">The path to the task file or directory that you want to delete.</span></span>
        - id: options
          type:
            - Models.FileDeleteFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileDeleteFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.deleteFromTask_1'
    name: 'deleteFromTask(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFromTask(jobId: string, taskId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-122">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-122">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-123">L'ID dell'attività il cui file che si desidera eliminare.</span><span class="sxs-lookup"><span data-stu-id="22a48-123">The ID of the task whose file you want to delete.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-124">Il percorso al file delle attività o alla directory che si desidera eliminare.</span><span class="sxs-lookup"><span data-stu-id="22a48-124">The path to the task file or directory that you want to delete.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-125">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-125">The callback</span></span>
      return:
        type:
          - Promise<Models.FileDeleteFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.constructor'
    name: File(BatchServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="22a48-126">Creare un File.</span><span class="sxs-lookup"><span data-stu-id="22a48-126">Create a File.</span></span>
    syntax:
      content: 'new File(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/batch.BatchServiceClientContext'
          description: |
            <span data-ttu-id="22a48-127">Riferimento al client del servizio.</span><span class="sxs-lookup"><span data-stu-id="22a48-127">Reference to the service client.</span></span>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromComputeNode_2'
    name: 'getFromComputeNode(string, string, string, FileGetFromComputeNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromComputeNode(poolId: string, nodeId: string, filePath: string, options: FileGetFromComputeNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-128">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-128">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-129">ID del nodo di calcolo che contiene il file.</span><span class="sxs-lookup"><span data-stu-id="22a48-129">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-130">Il percorso del file di nodo di calcolo che si desidera ottenere il contenuto di.</span><span class="sxs-lookup"><span data-stu-id="22a48-130">The path to the compute node file that you want to get the content of.</span></span>
        - id: options
          type:
            - '@azure/batch.FileGetFromComputeNodeOptionalParams'
          description: <span data-ttu-id="22a48-131">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="22a48-131">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-132">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-132">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromComputeNode'
    name: 'getFromComputeNode(string, string, string, Models.FileGetFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22a48-133">Restituisce il contenuto del file di nodo di calcolo specificato.</span><span class="sxs-lookup"><span data-stu-id="22a48-133">Returns the content of the specified compute node file.</span></span>
    syntax:
      content: 'function getFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileGetFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-134">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-134">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-135">ID del nodo di calcolo che contiene il file.</span><span class="sxs-lookup"><span data-stu-id="22a48-135">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-136">Il percorso del file di nodo di calcolo che si desidera ottenere il contenuto di.</span><span class="sxs-lookup"><span data-stu-id="22a48-136">The path to the compute node file that you want to get the content of.</span></span>
        - id: options
          type:
            - Models.FileGetFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromComputeNode_1'
    name: 'getFromComputeNode(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-137">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-137">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-138">ID del nodo di calcolo che contiene il file.</span><span class="sxs-lookup"><span data-stu-id="22a48-138">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-139">Il percorso del file di nodo di calcolo che si desidera ottenere il contenuto di.</span><span class="sxs-lookup"><span data-stu-id="22a48-139">The path to the compute node file that you want to get the content of.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-140">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-140">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromTask_2'
    name: 'getFromTask(string, string, string, FileGetFromTaskOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromTask(jobId: string, taskId: string, filePath: string, options: FileGetFromTaskOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-141">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-141">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-142">L'ID dell'attività il cui file da recuperare.</span><span class="sxs-lookup"><span data-stu-id="22a48-142">The ID of the task whose file you want to retrieve.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-143">Il percorso del file di attività che si desidera ottenere il contenuto di.</span><span class="sxs-lookup"><span data-stu-id="22a48-143">The path to the task file that you want to get the content of.</span></span>
        - id: options
          type:
            - '@azure/batch.FileGetFromTaskOptionalParams'
          description: <span data-ttu-id="22a48-144">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="22a48-144">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-145">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-145">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromTask'
    name: 'getFromTask(string, string, string, Models.FileGetFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22a48-146">Restituisce il contenuto del file delle attività specificato.</span><span class="sxs-lookup"><span data-stu-id="22a48-146">Returns the content of the specified task file.</span></span>
    syntax:
      content: 'function getFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileGetFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-147">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-147">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-148">L'ID dell'attività il cui file da recuperare.</span><span class="sxs-lookup"><span data-stu-id="22a48-148">The ID of the task whose file you want to retrieve.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-149">Il percorso del file di attività che si desidera ottenere il contenuto di.</span><span class="sxs-lookup"><span data-stu-id="22a48-149">The path to the task file that you want to get the content of.</span></span>
        - id: options
          type:
            - Models.FileGetFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getFromTask_1'
    name: 'getFromTask(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFromTask(jobId: string, taskId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-150">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-150">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-151">L'ID dell'attività il cui file da recuperare.</span><span class="sxs-lookup"><span data-stu-id="22a48-151">The ID of the task whose file you want to retrieve.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-152">Il percorso del file di attività che si desidera ottenere il contenuto di.</span><span class="sxs-lookup"><span data-stu-id="22a48-152">The path to the task file that you want to get the content of.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-153">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-153">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromComputeNode_2'
    name: 'getPropertiesFromComputeNode(string, string, string, FileGetPropertiesFromComputeNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, options: FileGetPropertiesFromComputeNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-154">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-154">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-155">ID del nodo di calcolo che contiene il file.</span><span class="sxs-lookup"><span data-stu-id="22a48-155">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-156">Il percorso del file di nodo di calcolo che si desidera ottenere le proprietà di.</span><span class="sxs-lookup"><span data-stu-id="22a48-156">The path to the compute node file that you want to get the properties of.</span></span>
        - id: options
          type:
            - '@azure/batch.FileGetPropertiesFromComputeNodeOptionalParams'
          description: <span data-ttu-id="22a48-157">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="22a48-157">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-158">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-158">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetPropertiesFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromComputeNode'
    name: 'getPropertiesFromComputeNode(string, string, string, Models.FileGetPropertiesFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22a48-159">Ottiene le proprietà del file di nodo di calcolo specificato.</span><span class="sxs-lookup"><span data-stu-id="22a48-159">Gets the properties of the specified compute node file.</span></span>
    syntax:
      content: 'function getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, options?: Models.FileGetPropertiesFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-160">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-160">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-161">ID del nodo di calcolo che contiene il file.</span><span class="sxs-lookup"><span data-stu-id="22a48-161">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-162">Il percorso del file di nodo di calcolo che si desidera ottenere le proprietà di.</span><span class="sxs-lookup"><span data-stu-id="22a48-162">The path to the compute node file that you want to get the properties of.</span></span>
        - id: options
          type:
            - Models.FileGetPropertiesFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetPropertiesFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromComputeNode_1'
    name: 'getPropertiesFromComputeNode(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromComputeNode(poolId: string, nodeId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-163">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-163">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-164">ID del nodo di calcolo che contiene il file.</span><span class="sxs-lookup"><span data-stu-id="22a48-164">The ID of the compute node that contains the file.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-165">Il percorso del file di nodo di calcolo che si desidera ottenere le proprietà di.</span><span class="sxs-lookup"><span data-stu-id="22a48-165">The path to the compute node file that you want to get the properties of.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-166">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-166">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetPropertiesFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromTask_2'
    name: 'getPropertiesFromTask(string, string, string, FileGetPropertiesFromTaskOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromTask(jobId: string, taskId: string, filePath: string, options: FileGetPropertiesFromTaskOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-167">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-167">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-168">L'ID dell'attività il cui file che si desidera ottenere le proprietà di.</span><span class="sxs-lookup"><span data-stu-id="22a48-168">The ID of the task whose file you want to get the properties of.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-169">Il percorso al file che si desidera recuperare le proprietà dell'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-169">The path to the task file that you want to get the properties of.</span></span>
        - id: options
          type:
            - '@azure/batch.FileGetPropertiesFromTaskOptionalParams'
          description: <span data-ttu-id="22a48-170">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="22a48-170">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-171">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-171">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetPropertiesFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromTask'
    name: 'getPropertiesFromTask(string, string, string, Models.FileGetPropertiesFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="22a48-172">Ottiene le proprietà del file delle attività specificato.</span><span class="sxs-lookup"><span data-stu-id="22a48-172">Gets the properties of the specified task file.</span></span>
    syntax:
      content: 'function getPropertiesFromTask(jobId: string, taskId: string, filePath: string, options?: Models.FileGetPropertiesFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-173">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-173">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-174">L'ID dell'attività il cui file che si desidera ottenere le proprietà di.</span><span class="sxs-lookup"><span data-stu-id="22a48-174">The ID of the task whose file you want to get the properties of.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-175">Il percorso al file che si desidera recuperare le proprietà dell'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-175">The path to the task file that you want to get the properties of.</span></span>
        - id: options
          type:
            - Models.FileGetPropertiesFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileGetPropertiesFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.getPropertiesFromTask_1'
    name: 'getPropertiesFromTask(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertiesFromTask(jobId: string, taskId: string, filePath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-176">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-176">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-177">L'ID dell'attività il cui file che si desidera ottenere le proprietà di.</span><span class="sxs-lookup"><span data-stu-id="22a48-177">The ID of the task whose file you want to get the properties of.</span></span>
        - id: filePath
          type:
            - string
          description: <span data-ttu-id="22a48-178">Il percorso al file che si desidera recuperare le proprietà dell'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-178">The path to the task file that you want to get the properties of.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="22a48-179">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-179">The callback</span></span>
      return:
        type:
          - Promise<Models.FileGetPropertiesFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNode_2'
    name: 'listFromComputeNode(string, string, FileListFromComputeNodeOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNode(poolId: string, nodeId: string, options: FileListFromComputeNodeOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-180">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-180">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-181">ID del nodo di calcolo di cui si desidera elencare i file.</span><span class="sxs-lookup"><span data-stu-id="22a48-181">The ID of the compute node whose files you want to list.</span></span>
        - id: options
          type:
            - '@azure/batch.FileListFromComputeNodeOptionalParams'
          description: <span data-ttu-id="22a48-182">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="22a48-182">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="22a48-183">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-183">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNode'
    name: 'listFromComputeNode(string, string, Models.FileListFromComputeNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNode(poolId: string, nodeId: string, options?: Models.FileListFromComputeNodeOptionalParams)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-184">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-184">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-185">ID del nodo di calcolo di cui si desidera elencare i file.</span><span class="sxs-lookup"><span data-stu-id="22a48-185">The ID of the compute node whose files you want to list.</span></span>
        - id: options
          type:
            - Models.FileListFromComputeNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNode_1'
    name: 'listFromComputeNode(string, string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNode(poolId: string, nodeId: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: <span data-ttu-id="22a48-186">ID del pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="22a48-186">The ID of the pool that contains the compute node.</span></span>
        - id: nodeId
          type:
            - string
          description: <span data-ttu-id="22a48-187">ID del nodo di calcolo di cui si desidera elencare i file.</span><span class="sxs-lookup"><span data-stu-id="22a48-187">The ID of the compute node whose files you want to list.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="22a48-188">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-188">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNodeNext_2'
    name: 'listFromComputeNodeNext(string, FileListFromComputeNodeNextOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNodeNext(nextPageLink: string, options: FileListFromComputeNodeNextOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="22a48-189">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="22a48-189">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - '@azure/batch.FileListFromComputeNodeNextOptionalParams'
          description: <span data-ttu-id="22a48-190">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="22a48-190">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="22a48-191">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-191">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNodeNext'
    name: 'listFromComputeNodeNext(string, Models.FileListFromComputeNodeNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNodeNext(nextPageLink: string, options?: Models.FileListFromComputeNodeNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="22a48-192">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="22a48-192">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Models.FileListFromComputeNodeNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromComputeNodeNext_1'
    name: 'listFromComputeNodeNext(string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromComputeNodeNext(nextPageLink: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="22a48-193">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="22a48-193">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="22a48-194">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-194">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromComputeNodeResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTask_2'
    name: 'listFromTask(string, string, FileListFromTaskOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTask(jobId: string, taskId: string, options: FileListFromTaskOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-195">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-195">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-196">L'ID dell'attività di cui si desidera elencare i file.</span><span class="sxs-lookup"><span data-stu-id="22a48-196">The ID of the task whose files you want to list.</span></span>
        - id: options
          type:
            - '@azure/batch.FileListFromTaskOptionalParams'
          description: <span data-ttu-id="22a48-197">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="22a48-197">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="22a48-198">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-198">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTask'
    name: 'listFromTask(string, string, Models.FileListFromTaskOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTask(jobId: string, taskId: string, options?: Models.FileListFromTaskOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-199">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-199">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-200">L'ID dell'attività di cui si desidera elencare i file.</span><span class="sxs-lookup"><span data-stu-id="22a48-200">The ID of the task whose files you want to list.</span></span>
        - id: options
          type:
            - Models.FileListFromTaskOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTask_1'
    name: 'listFromTask(string, string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTask(jobId: string, taskId: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="22a48-201">L'ID del processo che contiene l'attività.</span><span class="sxs-lookup"><span data-stu-id="22a48-201">The ID of the job that contains the task.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="22a48-202">L'ID dell'attività di cui si desidera elencare i file.</span><span class="sxs-lookup"><span data-stu-id="22a48-202">The ID of the task whose files you want to list.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="22a48-203">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-203">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTaskNext_2'
    name: 'listFromTaskNext(string, FileListFromTaskNextOptionalParams, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTaskNext(nextPageLink: string, options: FileListFromTaskNextOptionalParams, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="22a48-204">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="22a48-204">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - '@azure/batch.FileListFromTaskNextOptionalParams'
          description: <span data-ttu-id="22a48-205">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="22a48-205">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="22a48-206">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-206">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTaskNext'
    name: 'listFromTaskNext(string, Models.FileListFromTaskNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTaskNext(nextPageLink: string, options?: Models.FileListFromTaskNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="22a48-207">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="22a48-207">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Models.FileListFromTaskNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.File.listFromTaskNext_1'
    name: 'listFromTaskNext(string, ServiceCallback<NodeFileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFromTaskNext(nextPageLink: string, callback: ServiceCallback<NodeFileListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="22a48-208">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="22a48-208">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.NodeFileListResult>
          description: |
            <span data-ttu-id="22a48-209">Il callback</span><span class="sxs-lookup"><span data-stu-id="22a48-209">The callback</span></span>
      return:
        type:
          - Promise<Models.FileListFromTaskResponse>
    package: '@azure/batch'
references:
  - uid: '@azure/batch.BatchServiceClientContext'
    name: BatchServiceClientContext
    spec.typeScript:
      - name: BatchServiceClientContext
        fullName: BatchServiceClientContext
        uid: '@azure/batch.BatchServiceClientContext'
  - uid: '@azure/batch.FileDeleteFromComputeNodeOptionalParams'
    name: FileDeleteFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileDeleteFromComputeNodeOptionalParams
        fullName: FileDeleteFromComputeNodeOptionalParams
        uid: '@azure/batch.FileDeleteFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileDeleteFromTaskOptionalParams'
    name: FileDeleteFromTaskOptionalParams
    spec.typeScript:
      - name: FileDeleteFromTaskOptionalParams
        fullName: FileDeleteFromTaskOptionalParams
        uid: '@azure/batch.FileDeleteFromTaskOptionalParams'
  - uid: '@azure/batch.FileGetFromComputeNodeOptionalParams'
    name: FileGetFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileGetFromComputeNodeOptionalParams
        fullName: FileGetFromComputeNodeOptionalParams
        uid: '@azure/batch.FileGetFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileGetFromTaskOptionalParams'
    name: FileGetFromTaskOptionalParams
    spec.typeScript:
      - name: FileGetFromTaskOptionalParams
        fullName: FileGetFromTaskOptionalParams
        uid: '@azure/batch.FileGetFromTaskOptionalParams'
  - uid: '@azure/batch.FileGetPropertiesFromComputeNodeOptionalParams'
    name: FileGetPropertiesFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileGetPropertiesFromComputeNodeOptionalParams
        fullName: FileGetPropertiesFromComputeNodeOptionalParams
        uid: '@azure/batch.FileGetPropertiesFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileGetPropertiesFromTaskOptionalParams'
    name: FileGetPropertiesFromTaskOptionalParams
    spec.typeScript:
      - name: FileGetPropertiesFromTaskOptionalParams
        fullName: FileGetPropertiesFromTaskOptionalParams
        uid: '@azure/batch.FileGetPropertiesFromTaskOptionalParams'
  - uid: ServiceCallback<@azure/batch.NodeFileListResult>
    name: NodeFileListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeFileListResult
        fullName: NodeFileListResult
        uid: '@azure/batch.NodeFileListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.FileListFromComputeNodeOptionalParams'
    name: FileListFromComputeNodeOptionalParams
    spec.typeScript:
      - name: FileListFromComputeNodeOptionalParams
        fullName: FileListFromComputeNodeOptionalParams
        uid: '@azure/batch.FileListFromComputeNodeOptionalParams'
  - uid: '@azure/batch.FileListFromComputeNodeNextOptionalParams'
    name: FileListFromComputeNodeNextOptionalParams
    spec.typeScript:
      - name: FileListFromComputeNodeNextOptionalParams
        fullName: FileListFromComputeNodeNextOptionalParams
        uid: '@azure/batch.FileListFromComputeNodeNextOptionalParams'
  - uid: '@azure/batch.FileListFromTaskOptionalParams'
    name: FileListFromTaskOptionalParams
    spec.typeScript:
      - name: FileListFromTaskOptionalParams
        fullName: FileListFromTaskOptionalParams
        uid: '@azure/batch.FileListFromTaskOptionalParams'
  - uid: '@azure/batch.FileListFromTaskNextOptionalParams'
    name: FileListFromTaskNextOptionalParams
    spec.typeScript:
      - name: FileListFromTaskNextOptionalParams
        fullName: FileListFromTaskNextOptionalParams
        uid: '@azure/batch.FileListFromTaskNextOptionalParams'