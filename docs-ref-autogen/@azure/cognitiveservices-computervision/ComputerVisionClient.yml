### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient'
    name: ComputerVisionClient
    fullName: ComputerVisionClient
    children:
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.constructor'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.credentials'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.endpoint'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.sendOperationRequest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.sendRequest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2'
    name: 'analyzeImage(string, ComputerVisionClientAnalyzeImageOptionalParams, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImage(url: string, options: ComputerVisionClientAnalyzeImageOptionalParams, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage'
    name: 'analyzeImage(string, Models.ComputerVisionClientAnalyzeImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione estrae un set completo di caratteristiche visive sulla base del contenuto di immagine.
      Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine. All'interno della richiesta, è presente un parametro facoltativo che consente di scegliere le funzionalità da restituire. Per impostazione predefinita, le categorie di immagine vengono restituite nella risposta.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function analyzeImage(url: string, options?: Models.ComputerVisionClientAnalyzeImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1'
    name: 'analyzeImage(string, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2'
    name: 'analyzeImageByDomain(string, string, ComputerVisionClientAnalyzeImageByDomainOptionalParams, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options: ComputerVisionClientAnalyzeImageByDomainOptionalParams, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: Il contenuto specifico di dominio per riconoscere.
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain'
    name: 'analyzeImageByDomain(string, string, Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione riconosce il contenuto all'interno di un'immagine tramite l'applicazione di un modello specifico di dominio. L'elenco dei modelli specifici di dominio che sono supportati per l'API visione artificiale può essere recuperato tramite la richiesta di recupero /models. Attualmente, l'API fornisce i modelli specifici di dominio: celebrità, punti di riferimento.
      Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.
      Una risposta con esito positivo verrà restituita in formato JSON.
      Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options?: Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams)'
      parameters:
        - id: model
          type:
            - string
          description: Il contenuto specifico di dominio per riconoscere.
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1'
    name: 'analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: Il contenuto specifico di dominio per riconoscere.
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, options: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: Il contenuto specifico di dominio per riconoscere.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione riconosce il contenuto all'interno di un'immagine tramite l'applicazione di un modello specifico di dominio. L'elenco dei modelli specifici di dominio che sono supportati per l'API visione artificiale può essere recuperato tramite la richiesta di recupero /models. Attualmente, l'API fornisce i modelli specifici di dominio: celebrità, punti di riferimento.
      Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.
      Una risposta con esito positivo verrà restituita in formato JSON.
      Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams)'
      parameters:
        - id: model
          type:
            - string
          description: Il contenuto specifico di dominio per riconoscere.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: Il contenuto specifico di dominio per riconoscere.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, ComputerVisionClientAnalyzeImageInStreamOptionalParams, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientAnalyzeImageInStreamOptionalParams, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione estrae un set completo di caratteristiche visive sulla base del contenuto di immagine.
      Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine. All'interno della richiesta, è presente un parametro facoltativo che consente di scegliere le funzionalità da restituire. Per impostazione predefinita, le categorie di immagine vengono restituite nella risposta.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile'
    name: 'batchReadFile(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Utilizzare questa interfaccia per ottenere il risultato di un''operazione di lettura, che utilizza gli algoritmi di riconoscimento ottico dei caratteri (OCR) d''avanguardia ottimizzati per i documenti di grandi quantità di testo. Quando si usa l''interfaccia di leggere il File, la risposta contiene un campo denominato ''Operation-Location''. Il campo ''Operation-Location'' contiene l''URL che è necessario usare per l''operazione ''GetReadOperationResult'' per accedere ai OCR risultati.'
    syntax:
      content: 'function batchReadFile(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2'
    name: 'batchReadFile(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFile(url: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1'
    name: 'batchReadFile(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFile(url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Utilizzare questa interfaccia per ottenere il risultato di un''operazione di lettura documento che utilizza gli algoritmi di riconoscimento ottico dei caratteri (OCR) d''avanguardia ottimizzati per i documenti di grandi quantità di testo. Quando si usa l''interfaccia a documenti di lettura, la risposta contiene un campo denominato ''Operation-Location''. Il campo ''Operation-Location'' contiene l''URL che è necessario usare per il ''operazione ottieni risultati lettura'' per accedere ai risultati di riconoscimento.'
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.constructor'
    name: 'ComputerVisionClient(ServiceClientCredentials, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Inizializza una nuova istanza della classe ComputerVisionClient.
    syntax:
      content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credenziali della sottoscrizione che lo identificano in modo univoco la sottoscrizione client.
        - id: endpoint
          type:
            - string
          description: Endpoint di servizi cognitivi supportati.
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_2'
    name: 'describeImage(string, ComputerVisionClientDescribeImageOptionalParams, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImage(url: string, options: ComputerVisionClientDescribeImageOptionalParams, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage'
    name: 'describeImage(string, Models.ComputerVisionClientDescribeImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione genera una descrizione di un'immagine nella lingua leggibile con frasi complete. La descrizione si basa su una raccolta di tag del contenuto, ovvero vengono restituiti anche dall'operazione. Può essere generata più di una descrizione per ogni immagine. Le descrizioni sono ordinate per relativo punteggio di confidenza. Tutte le descrizioni sono in inglese.
      Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function describeImage(url: string, options?: Models.ComputerVisionClientDescribeImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientDescribeImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_1'
    name: 'describeImage(string, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2'
    name: 'describeImageInStream(msRest.HttpRequestBody, ComputerVisionClientDescribeImageInStreamOptionalParams, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientDescribeImageInStreamOptionalParams, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream'
    name: 'describeImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientDescribeImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione genera una descrizione di un'immagine nella lingua leggibile con frasi complete. La descrizione si basa su una raccolta di tag del contenuto, ovvero vengono restituiti anche dall'operazione. Può essere generata più di una descrizione per ogni immagine. Le descrizioni sono ordinate per relativo punteggio di confidenza. Tutte le descrizioni sono in inglese.
      Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientDescribeImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientDescribeImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1'
    name: 'describeImageInStream(msRest.HttpRequestBody, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects'
    name: 'detectObjects(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Esegue il rilevamento di oggetti sull'immagine specificata.
      Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function detectObjects(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_2'
    name: 'detectObjects(string, RequestOptionsBase, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjects(url: string, options: RequestOptionsBase, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_1'
    name: 'detectObjects(string, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjects(url: string, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Esegue il rilevamento di oggetti sull'immagine specificata.
      Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2'
    name: 'generateThumbnail(number, number, string, ComputerVisionClientGenerateThumbnailOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options: ComputerVisionClientGenerateThumbnailOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: 'Larghezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: height
          type:
            - number
          description: 'Altezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail'
    name: 'generateThumbnail(number, number, string, Models.ComputerVisionClientGenerateThumbnailOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione genera un'immagine di anteprima con la larghezza specificata dall'utente e l'altezza. Per impostazione predefinita, il servizio analizza l'immagine, identifica l'area di interesse (ROI) e genera le coordinate di ritaglio intelligente basate il rendimento del capitale investito. Ritaglio intelligente è utile quando si specifica un rapporto di aspetto che è diverso da quello dell'immagine di input.
      Una risposta con esito positivo contiene il file binario dell'immagine di anteprima. Se la richiesta ha esito negativo, la risposta contiene un codice di errore e un messaggio per determinare la causa dell'errore.
      In caso di errore, il codice di errore e un messaggio di errore vengono restituiti. Il codice di errore potrebbe essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout o errore.
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options?: Models.ComputerVisionClientGenerateThumbnailOptionalParams)'
      parameters:
        - id: width
          type:
            - number
          description: 'Larghezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: height
          type:
            - number
          description: 'Altezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientGenerateThumbnailOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1'
    name: 'generateThumbnail(number, number, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: 'Larghezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: height
          type:
            - number
          description: 'Altezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, ComputerVisionClientGenerateThumbnailInStreamOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, options: ComputerVisionClientGenerateThumbnailInStreamOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: 'Larghezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: height
          type:
            - number
          description: 'Altezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione genera un'immagine di anteprima con la larghezza specificata dall'utente e l'altezza. Per impostazione predefinita, il servizio analizza l'immagine, identifica l'area di interesse (ROI) e genera le coordinate di ritaglio intelligente basate il rendimento del capitale investito. Ritaglio intelligente è utile quando si specifica un rapporto di aspetto che è diverso da quello dell'immagine di input.
      Una risposta con esito positivo contiene il file binario dell'immagine di anteprima. Se la richiesta ha esito negativo, la risposta contiene un codice di errore e un messaggio per determinare la causa dell'errore.
      In caso di errore, il codice di errore e un messaggio di errore vengono restituiti. Il codice di errore potrebbe essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout o errore.
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams)'
      parameters:
        - id: width
          type:
            - number
          description: 'Larghezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: height
          type:
            - number
          description: 'Altezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: 'Larghezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: height
          type:
            - number
          description: 'Altezza dell''anteprima, in pixel. Deve essere compreso tra 1 e 1024. Consigliati minimo pari a 50.'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest'
    name: 'getAreaOfInterest(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione restituisce un rettangolo attorno all'area più importante dell'immagine.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta contiene un codice di errore e un messaggio per determinare la causa dell'errore.
      In caso di errore, il codice di errore e un messaggio di errore vengono restituiti. Il codice di errore potrebbe essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout o errore.
    syntax:
      content: 'function getAreaOfInterest(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2'
    name: 'getAreaOfInterest(string, RequestOptionsBase, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterest(url: string, options: RequestOptionsBase, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1'
    name: 'getAreaOfInterest(string, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterest(url: string, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione restituisce un rettangolo attorno all'area più importante dell'immagine.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta contiene un codice di errore e un messaggio per determinare la causa dell'errore.
      In caso di errore, il codice di errore e un messaggio di errore vengono restituiti. Il codice di errore potrebbe essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout o errore.
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult'
    name: 'getReadOperationResult(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Questa interfaccia viene utilizzata per ottenere i risultati di riconoscimento dell'operazione di lettura. L'URL per questa interfaccia deve essere recuperato dal campo 'Operation-Location' restituito dall'interfaccia di leggere il File Batch.
    syntax:
      content: 'function getReadOperationResult(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: ID dell'operazione di lettura restituite nella risposta dell'interfaccia 'Leggere il File Batch'.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2'
    name: 'getReadOperationResult(string, RequestOptionsBase, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOperationResult(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ID dell'operazione di lettura restituite nella risposta dell'interfaccia 'Leggere il File Batch'.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1'
    name: 'getReadOperationResult(string, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOperationResult(operationId: string, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ID dell'operazione di lettura restituite nella risposta dell'interfaccia 'Leggere il File Batch'.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult'
    name: 'getTextOperationResult(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Questa interfaccia viene utilizzata per ottenere il risultato dell'operazione di testo. L'URL per questa interfaccia deve essere recuperato dal campo 'Operation-Location' restituito dall'interfaccia di riconoscere il testo.
    syntax:
      content: 'function getTextOperationResult(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: ID dell'operazione di testo restituito nella risposta del 'Riconosce testo'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2'
    name: 'getTextOperationResult(string, RequestOptionsBase, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTextOperationResult(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ID dell'operazione di testo restituito nella risposta del 'Riconosce testo'
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1'
    name: 'getTextOperationResult(string, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ID dell'operazione di testo restituito nella risposta del 'Riconosce testo'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels'
    name: listModels(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione restituisce l'elenco di modelli specifici di dominio che sono supportati per l'API visione artificiale. L'API supporta attualmente i modelli specifici di dominio: riconoscimento di celebrità, riconoscimento di luoghi di interesse.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function listModels(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_2'
    name: 'listModels(RequestOptionsBase, ServiceCallback<ListModelsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listModels(options: RequestOptionsBase, callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_1'
    name: listModels(ServiceCallback<ListModelsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2'
    name: 'recognizePrintedText(boolean, string, ComputerVisionClientRecognizePrintedTextOptionalParams, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: ComputerVisionClientRecognizePrintedTextOptionalParams, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 'Possibilità di rilevare l''orientamento del testo nell''immagine. Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).'
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText'
    name: 'recognizePrintedText(boolean, string, Models.ComputerVisionClientRecognizePrintedTextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Riconoscimento ottico dei caratteri (OCR) rileva il testo in un'immagine ed estrae i caratteri riconosciuti in un flusso utilizzabile da computer.
      Al termine dell'operazione, verranno restituiti i risultati di OCR.
      In caso di errore, verrà restituito il codice di errore insieme a un messaggio di errore. Il codice di errore può essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o errore.
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Models.ComputerVisionClientRecognizePrintedTextOptionalParams)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 'Possibilità di rilevare l''orientamento del testo nell''immagine. Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).'
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientRecognizePrintedTextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1'
    name: 'recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 'Possibilità di rilevare l''orientamento del testo nell''immagine. Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).'
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, ComputerVisionClientRecognizePrintedTextInStreamOptionalParams, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, options: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 'Possibilità di rilevare l''orientamento del testo nell''immagine. Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Riconoscimento ottico dei caratteri (OCR) rileva il testo in un'immagine ed estrae i caratteri riconosciuti in un flusso utilizzabile da computer.
      Al termine dell'operazione, verranno restituiti i risultati di OCR.
      In caso di errore, verrà restituito il codice di errore insieme a un messaggio di errore. Il codice di errore può essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o errore.
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 'Possibilità di rilevare l''orientamento del testo nell''immagine. Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 'Possibilità di rilevare l''orientamento del testo nell''immagine. Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText'
    name: 'recognizeText(Models.TextRecognitionMode, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Riconoscere l''operazione del testo. Quando si usa l''interfaccia di riconoscere il testo, la risposta contiene un campo denominato ''Operation-Location''. Il campo ''Operation-Location'' contiene l''URL che è necessario usare per l''operazione Ottieni riconoscere testo il risultato dell''operazione.'
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 'Tipo di testo da riconoscere. I valori possibili sono: ''Scritto dall''utente'', ''stampato'''
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_2'
    name: 'recognizeText(Models.TextRecognitionMode, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 'Tipo di testo da riconoscere. I valori possibili sono: ''Scritto dall''utente'', ''stampato'''
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_1'
    name: 'recognizeText(Models.TextRecognitionMode, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 'Tipo di testo da riconoscere. I valori possibili sono: ''Scritto dall''utente'', ''stampato'''
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Riconoscere l''operazione del testo. Quando si usa l''interfaccia di riconoscere il testo, la risposta contiene un campo denominato ''Operation-Location''. Il campo ''Operation-Location'' contiene l''URL che è necessario usare per l''operazione Ottieni riconoscere testo il risultato dell''operazione.'
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 'Tipo di testo da riconoscere. I valori possibili sono: ''Scritto dall''utente'', ''stampato'''
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 'Tipo di testo da riconoscere. I valori possibili sono: ''Scritto dall''utente'', ''stampato'''
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 'Tipo di testo da riconoscere. I valori possibili sono: ''Scritto dall''utente'', ''stampato'''
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inviare una richiesta HTTP che viene popolata usando il OperationSpec fornito.
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Gli argomenti che verranno popolati con i valori basati su modelli della richiesta HTTP.
        - id: operationSpec
          type:
            - OperationSpec
          description: OperationSpec da usare per popolare il httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Callback da chiamare quando viene ricevuta la risposta.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invio di richiesta HTTP specificato.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_2'
    name: 'tagImage(string, ComputerVisionClientTagImageOptionalParams, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImage(url: string, options: ComputerVisionClientTagImageOptionalParams, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage'
    name: 'tagImage(string, Models.ComputerVisionClientTagImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione genera un elenco di parole o tag, che sono rilevanti per il contenuto dell'immagine specificato. L'API visione artificiale può restituire i tag in base agli oggetti, che vive esseri, panorami e azioni trovate nelle immagini. A differenza delle categorie, i tag non sono organizzati in base a un sistema di classificazione gerarchica, ma corrispondono al contenuto dell'immagine. I tag possono contenere gli hint per evitare ambiguità o fornire un contesto, ad esempio il cello"tag" può essere accompagnata dall'hint "strumento musicale". Tutti i tag sono in inglese.
      Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function tagImage(url: string, options?: Models.ComputerVisionClientTagImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientTagImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_1'
    name: 'tagImage(string, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2'
    name: 'tagImageInStream(msRest.HttpRequestBody, ComputerVisionClientTagImageInStreamOptionalParams, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientTagImageInStreamOptionalParams, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream'
    name: 'tagImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientTagImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Questa operazione genera un elenco di parole o tag, che sono rilevanti per il contenuto dell'immagine specificato. L'API visione artificiale può restituire i tag in base agli oggetti, che vive esseri, panorami e azioni trovate nelle immagini. A differenza delle categorie, i tag non sono organizzati in base a un sistema di classificazione gerarchica, ma corrispondono al contenuto dell'immagine. I tag possono contenere gli hint per evitare ambiguità o fornire un contesto, ad esempio il cello"tag" può essere accompagnata dall'hint "strumento musicale". Tutti i tag sono in inglese.
      Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.
      Una risposta con esito positivo verrà restituita in formato JSON. Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientTagImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - Models.ComputerVisionClientTagImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1'
    name: 'tagImageInStream(msRest.HttpRequestBody, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
references:
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
    name: ComputerVisionClientContext
    spec.typeScript:
      - name: ComputerVisionClientContext
        fullName: ComputerVisionClientContext
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: '@azure/cognitiveservices-computervision.ImageAnalysis'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
    name: ComputerVisionClientAnalyzeImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageOptionalParams
        fullName: ComputerVisionClientAnalyzeImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: '@azure/cognitiveservices-computervision.DomainModelResults'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
    name: ComputerVisionClientAnalyzeImageByDomainOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageByDomainOptionalParams
        fullName: ComputerVisionClientAnalyzeImageByDomainOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
    name: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
        fullName: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
    name: ComputerVisionClientAnalyzeImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageInStreamOptionalParams
        fullName: ComputerVisionClientAnalyzeImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageDescription
        fullName: ImageDescription
        uid: '@azure/cognitiveservices-computervision.ImageDescription'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
    name: ComputerVisionClientDescribeImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientDescribeImageOptionalParams
        fullName: ComputerVisionClientDescribeImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
    name: ComputerVisionClientDescribeImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientDescribeImageInStreamOptionalParams
        fullName: ComputerVisionClientDescribeImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectResult
        fullName: DetectResult
        uid: '@azure/cognitiveservices-computervision.DetectResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
    name: ComputerVisionClientGenerateThumbnailOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientGenerateThumbnailOptionalParams
        fullName: ComputerVisionClientGenerateThumbnailOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
    name: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
        fullName: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: '@azure/cognitiveservices-computervision.AreaOfInterestResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: '@azure/cognitiveservices-computervision.ReadOperationResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: '@azure/cognitiveservices-computervision.TextOperationResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: '@azure/cognitiveservices-computervision.ListModelsResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OcrResult
        fullName: OcrResult
        uid: '@azure/cognitiveservices-computervision.OcrResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
    name: ComputerVisionClientRecognizePrintedTextOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientRecognizePrintedTextOptionalParams
        fullName: ComputerVisionClientRecognizePrintedTextOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
    name: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
        fullName: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagResult
        fullName: TagResult
        uid: '@azure/cognitiveservices-computervision.TagResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
    name: ComputerVisionClientTagImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientTagImageOptionalParams
        fullName: ComputerVisionClientTagImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'
    name: ComputerVisionClientTagImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientTagImageInStreamOptionalParams
        fullName: ComputerVisionClientTagImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'