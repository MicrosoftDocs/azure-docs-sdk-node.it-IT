### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient'
    name: ComputerVisionClient
    fullName: ComputerVisionClient
    children:
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.constructor'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.credentials'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.endpoint'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.sendOperationRequest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.sendRequest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2'
    name: 'analyzeImage(string, ComputerVisionClientAnalyzeImageOptionalParams, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImage(url: string, options: ComputerVisionClientAnalyzeImageOptionalParams, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-101">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-101">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
          description: <span data-ttu-id="d453e-102">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-102">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            <span data-ttu-id="d453e-103">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-103">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage'
    name: 'analyzeImage(string, Models.ComputerVisionClientAnalyzeImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-104">Questa operazione estrae un set completo di caratteristiche visive sulla base del contenuto di immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-104">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="d453e-105">Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-105">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="d453e-106">All'interno della richiesta, è presente un parametro facoltativo che consente di scegliere le funzionalità da restituire.</span><span class="sxs-lookup"><span data-stu-id="d453e-106">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="d453e-107">Per impostazione predefinita, le categorie di immagine vengono restituite nella risposta.</span><span class="sxs-lookup"><span data-stu-id="d453e-107">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="d453e-108">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-108">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-109">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-109">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImage(url: string, options?: Models.ComputerVisionClientAnalyzeImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-110">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-110">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1'
    name: 'analyzeImage(string, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-111">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-111">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            <span data-ttu-id="d453e-112">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-112">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2'
    name: 'analyzeImageByDomain(string, string, ComputerVisionClientAnalyzeImageByDomainOptionalParams, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options: ComputerVisionClientAnalyzeImageByDomainOptionalParams, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="d453e-113">Il contenuto specifico di dominio per riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-113">The domain-specific content to recognize.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-114">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-114">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
          description: <span data-ttu-id="d453e-115">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-115">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            <span data-ttu-id="d453e-116">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-116">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain'
    name: 'analyzeImageByDomain(string, string, Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-117">Questa operazione riconosce il contenuto all'interno di un'immagine tramite l'applicazione di un modello specifico di dominio.</span><span class="sxs-lookup"><span data-stu-id="d453e-117">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="d453e-118">L'elenco dei modelli specifici di dominio che sono supportati per l'API visione artificiale può essere recuperato tramite la richiesta di recupero /models.</span><span class="sxs-lookup"><span data-stu-id="d453e-118">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span> <span data-ttu-id="d453e-119">Attualmente, l'API fornisce i modelli specifici di dominio: celebrità, punti di riferimento.</span><span class="sxs-lookup"><span data-stu-id="d453e-119">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="d453e-120">Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-120">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="d453e-121">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-121">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="d453e-122">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-122">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options?: Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="d453e-123">Il contenuto specifico di dominio per riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-123">The domain-specific content to recognize.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-124">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-124">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1'
    name: 'analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="d453e-125">Il contenuto specifico di dominio per riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-125">The domain-specific content to recognize.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-126">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-126">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            <span data-ttu-id="d453e-127">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-127">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, options: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="d453e-128">Il contenuto specifico di dominio per riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-128">The domain-specific content to recognize.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-129">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-129">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
          description: <span data-ttu-id="d453e-130">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-130">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            <span data-ttu-id="d453e-131">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-131">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-132">Questa operazione riconosce il contenuto all'interno di un'immagine tramite l'applicazione di un modello specifico di dominio.</span><span class="sxs-lookup"><span data-stu-id="d453e-132">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="d453e-133">L'elenco dei modelli specifici di dominio che sono supportati per l'API visione artificiale può essere recuperato tramite la richiesta di recupero /models.</span><span class="sxs-lookup"><span data-stu-id="d453e-133">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span> <span data-ttu-id="d453e-134">Attualmente, l'API fornisce i modelli specifici di dominio: celebrità, punti di riferimento.</span><span class="sxs-lookup"><span data-stu-id="d453e-134">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="d453e-135">Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-135">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="d453e-136">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-136">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="d453e-137">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-137">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="d453e-138">Il contenuto specifico di dominio per riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-138">The domain-specific content to recognize.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-139">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-139">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="d453e-140">Il contenuto specifico di dominio per riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-140">The domain-specific content to recognize.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-141">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-141">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            <span data-ttu-id="d453e-142">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-142">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, ComputerVisionClientAnalyzeImageInStreamOptionalParams, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientAnalyzeImageInStreamOptionalParams, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-143">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-143">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
          description: <span data-ttu-id="d453e-144">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-144">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            <span data-ttu-id="d453e-145">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-145">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-146">Questa operazione estrae un set completo di caratteristiche visive sulla base del contenuto di immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-146">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="d453e-147">Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-147">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="d453e-148">All'interno della richiesta, è presente un parametro facoltativo che consente di scegliere le funzionalità da restituire.</span><span class="sxs-lookup"><span data-stu-id="d453e-148">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="d453e-149">Per impostazione predefinita, le categorie di immagine vengono restituite nella risposta.</span><span class="sxs-lookup"><span data-stu-id="d453e-149">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="d453e-150">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-150">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-151">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-151">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-152">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-152">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-153">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-153">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            <span data-ttu-id="d453e-154">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-154">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile'
    name: 'batchReadFile(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d453e-155">Utilizzare questa interfaccia per ottenere il risultato di un''operazione di lettura, che utilizza gli algoritmi di riconoscimento ottico dei caratteri (OCR) d''avanguardia ottimizzati per i documenti di grandi quantità di testo.</span><span class="sxs-lookup"><span data-stu-id="d453e-155">Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="d453e-156">Quando si usa l''interfaccia di leggere il File, la risposta contiene un campo denominato ''Operation-Location''.</span><span class="sxs-lookup"><span data-stu-id="d453e-156">When you use the Read File interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="d453e-157">Il campo ''Operation-Location'' contiene l''URL che è necessario usare per l''operazione ''GetReadOperationResult'' per accedere ai OCR risultati.</span><span class="sxs-lookup"><span data-stu-id="d453e-157">The ''Operation-Location'' field contains the URL that you must use for your ''GetReadOperationResult'' operation to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFile(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-158">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-158">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2'
    name: 'batchReadFile(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFile(url: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-159">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-159">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-160">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-160">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-161">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-161">The callback</span></span>
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1'
    name: 'batchReadFile(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFile(url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-162">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-162">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-163">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-163">The callback</span></span>
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d453e-164">Utilizzare questa interfaccia per ottenere il risultato di un''operazione di lettura documento che utilizza gli algoritmi di riconoscimento ottico dei caratteri (OCR) d''avanguardia ottimizzati per i documenti di grandi quantità di testo.</span><span class="sxs-lookup"><span data-stu-id="d453e-164">Use this interface to get the result of a Read Document operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="d453e-165">Quando si usa l''interfaccia a documenti di lettura, la risposta contiene un campo denominato ''Operation-Location''.</span><span class="sxs-lookup"><span data-stu-id="d453e-165">When you use the Read Document interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="d453e-166">Il campo ''Operation-Location'' contiene l''URL che è necessario usare per il ''operazione ottieni risultati lettura'' per accedere ai risultati di riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="d453e-166">The ''Operation-Location'' field contains the URL that you must use for your ''Get Read Result operation'' to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-167">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-167">An image stream.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-168">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-168">An image stream.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-169">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-169">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-170">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-170">The callback</span></span>
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-171">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-171">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-172">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-172">The callback</span></span>
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.constructor'
    name: 'ComputerVisionClient(ServiceClientCredentials, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="d453e-173">Inizializza una nuova istanza della classe ComputerVisionClient.</span><span class="sxs-lookup"><span data-stu-id="d453e-173">Initializes a new instance of the ComputerVisionClient class.</span></span>
    syntax:
      content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="d453e-174">Credenziali della sottoscrizione che lo identificano in modo univoco la sottoscrizione client.</span><span class="sxs-lookup"><span data-stu-id="d453e-174">Subscription credentials which uniquely identify client subscription.</span></span>
        - id: endpoint
          type:
            - string
          description: <span data-ttu-id="d453e-175">Endpoint di servizi cognitivi supportati.</span><span class="sxs-lookup"><span data-stu-id="d453e-175">Supported Cognitive Services endpoints.</span></span>
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_2'
    name: 'describeImage(string, ComputerVisionClientDescribeImageOptionalParams, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImage(url: string, options: ComputerVisionClientDescribeImageOptionalParams, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-176">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-176">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
          description: <span data-ttu-id="d453e-177">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-177">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            <span data-ttu-id="d453e-178">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-178">The callback</span></span>
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage'
    name: 'describeImage(string, Models.ComputerVisionClientDescribeImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-179">Questa operazione genera una descrizione di un'immagine nella lingua leggibile con frasi complete.</span><span class="sxs-lookup"><span data-stu-id="d453e-179">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="d453e-180">La descrizione si basa su una raccolta di tag del contenuto, ovvero vengono restituiti anche dall'operazione.</span><span class="sxs-lookup"><span data-stu-id="d453e-180">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="d453e-181">Può essere generata più di una descrizione per ogni immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-181">More than one description can be generated for each image.</span></span> <span data-ttu-id="d453e-182">Le descrizioni sono ordinate per relativo punteggio di confidenza.</span><span class="sxs-lookup"><span data-stu-id="d453e-182">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="d453e-183">Tutte le descrizioni sono in inglese.</span><span class="sxs-lookup"><span data-stu-id="d453e-183">All descriptions are in English.</span></span>
      <span data-ttu-id="d453e-184">Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-184">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="d453e-185">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-185">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-186">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-186">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImage(url: string, options?: Models.ComputerVisionClientDescribeImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-187">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-187">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientDescribeImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_1'
    name: 'describeImage(string, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-188">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-188">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            <span data-ttu-id="d453e-189">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-189">The callback</span></span>
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2'
    name: 'describeImageInStream(msRest.HttpRequestBody, ComputerVisionClientDescribeImageInStreamOptionalParams, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientDescribeImageInStreamOptionalParams, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-190">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-190">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
          description: <span data-ttu-id="d453e-191">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-191">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            <span data-ttu-id="d453e-192">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-192">The callback</span></span>
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream'
    name: 'describeImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientDescribeImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-193">Questa operazione genera una descrizione di un'immagine nella lingua leggibile con frasi complete.</span><span class="sxs-lookup"><span data-stu-id="d453e-193">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="d453e-194">La descrizione si basa su una raccolta di tag del contenuto, ovvero vengono restituiti anche dall'operazione.</span><span class="sxs-lookup"><span data-stu-id="d453e-194">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="d453e-195">Può essere generata più di una descrizione per ogni immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-195">More than one description can be generated for each image.</span></span> <span data-ttu-id="d453e-196">Le descrizioni sono ordinate per relativo punteggio di confidenza.</span><span class="sxs-lookup"><span data-stu-id="d453e-196">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="d453e-197">Tutte le descrizioni sono in inglese.</span><span class="sxs-lookup"><span data-stu-id="d453e-197">All descriptions are in English.</span></span>
      <span data-ttu-id="d453e-198">Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-198">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="d453e-199">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-199">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-200">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-200">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientDescribeImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-201">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-201">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientDescribeImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1'
    name: 'describeImageInStream(msRest.HttpRequestBody, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-202">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-202">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            <span data-ttu-id="d453e-203">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-203">The callback</span></span>
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects'
    name: 'detectObjects(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-204">Esegue il rilevamento di oggetti sull'immagine specificata.</span><span class="sxs-lookup"><span data-stu-id="d453e-204">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="d453e-205">Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-205">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="d453e-206">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-206">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-207">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-207">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjects(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-208">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-208">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_2'
    name: 'detectObjects(string, RequestOptionsBase, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjects(url: string, options: RequestOptionsBase, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-209">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-209">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-210">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-210">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            <span data-ttu-id="d453e-211">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-211">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_1'
    name: 'detectObjects(string, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjects(url: string, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-212">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-212">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            <span data-ttu-id="d453e-213">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-213">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-214">Esegue il rilevamento di oggetti sull'immagine specificata.</span><span class="sxs-lookup"><span data-stu-id="d453e-214">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="d453e-215">Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-215">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="d453e-216">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-216">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-217">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-217">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-218">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-218">An image stream.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-219">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-219">An image stream.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-220">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-220">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            <span data-ttu-id="d453e-221">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-221">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-222">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-222">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            <span data-ttu-id="d453e-223">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-223">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2'
    name: 'generateThumbnail(number, number, string, ComputerVisionClientGenerateThumbnailOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options: ComputerVisionClientGenerateThumbnailOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="d453e-224">Larghezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-224">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-225">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-225">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-226">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-226">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="d453e-227">Altezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-227">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-228">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-228">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-229">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-229">Recommended minimum of 50.</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-230">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-230">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
          description: <span data-ttu-id="d453e-231">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-231">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-232">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-232">The callback</span></span>
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail'
    name: 'generateThumbnail(number, number, string, Models.ComputerVisionClientGenerateThumbnailOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-233">Questa operazione genera un'immagine di anteprima con la larghezza specificata dall'utente e l'altezza.</span><span class="sxs-lookup"><span data-stu-id="d453e-233">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="d453e-234">Per impostazione predefinita, il servizio analizza l'immagine, identifica l'area di interesse (ROI) e genera le coordinate di ritaglio intelligente basate il rendimento del capitale investito.</span><span class="sxs-lookup"><span data-stu-id="d453e-234">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span> <span data-ttu-id="d453e-235">Ritaglio intelligente è utile quando si specifica un rapporto di aspetto che è diverso da quello dell'immagine di input.</span><span class="sxs-lookup"><span data-stu-id="d453e-235">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="d453e-236">Una risposta con esito positivo contiene il file binario dell'immagine di anteprima.</span><span class="sxs-lookup"><span data-stu-id="d453e-236">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="d453e-237">Se la richiesta ha esito negativo, la risposta contiene un codice di errore e un messaggio per determinare la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-237">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="d453e-238">In caso di errore, il codice di errore e un messaggio di errore vengono restituiti.</span><span class="sxs-lookup"><span data-stu-id="d453e-238">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="d453e-239">Il codice di errore potrebbe essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout o errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-239">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options?: Models.ComputerVisionClientGenerateThumbnailOptionalParams)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="d453e-240">Larghezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-240">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-241">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-241">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-242">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-242">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="d453e-243">Altezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-243">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-244">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-244">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-245">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-245">Recommended minimum of 50.</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-246">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-246">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientGenerateThumbnailOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1'
    name: 'generateThumbnail(number, number, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="d453e-247">Larghezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-247">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-248">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-248">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-249">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-249">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="d453e-250">Altezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-250">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-251">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-251">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-252">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-252">Recommended minimum of 50.</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-253">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-253">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-254">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-254">The callback</span></span>
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, ComputerVisionClientGenerateThumbnailInStreamOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, options: ComputerVisionClientGenerateThumbnailInStreamOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="d453e-255">Larghezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-255">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-256">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-256">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-257">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-257">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="d453e-258">Altezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-258">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-259">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-259">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-260">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-260">Recommended minimum of 50.</span></span>'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-261">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-261">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
          description: <span data-ttu-id="d453e-262">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-262">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-263">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-263">The callback</span></span>
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-264">Questa operazione genera un'immagine di anteprima con la larghezza specificata dall'utente e l'altezza.</span><span class="sxs-lookup"><span data-stu-id="d453e-264">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="d453e-265">Per impostazione predefinita, il servizio analizza l'immagine, identifica l'area di interesse (ROI) e genera le coordinate di ritaglio intelligente basate il rendimento del capitale investito.</span><span class="sxs-lookup"><span data-stu-id="d453e-265">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span> <span data-ttu-id="d453e-266">Ritaglio intelligente è utile quando si specifica un rapporto di aspetto che è diverso da quello dell'immagine di input.</span><span class="sxs-lookup"><span data-stu-id="d453e-266">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="d453e-267">Una risposta con esito positivo contiene il file binario dell'immagine di anteprima.</span><span class="sxs-lookup"><span data-stu-id="d453e-267">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="d453e-268">Se la richiesta ha esito negativo, la risposta contiene un codice di errore e un messaggio per determinare la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-268">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="d453e-269">In caso di errore, il codice di errore e un messaggio di errore vengono restituiti.</span><span class="sxs-lookup"><span data-stu-id="d453e-269">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="d453e-270">Il codice di errore potrebbe essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout o errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-270">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="d453e-271">Larghezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-271">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-272">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-272">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-273">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-273">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="d453e-274">Altezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-274">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-275">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-275">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-276">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-276">Recommended minimum of 50.</span></span>'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-277">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-277">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="d453e-278">Larghezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-278">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-279">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-279">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-280">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-280">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="d453e-281">Altezza dell''anteprima, in pixel.</span><span class="sxs-lookup"><span data-stu-id="d453e-281">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="d453e-282">Deve essere compreso tra 1 e 1024.</span><span class="sxs-lookup"><span data-stu-id="d453e-282">It must be between 1 and 1024.</span></span> <span data-ttu-id="d453e-283">Consigliati minimo pari a 50.</span><span class="sxs-lookup"><span data-stu-id="d453e-283">Recommended minimum of 50.</span></span>'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-284">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-284">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-285">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-285">The callback</span></span>
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest'
    name: 'getAreaOfInterest(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-286">Questa operazione restituisce un rettangolo attorno all'area più importante dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-286">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="d453e-287">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-287">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-288">Se la richiesta ha esito negativo, la risposta contiene un codice di errore e un messaggio per determinare la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-288">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="d453e-289">In caso di errore, il codice di errore e un messaggio di errore vengono restituiti.</span><span class="sxs-lookup"><span data-stu-id="d453e-289">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="d453e-290">Il codice di errore potrebbe essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout o errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-290">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterest(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-291">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-291">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2'
    name: 'getAreaOfInterest(string, RequestOptionsBase, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterest(url: string, options: RequestOptionsBase, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-292">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-292">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-293">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-293">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            <span data-ttu-id="d453e-294">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-294">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1'
    name: 'getAreaOfInterest(string, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterest(url: string, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-295">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-295">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            <span data-ttu-id="d453e-296">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-296">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-297">Questa operazione restituisce un rettangolo attorno all'area più importante dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-297">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="d453e-298">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-298">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-299">Se la richiesta ha esito negativo, la risposta contiene un codice di errore e un messaggio per determinare la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-299">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="d453e-300">In caso di errore, il codice di errore e un messaggio di errore vengono restituiti.</span><span class="sxs-lookup"><span data-stu-id="d453e-300">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="d453e-301">Il codice di errore potrebbe essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout o errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-301">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-302">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-302">An image stream.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-303">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-303">An image stream.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-304">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-304">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            <span data-ttu-id="d453e-305">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-305">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-306">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-306">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            <span data-ttu-id="d453e-307">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-307">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult'
    name: 'getReadOperationResult(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d453e-308">Questa interfaccia viene utilizzata per ottenere i risultati di riconoscimento dell'operazione di lettura.</span><span class="sxs-lookup"><span data-stu-id="d453e-308">This interface is used for getting OCR results of Read operation.</span></span> <span data-ttu-id="d453e-309">L'URL per questa interfaccia deve essere recuperato dal campo 'Operation-Location' restituito dall'interfaccia di leggere il File Batch.</span><span class="sxs-lookup"><span data-stu-id="d453e-309">The URL to this interface should be retrieved from 'Operation-Location' field returned from Batch Read File interface.</span></span>
    syntax:
      content: 'function getReadOperationResult(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="d453e-310">ID dell'operazione di lettura restituite nella risposta dell'interfaccia 'Leggere il File Batch'.</span><span class="sxs-lookup"><span data-stu-id="d453e-310">Id of read operation returned in the response of the 'Batch Read File' interface.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2'
    name: 'getReadOperationResult(string, RequestOptionsBase, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOperationResult(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="d453e-311">ID dell'operazione di lettura restituite nella risposta dell'interfaccia 'Leggere il File Batch'.</span><span class="sxs-lookup"><span data-stu-id="d453e-311">Id of read operation returned in the response of the 'Batch Read File' interface.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-312">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-312">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
          description: |
            <span data-ttu-id="d453e-313">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-313">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1'
    name: 'getReadOperationResult(string, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOperationResult(operationId: string, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="d453e-314">ID dell'operazione di lettura restituite nella risposta dell'interfaccia 'Leggere il File Batch'.</span><span class="sxs-lookup"><span data-stu-id="d453e-314">Id of read operation returned in the response of the 'Batch Read File' interface.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
          description: |
            <span data-ttu-id="d453e-315">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-315">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult'
    name: 'getTextOperationResult(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d453e-316">Questa interfaccia viene utilizzata per ottenere il risultato dell'operazione di testo.</span><span class="sxs-lookup"><span data-stu-id="d453e-316">This interface is used for getting text operation result.</span></span> <span data-ttu-id="d453e-317">L'URL per questa interfaccia deve essere recuperato dal campo 'Operation-Location' restituito dall'interfaccia di riconoscere il testo.</span><span class="sxs-lookup"><span data-stu-id="d453e-317">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
    syntax:
      content: 'function getTextOperationResult(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="d453e-318">ID dell'operazione di testo restituito nella risposta del 'Riconosce testo'</span><span class="sxs-lookup"><span data-stu-id="d453e-318">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2'
    name: 'getTextOperationResult(string, RequestOptionsBase, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTextOperationResult(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="d453e-319">ID dell'operazione di testo restituito nella risposta del 'Riconosce testo'</span><span class="sxs-lookup"><span data-stu-id="d453e-319">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-320">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-320">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
          description: |
            <span data-ttu-id="d453e-321">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-321">The callback</span></span>
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1'
    name: 'getTextOperationResult(string, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: <span data-ttu-id="d453e-322">ID dell'operazione di testo restituito nella risposta del 'Riconosce testo'</span><span class="sxs-lookup"><span data-stu-id="d453e-322">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
          description: |
            <span data-ttu-id="d453e-323">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-323">The callback</span></span>
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels'
    name: listModels(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-324">Questa operazione restituisce l'elenco di modelli specifici di dominio che sono supportati per l'API visione artificiale.</span><span class="sxs-lookup"><span data-stu-id="d453e-324">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span> <span data-ttu-id="d453e-325">L'API supporta attualmente i modelli specifici di dominio: riconoscimento di celebrità, riconoscimento di luoghi di interesse.</span><span class="sxs-lookup"><span data-stu-id="d453e-325">Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.</span></span>
      <span data-ttu-id="d453e-326">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-326">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-327">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-327">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function listModels(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_2'
    name: 'listModels(RequestOptionsBase, ServiceCallback<ListModelsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listModels(options: RequestOptionsBase, callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-328">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-328">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
          description: |
            <span data-ttu-id="d453e-329">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-329">The callback</span></span>
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_1'
    name: listModels(ServiceCallback<ListModelsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
          description: |
            <span data-ttu-id="d453e-330">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-330">The callback</span></span>
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2'
    name: 'recognizePrintedText(boolean, string, ComputerVisionClientRecognizePrintedTextOptionalParams, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: ComputerVisionClientRecognizePrintedTextOptionalParams, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: '<span data-ttu-id="d453e-331">Possibilità di rilevare l''orientamento del testo nell''immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-331">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="d453e-332">Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).</span><span class="sxs-lookup"><span data-stu-id="d453e-332">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it''s upside-down).</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-333">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-333">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
          description: <span data-ttu-id="d453e-334">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-334">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            <span data-ttu-id="d453e-335">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-335">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText'
    name: 'recognizePrintedText(boolean, string, Models.ComputerVisionClientRecognizePrintedTextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-336">Riconoscimento ottico dei caratteri (OCR) rileva il testo in un'immagine ed estrae i caratteri riconosciuti in un flusso utilizzabile da computer.</span><span class="sxs-lookup"><span data-stu-id="d453e-336">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="d453e-337">Al termine dell'operazione, verranno restituiti i risultati di OCR.</span><span class="sxs-lookup"><span data-stu-id="d453e-337">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="d453e-338">In caso di errore, verrà restituito il codice di errore insieme a un messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-338">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="d453e-339">Il codice di errore può essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-339">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Models.ComputerVisionClientRecognizePrintedTextOptionalParams)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: '<span data-ttu-id="d453e-340">Possibilità di rilevare l''orientamento del testo nell''immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-340">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="d453e-341">Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).</span><span class="sxs-lookup"><span data-stu-id="d453e-341">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it''s upside-down).</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-342">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-342">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientRecognizePrintedTextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1'
    name: 'recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: '<span data-ttu-id="d453e-343">Possibilità di rilevare l''orientamento del testo nell''immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-343">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="d453e-344">Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).</span><span class="sxs-lookup"><span data-stu-id="d453e-344">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it''s upside-down).</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-345">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-345">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            <span data-ttu-id="d453e-346">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-346">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, ComputerVisionClientRecognizePrintedTextInStreamOptionalParams, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, options: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: '<span data-ttu-id="d453e-347">Possibilità di rilevare l''orientamento del testo nell''immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-347">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="d453e-348">Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).</span><span class="sxs-lookup"><span data-stu-id="d453e-348">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it''s upside-down).</span></span>'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-349">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-349">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
          description: <span data-ttu-id="d453e-350">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-350">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            <span data-ttu-id="d453e-351">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-351">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-352">Riconoscimento ottico dei caratteri (OCR) rileva il testo in un'immagine ed estrae i caratteri riconosciuti in un flusso utilizzabile da computer.</span><span class="sxs-lookup"><span data-stu-id="d453e-352">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="d453e-353">Al termine dell'operazione, verranno restituiti i risultati di OCR.</span><span class="sxs-lookup"><span data-stu-id="d453e-353">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="d453e-354">In caso di errore, verrà restituito il codice di errore insieme a un messaggio di errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-354">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="d453e-355">Il codice di errore può essere uno dei InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-355">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: '<span data-ttu-id="d453e-356">Possibilità di rilevare l''orientamento del testo nell''immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-356">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="d453e-357">Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).</span><span class="sxs-lookup"><span data-stu-id="d453e-357">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it''s upside-down).</span></span>'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-358">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-358">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: '<span data-ttu-id="d453e-359">Possibilità di rilevare l''orientamento del testo nell''immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-359">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="d453e-360">Con detectOrientation = true di OCR servizio prova a rilevare l''orientamento dell''immagine e correggere l''errore prima dell''ulteriore elaborazione (ad esempio, se è capovolto).</span><span class="sxs-lookup"><span data-stu-id="d453e-360">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it''s upside-down).</span></span>'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-361">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-361">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            <span data-ttu-id="d453e-362">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-362">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText'
    name: 'recognizeText(Models.TextRecognitionMode, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d453e-363">Riconoscere l''operazione del testo.</span><span class="sxs-lookup"><span data-stu-id="d453e-363">Recognize Text operation.</span></span> <span data-ttu-id="d453e-364">Quando si usa l''interfaccia di riconoscere il testo, la risposta contiene un campo denominato ''Operation-Location''.</span><span class="sxs-lookup"><span data-stu-id="d453e-364">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="d453e-365">Il campo ''Operation-Location'' contiene l''URL che è necessario usare per l''operazione Ottieni riconoscere testo il risultato dell''operazione.</span><span class="sxs-lookup"><span data-stu-id="d453e-365">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="d453e-366">Tipo di testo da riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-366">Type of text to recognize.</span></span> <span data-ttu-id="d453e-367">I valori possibili sono: ''Scritto dall''utente'', ''stampato''</span><span class="sxs-lookup"><span data-stu-id="d453e-367">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-368">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-368">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_2'
    name: 'recognizeText(Models.TextRecognitionMode, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="d453e-369">Tipo di testo da riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-369">Type of text to recognize.</span></span> <span data-ttu-id="d453e-370">I valori possibili sono: ''Scritto dall''utente'', ''stampato''</span><span class="sxs-lookup"><span data-stu-id="d453e-370">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-371">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-371">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-372">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-372">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-373">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-373">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_1'
    name: 'recognizeText(Models.TextRecognitionMode, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="d453e-374">Tipo di testo da riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-374">Type of text to recognize.</span></span> <span data-ttu-id="d453e-375">I valori possibili sono: ''Scritto dall''utente'', ''stampato''</span><span class="sxs-lookup"><span data-stu-id="d453e-375">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-376">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-376">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-377">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-377">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d453e-378">Riconoscere l''operazione del testo.</span><span class="sxs-lookup"><span data-stu-id="d453e-378">Recognize Text operation.</span></span> <span data-ttu-id="d453e-379">Quando si usa l''interfaccia di riconoscere il testo, la risposta contiene un campo denominato ''Operation-Location''.</span><span class="sxs-lookup"><span data-stu-id="d453e-379">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="d453e-380">Il campo ''Operation-Location'' contiene l''URL che è necessario usare per l''operazione Ottieni riconoscere testo il risultato dell''operazione.</span><span class="sxs-lookup"><span data-stu-id="d453e-380">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-381">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-381">An image stream.</span></span>
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="d453e-382">Tipo di testo da riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-382">Type of text to recognize.</span></span> <span data-ttu-id="d453e-383">I valori possibili sono: ''Scritto dall''utente'', ''stampato''</span><span class="sxs-lookup"><span data-stu-id="d453e-383">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-384">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-384">An image stream.</span></span>
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="d453e-385">Tipo di testo da riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-385">Type of text to recognize.</span></span> <span data-ttu-id="d453e-386">I valori possibili sono: ''Scritto dall''utente'', ''stampato''</span><span class="sxs-lookup"><span data-stu-id="d453e-386">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d453e-387">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-387">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-388">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-388">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-389">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-389">An image stream.</span></span>
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="d453e-390">Tipo di testo da riconoscere.</span><span class="sxs-lookup"><span data-stu-id="d453e-390">Type of text to recognize.</span></span> <span data-ttu-id="d453e-391">I valori possibili sono: ''Scritto dall''utente'', ''stampato''</span><span class="sxs-lookup"><span data-stu-id="d453e-391">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d453e-392">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-392">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d453e-393">Inviare una richiesta HTTP che viene popolata usando il OperationSpec fornito.</span><span class="sxs-lookup"><span data-stu-id="d453e-393">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="d453e-394">Gli argomenti che verranno popolati con i valori basati su modelli della richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="d453e-394">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="d453e-395">OperationSpec da usare per popolare il httpRequest.</span><span class="sxs-lookup"><span data-stu-id="d453e-395">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="d453e-396">Callback da chiamare quando viene ricevuta la risposta.</span><span class="sxs-lookup"><span data-stu-id="d453e-396">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d453e-397">Invio di richiesta HTTP specificato.</span><span class="sxs-lookup"><span data-stu-id="d453e-397">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_2'
    name: 'tagImage(string, ComputerVisionClientTagImageOptionalParams, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImage(url: string, options: ComputerVisionClientTagImageOptionalParams, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-398">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-398">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
          description: <span data-ttu-id="d453e-399">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-399">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            <span data-ttu-id="d453e-400">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-400">The callback</span></span>
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage'
    name: 'tagImage(string, Models.ComputerVisionClientTagImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-401">Questa operazione genera un elenco di parole o tag, che sono rilevanti per il contenuto dell'immagine specificato.</span><span class="sxs-lookup"><span data-stu-id="d453e-401">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="d453e-402">L'API visione artificiale può restituire i tag in base agli oggetti, che vive esseri, panorami e azioni trovate nelle immagini.</span><span class="sxs-lookup"><span data-stu-id="d453e-402">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="d453e-403">A differenza delle categorie, i tag non sono organizzati in base a un sistema di classificazione gerarchica, ma corrispondono al contenuto dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-403">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="d453e-404">I tag possono contenere gli hint per evitare ambiguità o fornire un contesto, ad esempio il cello"tag" può essere accompagnata dall'hint "strumento musicale".</span><span class="sxs-lookup"><span data-stu-id="d453e-404">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="d453e-405">Tutti i tag sono in inglese.</span><span class="sxs-lookup"><span data-stu-id="d453e-405">All tags are in English.</span></span>
      <span data-ttu-id="d453e-406">Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-406">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="d453e-407">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-407">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-408">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-408">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImage(url: string, options?: Models.ComputerVisionClientTagImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-409">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-409">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientTagImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_1'
    name: 'tagImage(string, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="d453e-410">Raggiungibile pubblicamente URL di un'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-410">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            <span data-ttu-id="d453e-411">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-411">The callback</span></span>
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2'
    name: 'tagImageInStream(msRest.HttpRequestBody, ComputerVisionClientTagImageInStreamOptionalParams, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientTagImageInStreamOptionalParams, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-412">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-412">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'
          description: <span data-ttu-id="d453e-413">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="d453e-413">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            <span data-ttu-id="d453e-414">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-414">The callback</span></span>
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream'
    name: 'tagImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientTagImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d453e-415">Questa operazione genera un elenco di parole o tag, che sono rilevanti per il contenuto dell'immagine specificato.</span><span class="sxs-lookup"><span data-stu-id="d453e-415">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="d453e-416">L'API visione artificiale può restituire i tag in base agli oggetti, che vive esseri, panorami e azioni trovate nelle immagini.</span><span class="sxs-lookup"><span data-stu-id="d453e-416">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="d453e-417">A differenza delle categorie, i tag non sono organizzati in base a un sistema di classificazione gerarchica, ma corrispondono al contenuto dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-417">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="d453e-418">I tag possono contenere gli hint per evitare ambiguità o fornire un contesto, ad esempio il cello"tag" può essere accompagnata dall'hint "strumento musicale".</span><span class="sxs-lookup"><span data-stu-id="d453e-418">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="d453e-419">Tutti i tag sono in inglese.</span><span class="sxs-lookup"><span data-stu-id="d453e-419">All tags are in English.</span></span>
      <span data-ttu-id="d453e-420">Sono supportati due metodi di input: (1) caricare un'immagine o (2) specificando un URL immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-420">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="d453e-421">Una risposta con esito positivo verrà restituita in formato JSON.</span><span class="sxs-lookup"><span data-stu-id="d453e-421">A successful response will be returned in JSON.</span></span> <span data-ttu-id="d453e-422">Se la richiesta ha esito negativo, la risposta conterrà un codice di errore e un messaggio per consentire di comprendere la causa dell'errore.</span><span class="sxs-lookup"><span data-stu-id="d453e-422">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientTagImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-423">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-423">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientTagImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1'
    name: 'tagImageInStream(msRest.HttpRequestBody, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d453e-424">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="d453e-424">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            <span data-ttu-id="d453e-425">Il callback</span><span class="sxs-lookup"><span data-stu-id="d453e-425">The callback</span></span>
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
references:
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
    name: ComputerVisionClientContext
    spec.typeScript:
      - name: ComputerVisionClientContext
        fullName: ComputerVisionClientContext
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: '@azure/cognitiveservices-computervision.ImageAnalysis'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
    name: ComputerVisionClientAnalyzeImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageOptionalParams
        fullName: ComputerVisionClientAnalyzeImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: '@azure/cognitiveservices-computervision.DomainModelResults'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
    name: ComputerVisionClientAnalyzeImageByDomainOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageByDomainOptionalParams
        fullName: ComputerVisionClientAnalyzeImageByDomainOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
    name: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
        fullName: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
    name: ComputerVisionClientAnalyzeImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageInStreamOptionalParams
        fullName: ComputerVisionClientAnalyzeImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageDescription
        fullName: ImageDescription
        uid: '@azure/cognitiveservices-computervision.ImageDescription'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
    name: ComputerVisionClientDescribeImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientDescribeImageOptionalParams
        fullName: ComputerVisionClientDescribeImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
    name: ComputerVisionClientDescribeImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientDescribeImageInStreamOptionalParams
        fullName: ComputerVisionClientDescribeImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectResult
        fullName: DetectResult
        uid: '@azure/cognitiveservices-computervision.DetectResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
    name: ComputerVisionClientGenerateThumbnailOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientGenerateThumbnailOptionalParams
        fullName: ComputerVisionClientGenerateThumbnailOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
    name: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
        fullName: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: '@azure/cognitiveservices-computervision.AreaOfInterestResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: '@azure/cognitiveservices-computervision.ReadOperationResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: '@azure/cognitiveservices-computervision.TextOperationResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: '@azure/cognitiveservices-computervision.ListModelsResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OcrResult
        fullName: OcrResult
        uid: '@azure/cognitiveservices-computervision.OcrResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
    name: ComputerVisionClientRecognizePrintedTextOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientRecognizePrintedTextOptionalParams
        fullName: ComputerVisionClientRecognizePrintedTextOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
    name: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
        fullName: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagResult
        fullName: TagResult
        uid: '@azure/cognitiveservices-computervision.TagResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
    name: ComputerVisionClientTagImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientTagImageOptionalParams
        fullName: ComputerVisionClientTagImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'
    name: ComputerVisionClientTagImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientTagImageInStreamOptionalParams
        fullName: ComputerVisionClientTagImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'