### YamlMime:UniversalReference
ms.openlocfilehash: 6f40749a7b6396c459d4028b64f24399f8eb6d7e
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 12/13/2018
ms.locfileid: "52017915"
items:
- uid: '@azure/event-processor-host.AzureBlobLease'
  name: AzureBlobLease
  fullName: AzureBlobLease
  children:
  - '@azure/event-processor-host.AzureBlobLease.constructor'
  - '@azure/event-processor-host.AzureBlobLease.blob'
  - '@azure/event-processor-host.AzureBlobLease.createFromPartitionId'
  - '@azure/event-processor-host.AzureBlobLease.getInfo'
  - '@azure/event-processor-host.AzureBlobLease.offset'
  - '@azure/event-processor-host.AzureBlobLease.sequenceNumber'
  - '@azure/event-processor-host.AzureBlobLease.serialize'
  - '@azure/event-processor-host.AzureBlobLease.token'
  langs:
  - typeScript
  type: class
  summary: Viene descritto il lease usato con un Blob di Azure per archiviare le informazioni di checkpoint.
  extends:
    name: '@azure/event-processor-host.CompleteLease'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.AzureBlobLease.constructor'
  name: AzureBlobLease(AzureBlobLeaseInfo)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new AzureBlobLease(info: AzureBlobLeaseInfo)'
    parameters:
    - id: info
      type:
      - '@azure/event-processor-host.AzureBlobLeaseInfo'
      description: ''
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.AzureBlobLease.blob'
  name: blob
  fullName: blob
  children: []
  langs:
  - typeScript
  type: property
  summary: '{AzureBlob} blob riferimento al blob di azure.'
  syntax:
    content: 'blob: AzureBlob'
    return:
      type:
      - AzureBlob
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.AzureBlobLease.createFromPartitionId'
  name: createFromPartitionId(string, AzureBlob)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un Lease per partitionId specificato.
  syntax:
    content: 'static function createFromPartitionId(id: string, blob: AzureBlob)'
    parameters:
    - id: id
      type:
      - string
      description: PartitionId per il quale il lease deve essere creata.
    - id: blob
      type:
      - AzureBlob
      description: Il riferimento al blob di azure
    return:
      type:
      - '@azure/event-processor-host.AzureBlobLease'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.AzureBlobLease.getInfo'
  name: getInfo()
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene le informazioni sul lease.
  syntax:
    content: function getInfo()
    parameters: []
    return:
      type:
      - '@azure/event-processor-host.LeaseInfo'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.AzureBlobLease.offset'
  name: offset
  fullName: offset
  children: []
  langs:
  - typeScript
  type: property
  summary: L'offset dell'evento da controllare dell'offset {stringa}.
  optional: true
  syntax:
    content: 'offset?: undefined | string'
    return:
      type:
      - undefined | string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.AzureBlobLease.sequenceNumber'
  name: sequenceNumber
  fullName: sequenceNumber
  children: []
  langs:
  - typeScript
  type: property
  summary: sequenceNumber {stringa} il numero di sequenza dell'evento da archiviare.
  syntax:
    content: 'sequenceNumber: number'
    return:
      type:
      - number
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.AzureBlobLease.serialize'
  name: serialize()
  children: []
  type: method
  langs:
  - typeScript
  summary: Serializza le informazioni relative al lease.
  syntax:
    content: function serialize()
    parameters: []
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.AzureBlobLease.token'
  name: token
  fullName: token
  children: []
  langs:
  - typeScript
  type: property
  summary: token {stringa} il token di lease che gestisce la concorrenza tra gli host. Ãˆ possibile usare questo token per garantire un accesso singolo a qualsiasi risorsa necessaria per il EPH.
  syntax:
    content: 'token: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
references:
- uid: '@azure/event-processor-host.CompleteLease'
  name: CompleteLease
  spec.typeScript:
  - name: CompleteLease
    fullName: CompleteLease
    uid: '@azure/event-processor-host.CompleteLease'
- uid: '@azure/event-processor-host.AzureBlobLeaseInfo'
  name: AzureBlobLeaseInfo
  spec.typeScript:
  - name: AzureBlobLeaseInfo
    fullName: AzureBlobLeaseInfo
    uid: '@azure/event-processor-host.AzureBlobLeaseInfo'
- uid: '@azure/event-processor-host.LeaseInfo'
  name: LeaseInfo
  spec.typeScript:
  - name: LeaseInfo
    fullName: LeaseInfo
    uid: '@azure/event-processor-host.LeaseInfo'
- uid: '@azure/event-processor-host.AzureBlobLease'
  name: AzureBlobLease
  spec.typeScript:
  - name: AzureBlobLease
    fullName: AzureBlobLease
    uid: '@azure/event-processor-host.AzureBlobLease'
