### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ChaosParameters'
    name: ChaosParameters
    fullName: ChaosParameters
    children:
      - '@azure/servicefabric.ChaosParameters.chaosTargetFilter'
      - '@azure/servicefabric.ChaosParameters.clusterHealthPolicy'
      - '@azure/servicefabric.ChaosParameters.context'
      - '@azure/servicefabric.ChaosParameters.enableMoveReplicaFaults'
      - '@azure/servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds'
      - '@azure/servicefabric.ChaosParameters.maxConcurrentFaults'
      - '@azure/servicefabric.ChaosParameters.timeToRunInSeconds'
      - '@azure/servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds'
      - '@azure/servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds'
    langs:
      - typeScript
    type: interface
    summary: Definisce tutti i parametri per configurare un'esecuzione di Chaos.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.chaosTargetFilter'
    name: chaosTargetFilter
    fullName: chaosTargetFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Elenco di entità del cluster di destinazione per gli errori Chaos.
      questo filtro consente di generare errori Chaos solo in nodi di tipo specifico o solo in alcune istanze dell'applicazione. Se non si usa ChaosTargetFilter, gli errori Chaos interessano tutte le entità del cluster.
      Se si usa ChaosTargetFilter, gli errori Chaos interessano solo le entità che soddisfano le specifiche di ChaosTargetFilter.
    optional: true
    syntax:
      content: 'chaosTargetFilter?: ChaosTargetFilter'
      return:
        type:
          - '@azure/servicefabric.ChaosTargetFilter'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.clusterHealthPolicy'
    name: clusterHealthPolicy
    fullName: clusterHealthPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Criteri di integrità del cluster passata viene utilizzato per convalidare l''integrità del cluster tra iterazioni di Chaos. Se l''integrità del cluster è in errore o se si verifica un''eccezione imprevista durante l''esecuzione dell''errore: per fornire al cluster con tempo di recupero, Chaos attende 30 minuti prima del controllo di integrità successivo.'
    optional: true
    syntax:
      content: 'clusterHealthPolicy?: ClusterHealthPolicy'
      return:
        type:
          - '@azure/servicefabric.ClusterHealthPolicy'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.context'
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Descrive una mappa, che è una raccolta di (stringa, stringa) digitare le coppie chiave-valore. La mappa può essere usata per registrare le informazioni sull'esecuzione di Chaos. Non possono esserci più di 100 coppie di questo tipo e ogni stringa (chiave o valore) può essere costituita da un massimo di 4095 caratteri.
      Questa mappa viene impostata dalla funzione di avvio dell'esecuzione di Chaos per l'archiviazione facoltativa del contesto dell'esecuzione specifica.
    optional: true
    syntax:
      content: 'context?: ChaosContext'
      return:
        type:
          - '@azure/servicefabric.ChaosContext'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.enableMoveReplicaFaults'
    name: enableMoveReplicaFaults
    fullName: enableMoveReplicaFaults
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Abilita o disabilita lo spostamento primario e sposta gli errori secondari. Il valore predefinito: true.'
    optional: true
    syntax:
      content: 'enableMoveReplicaFaults?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds'
    name: maxClusterStabilizationTimeoutInSeconds
    fullName: maxClusterStabilizationTimeoutInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Tempo di attesa massimo perché tutte le entità del cluster diventino stabili e integre.
      Chaos viene eseguito secondo iterazioni e all'inizio di ogni iterazione convalida l'integrità delle entità del cluster.
      Se durante la convalida un'entità del cluster non risulta stabile e integra entro il periodo di tempo specificato da MaxClusterStabilizationTimeoutInSeconds, Chaos genera un evento di convalida non riuscita. Valore predefinito: 60.
    optional: true
    syntax:
      content: 'maxClusterStabilizationTimeoutInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.maxConcurrentFaults'
    name: maxConcurrentFaults
    fullName: maxConcurrentFaults
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      MaxConcurrentFaults è il numero massimo di errori simultanei indotti per ogni iterazione.
      Chaos viene eseguito secondo iterazioni e due iterazioni consecutive sono separate da una fase di convalida.
      Maggiore è la concorrenza, più aggressivo l'inserimento degli errori, causando generando serie più complesse di stati per individuare i bug.
      È consigliabile iniziare con un valore di 2 o 3 e prestare attenzione durante l'incremento del valore.
      Valore predefinito: 1.
    optional: true
    syntax:
      content: 'maxConcurrentFaults?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.timeToRunInSeconds'
    name: timeToRunInSeconds
    fullName: timeToRunInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Tempo totale, in secondi, in cui Chaos verrà eseguito prima di interrompersi automaticamente. Il valore massimo consentito è 4.294.967.295 (System.UInt32.MaxValue). Valore predefinito: ''4294967295''.'
    optional: true
    syntax:
      content: 'timeToRunInSeconds?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds'
    name: waitTimeBetweenFaultsInSeconds
    fullName: waitTimeBetweenFaultsInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Tempo di attesa, in secondi, tra errori consecutivi all'interno di una singola iterazione.
      Maggiore è il valore, minore è la sovrapposizione tra gli errori e più semplice la sequenza delle transizioni di stato che attraversa il cluster.
      È consigliabile iniziare con un valore compreso tra 1 e 5 e prestare attenzione durante l'incremento del valore. Valore predefinito: 20.
    optional: true
    syntax:
      content: 'waitTimeBetweenFaultsInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds'
    name: waitTimeBetweenIterationsInSeconds
    fullName: waitTimeBetweenIterationsInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Intervallo di tempo, in secondi, tra due iterazioni consecutive di Chaos.
      Maggiore è il valore, minore è la frequenza di inserimento degli errori. Valore predefinito: 30.
    optional: true
    syntax:
      content: 'waitTimeBetweenIterationsInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ChaosTargetFilter'
    name: ChaosTargetFilter
    spec.typeScript:
      - name: ChaosTargetFilter
        fullName: ChaosTargetFilter
        uid: '@azure/servicefabric.ChaosTargetFilter'
  - uid: '@azure/servicefabric.ClusterHealthPolicy'
    name: ClusterHealthPolicy
    spec.typeScript:
      - name: ClusterHealthPolicy
        fullName: ClusterHealthPolicy
        uid: '@azure/servicefabric.ClusterHealthPolicy'
  - uid: '@azure/servicefabric.ChaosContext'
    name: ChaosContext
    spec.typeScript:
      - name: ChaosContext
        fullName: ChaosContext
        uid: '@azure/servicefabric.ChaosContext'