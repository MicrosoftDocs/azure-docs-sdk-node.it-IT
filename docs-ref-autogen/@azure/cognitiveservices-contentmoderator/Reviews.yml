### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews'
    name: Reviews
    fullName: Reviews
    children:
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createJob'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createJob_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createJob_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createReviews'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createReviews_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createReviews_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getReview'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getReview_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getReview_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview'
      - '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview_2'
      - '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview_1'
      - '@azure/cognitiveservices-contentmoderator.Reviews.constructor'
    langs:
      - typeScript
    type: class
    summary: Classe che rappresenta un revisioni.
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame'
    name: 'addVideoFrame(string, string, Models.ReviewsAddVideoFrameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.
      <h3>Schemi di callBack </h3>
      <h4>Esempio di CallBack di completamento di revisione</h4>
      <p>
      {<br/>
      "ReviewId": "<Review Id>",<br/>
      "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>
      "ModifiedBy": "<Name of the Reviewer>",<br/>
      "CallBackType": "Verifica",<br/>
      "ContentId": "<The ContentId that was specified input>",<br/>
      "Metadati": {<br/>
      "adultscore": "0.xxx",<br/>
      "a": "False",<br/>
      "racyscore": "0.xxx",<br/>
      "r": "True"<br/>
      },<br/>
      "ReviewerResultTags": {<br/>
      "a": "False",<br/>
      "r": "True"<br/>
      }<br/>
      }<br/>

      </p>.
    syntax:
      content: 'function addVideoFrame(teamName: string, reviewId: string, options?: Models.ReviewsAddVideoFrameOptionalParams)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: options
          type:
            - Models.ReviewsAddVideoFrameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame_2'
    name: 'addVideoFrame(string, string, ReviewsAddVideoFrameOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addVideoFrame(teamName: string, reviewId: string, options: ReviewsAddVideoFrameOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrame_1'
    name: 'addVideoFrame(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addVideoFrame(teamName: string, reviewId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream'
    name: 'addVideoFrameStream(string, string, string, msRest.HttpRequestBody, string, Models.ReviewsAddVideoFrameStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Utilizzare questo metodo per aggiungere un frame per una revisione del video. Scala cronologica: Questo parametro è un fattore che consente di convertire il timestamp associato a un intervallo in millisecondi. Valore di scala cronologica viene fornito nell''output del processore multimediale di video di Content Moderator nella piattaforma servizi multimediali di Azure. Scala cronologica nell''output di moderazione dei Video è di tick al secondo.'
    syntax:
      content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: msRest.HttpRequestBody, frameMetadata: string, options?: Models.ReviewsAddVideoFrameStreamOptionalParams)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: frameImageZip
          type:
            - msRest.HttpRequestBody
          description: File zip contenente le immagini di frame.
        - id: frameMetadata
          type:
            - string
          description: Metadati del frame.
        - id: options
          type:
            - Models.ReviewsAddVideoFrameStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_2'
    name: 'addVideoFrameStream(string, string, string, msRest.HttpRequestBody, string, ReviewsAddVideoFrameStreamOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: msRest.HttpRequestBody, frameMetadata: string, options: ReviewsAddVideoFrameStreamOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: frameImageZip
          type:
            - msRest.HttpRequestBody
          description: File zip contenente le immagini di frame.
        - id: frameMetadata
          type:
            - string
          description: Metadati del frame.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameStreamOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_1'
    name: 'addVideoFrameStream(string, string, string, msRest.HttpRequestBody, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: msRest.HttpRequestBody, frameMetadata: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: frameImageZip
          type:
            - msRest.HttpRequestBody
          description: File zip contenente le immagini di frame.
        - id: frameMetadata
          type:
            - string
          description: Metadati del frame.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl'
    name: 'addVideoFrameUrl(string, string, string, VideoFrameBodyItem[], Models.ReviewsAddVideoFrameUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Utilizzare questo metodo per aggiungere un frame per una revisione del video. Scala cronologica: Questo parametro è un fattore che consente di convertire il timestamp associato a un intervallo in millisecondi. Valore di scala cronologica viene fornito nell''output del processore multimediale di video di Content Moderator nella piattaforma servizi multimediali di Azure. Scala cronologica nell''output di moderazione dei Video è di tick al secondo.'
    syntax:
      content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options?: Models.ReviewsAddVideoFrameUrlOptionalParams)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: videoFrameBody
          type:
            - '@azure/cognitiveservices-contentmoderator.VideoFrameBodyItem[]'
          description: Il corpo per aggiungere fotogrammi video API
        - id: options
          type:
            - Models.ReviewsAddVideoFrameUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_2'
    name: 'addVideoFrameUrl(string, string, string, VideoFrameBodyItem[], ReviewsAddVideoFrameUrlOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options: ReviewsAddVideoFrameUrlOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: videoFrameBody
          type:
            - '@azure/cognitiveservices-contentmoderator.VideoFrameBodyItem[]'
          description: Il corpo per aggiungere fotogrammi video API
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameUrlOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_1'
    name: 'addVideoFrameUrl(string, string, string, VideoFrameBodyItem[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], callback: ServiceCallback<void>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: videoFrameBody
          type:
            - '@azure/cognitiveservices-contentmoderator.VideoFrameBodyItem[]'
          description: Il corpo per aggiungere fotogrammi video API
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript'
    name: 'addVideoTranscript(string, string, msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Questa API aggiunge un file di trascrizione (versione di testo di tutte le parole parlata in un video) a una revisione del video. Il file deve essere un formato WebVTT valido.
    syntax:
      content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: vTTfile
          type:
            - msRest.HttpRequestBody
          description: File di trascrizione del video.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript_2'
    name: 'addVideoTranscript(string, string, msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: vTTfile
          type:
            - msRest.HttpRequestBody
          description: File di trascrizione del video.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscript_1'
    name: 'addVideoTranscript(string, string, msRest.HttpRequestBody, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: msRest.HttpRequestBody, callback: ServiceCallback<void>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: vTTfile
          type:
            - msRest.HttpRequestBody
          description: File di trascrizione del video.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult'
    name: 'addVideoTranscriptModerationResult(string, string, string, TranscriptModerationBodyItem[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Questa API aggiunge un file di risultati trascrizione testo sullo schermo per una revisione del video. File di trascrizione schermata testo risultato è il risultato dell''API traduzione testuale dello schermo. Per generare file di risultati di trascrizione schermata testo, un file di trascrizione deve essere vagliate per il contenuto volgare usando l''API traduzione testuale dello schermo.'
    syntax:
      content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options?: msRest.RequestOptionsBase)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: transcriptModerationBody
          type:
            - '@azure/cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]'
          description: Il corpo per aggiungere i risultati di moderazione di trascrizione del video API
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_2'
    name: 'addVideoTranscriptModerationResult(string, string, string, TranscriptModerationBodyItem[], RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: transcriptModerationBody
          type:
            - '@azure/cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]'
          description: Il corpo per aggiungere i risultati di moderazione di trascrizione del video API
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_1'
    name: 'addVideoTranscriptModerationResult(string, string, string, TranscriptModerationBodyItem[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], callback: ServiceCallback<void>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: transcriptModerationBody
          type:
            - '@azure/cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]'
          description: Il corpo per aggiungere i risultati di moderazione di trascrizione del video API
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createJob'
    name: 'createJob(string, Models.ContentType, string, string, Models.JobContentType, Content, Models.ReviewsCreateJobOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Un processo che viene restituito l'Id per il contenuto pubblicato in questo endpoint.
      Dopo che il contenuto viene valutato in base al flusso di lavoro fornito non verrà creata o ignorata la revisione in base l'espressione del flusso di lavoro.

      <h3>Schemi di callBack </h3>

      <p>
      <h4>Esempio di CallBack di completamento processo</h4><br/>

      {<br/>
      "JobId": "<Job Id>,<br/>
      "ReviewId": "< Id revisione, se il processo ha comportato una revisione da creare >",<br/>
      "WorkFlowId": "default",<br/>
      "Status": "< possibile scegliere di errore completa, in corso, >",<br/>
      "ContentType": "Image",<br/>
      "ContentId": "<This is the ContentId that was specified on input>",<br/>
      "CallBackType": "Processo",<br/>
      "Metadati": {<br/>
      "adultscore": "0.xxx",<br/>
      "a": "False",<br/>
      "racyscore": "0.xxx",<br/>
      "r": "True"<br/>
      }<br/>
      }<br/>

      </p>
      <p>
      <h4>Esempio di CallBack di completamento di revisione</h4><br/>

      { "ReviewId": "<Review Id>",<br/>
      "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>
      "ModifiedBy": "<Name of the Reviewer>",<br/>
      "CallBackType": "Verifica",<br/>
      "ContentId": "<The ContentId that was specified input>",<br/>
      "Metadati": {<br/>
      "adultscore": "0.xxx", "a": "False",<br/>
      "racyscore": "0.xxx",<br/>
      "r": "True"<br/>
      },<br/>
      "ReviewerResultTags": {<br/>
      "a": "False",<br/>
      "r": "True"<br/>
      }<br/>
      }<br/>

      </p>.
    syntax:
      content: 'function createJob(teamName: string, contentType: Models.ContentType, contentId: string, workflowName: string, jobContentType: Models.JobContentType, content: Content, options?: Models.ReviewsCreateJobOptionalParams)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: contentType
          type:
            - Models.ContentType
          description: 'Immagine, testo o Video. I valori possibili sono: ''Image'', ''Text'', ''Video'''
        - id: contentId
          type:
            - string
          description: ID/nome per identificare il contenuto inviato.
        - id: workflowName
          type:
            - string
          description: Nome del flusso di lavoro che si vuole richiamare.
        - id: jobContentType
          type:
            - Models.JobContentType
          description: 'Il tipo di contenuto. Possible values include: ''application/json'', ''image/jpeg'''
        - id: content
          type:
            - '@azure/cognitiveservices-contentmoderator.Content'
          description: Contenuto da valutare.
        - id: options
          type:
            - Models.ReviewsCreateJobOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsCreateJobResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createJob_2'
    name: 'createJob(string, Models.ContentType, string, string, Models.JobContentType, Content, ReviewsCreateJobOptionalParams, ServiceCallback<JobId>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createJob(teamName: string, contentType: Models.ContentType, contentId: string, workflowName: string, jobContentType: Models.JobContentType, content: Content, options: ReviewsCreateJobOptionalParams, callback: ServiceCallback<JobId>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: contentType
          type:
            - Models.ContentType
          description: 'Immagine, testo o Video. I valori possibili sono: ''Image'', ''Text'', ''Video'''
        - id: contentId
          type:
            - string
          description: ID/nome per identificare il contenuto inviato.
        - id: workflowName
          type:
            - string
          description: Nome del flusso di lavoro che si vuole richiamare.
        - id: jobContentType
          type:
            - Models.JobContentType
          description: 'Il tipo di contenuto. Possible values include: ''application/json'', ''image/jpeg'''
        - id: content
          type:
            - '@azure/cognitiveservices-contentmoderator.Content'
          description: Contenuto da valutare.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ReviewsCreateJobOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.JobId>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsCreateJobResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createJob_1'
    name: 'createJob(string, Models.ContentType, string, string, Models.JobContentType, Content, ServiceCallback<JobId>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createJob(teamName: string, contentType: Models.ContentType, contentId: string, workflowName: string, jobContentType: Models.JobContentType, content: Content, callback: ServiceCallback<JobId>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: contentType
          type:
            - Models.ContentType
          description: 'Immagine, testo o Video. I valori possibili sono: ''Image'', ''Text'', ''Video'''
        - id: contentId
          type:
            - string
          description: ID/nome per identificare il contenuto inviato.
        - id: workflowName
          type:
            - string
          description: Nome del flusso di lavoro che si vuole richiamare.
        - id: jobContentType
          type:
            - Models.JobContentType
          description: 'Il tipo di contenuto. Possible values include: ''application/json'', ''image/jpeg'''
        - id: content
          type:
            - '@azure/cognitiveservices-contentmoderator.Content'
          description: Contenuto da valutare.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.JobId>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsCreateJobResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createReviews'
    name: 'createReviews(string, string, CreateReviewBodyItem[], Models.ReviewsCreateReviewsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.
      <h3>Schemi di callBack </h3>
      <h4>Esempio di CallBack di completamento di revisione</h4>
      <p>
      {<br/>
      "ReviewId": "<Review Id>",<br/>
      "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>
      "ModifiedBy": "<Name of the Reviewer>",<br/>
      "CallBackType": "Verifica",<br/>
      "ContentId": "<The ContentId that was specified input>",<br/>
      "Metadati": {<br/>
      "adultscore": "0.xxx",<br/>
      "a": "False",<br/>
      "racyscore": "0.xxx",<br/>
      "r": "True"<br/>
      },<br/>
      "ReviewerResultTags": {<br/>
      "a": "False",<br/>
      "r": "True"<br/>
      }<br/>
      }<br/>

      </p>.
    syntax:
      content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options?: Models.ReviewsCreateReviewsOptionalParams)'
      parameters:
        - id: urlContentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: createReviewBody
          type:
            - '@azure/cognitiveservices-contentmoderator.CreateReviewBodyItem[]'
          description: Corpo per le revisioni crea API
        - id: options
          type:
            - Models.ReviewsCreateReviewsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsCreateReviewsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createReviews_2'
    name: 'createReviews(string, string, CreateReviewBodyItem[], ReviewsCreateReviewsOptionalParams, ServiceCallback<string[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options: ReviewsCreateReviewsOptionalParams, callback: ServiceCallback<string[]>)'
      parameters:
        - id: urlContentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: createReviewBody
          type:
            - '@azure/cognitiveservices-contentmoderator.CreateReviewBodyItem[]'
          description: Corpo per le revisioni crea API
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ReviewsCreateReviewsOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsCreateReviewsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createReviews_1'
    name: 'createReviews(string, string, CreateReviewBodyItem[], ServiceCallback<string[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], callback: ServiceCallback<string[]>)'
      parameters:
        - id: urlContentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: createReviewBody
          type:
            - '@azure/cognitiveservices-contentmoderator.CreateReviewBodyItem[]'
          description: Corpo per le revisioni crea API
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsCreateReviewsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews'
    name: 'createVideoReviews(string, string, CreateVideoReviewsBodyItem[], Models.ReviewsCreateVideoReviewsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.
      <h3>Schemi di callBack </h3>
      <h4>Esempio di CallBack di completamento di revisione</h4>
      <p>
      {<br/>
      "ReviewId": "<Review Id>",<br/>
      "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>
      "ModifiedBy": "<Name of the Reviewer>",<br/>
      "CallBackType": "Verifica",<br/>
      "ContentId": "<The ContentId that was specified input>",<br/>
      "Metadati": {<br/>
      "adultscore": "0.xxx",<br/>
      "a": "False",<br/>
      "racyscore": "0.xxx",<br/>
      "r": "True"<br/>
      },<br/>
      "ReviewerResultTags": {<br/>
      "a": "False",<br/>
      "r": "True"<br/>
      }<br/>
      }<br/>

      </p>.
    syntax:
      content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options?: Models.ReviewsCreateVideoReviewsOptionalParams)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: createVideoReviewsBody
          type:
            - '@azure/cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]'
          description: Corpo per le revisioni crea API
        - id: options
          type:
            - Models.ReviewsCreateVideoReviewsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsCreateVideoReviewsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews_2'
    name: 'createVideoReviews(string, string, CreateVideoReviewsBodyItem[], ReviewsCreateVideoReviewsOptionalParams, ServiceCallback<string[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options: ReviewsCreateVideoReviewsOptionalParams, callback: ServiceCallback<string[]>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: createVideoReviewsBody
          type:
            - '@azure/cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]'
          description: Corpo per le revisioni crea API
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ReviewsCreateVideoReviewsOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsCreateVideoReviewsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.createVideoReviews_1'
    name: 'createVideoReviews(string, string, CreateVideoReviewsBodyItem[], ServiceCallback<string[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], callback: ServiceCallback<string[]>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Il tipo di contenuto.
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: createVideoReviewsBody
          type:
            - '@azure/cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]'
          description: Corpo per le revisioni crea API
        - id: callback
          type:
            - 'ServiceCallback<string[]>'
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsCreateVideoReviewsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails'
    name: 'getJobDetails(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ottenere i dettagli del processo per un ID di processo.
    syntax:
      content: 'function getJobDetails(teamName: string, jobId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del Team.
        - id: jobId
          type:
            - string
          description: ID del processo.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsGetJobDetailsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails_2'
    name: 'getJobDetails(string, string, RequestOptionsBase, ServiceCallback<Job>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getJobDetails(teamName: string, jobId: string, options: RequestOptionsBase, callback: ServiceCallback<Job>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del Team.
        - id: jobId
          type:
            - string
          description: ID del processo.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Job>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsGetJobDetailsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getJobDetails_1'
    name: 'getJobDetails(string, string, ServiceCallback<Job>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getJobDetails(teamName: string, jobId: string, callback: ServiceCallback<Job>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del Team.
        - id: jobId
          type:
            - string
          description: ID del processo.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Job>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsGetJobDetailsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getReview'
    name: 'getReview(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restituisce esaminare i dettagli per la revisione che ID passato.
    syntax:
      content: 'function getReview(teamName: string, reviewId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del Team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsGetReviewResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getReview_2'
    name: 'getReview(string, string, RequestOptionsBase, ServiceCallback<Review>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReview(teamName: string, reviewId: string, options: RequestOptionsBase, callback: ServiceCallback<Review>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del Team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Review>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsGetReviewResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getReview_1'
    name: 'getReview(string, string, ServiceCallback<Review>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReview(teamName: string, reviewId: string, callback: ServiceCallback<Review>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del Team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Review>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsGetReviewResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames'
    name: 'getVideoFrames(string, string, Models.ReviewsGetVideoFramesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.
      <h3>Schemi di callBack </h3>
      <h4>Esempio di CallBack di completamento di revisione</h4>
      <p>
      {<br/>
      "ReviewId": "<Review Id>",<br/>
      "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>
      "ModifiedBy": "<Name of the Reviewer>",<br/>
      "CallBackType": "Verifica",<br/>
      "ContentId": "<The ContentId that was specified input>",<br/>
      "Metadati": {<br/>
      "adultscore": "0.xxx",<br/>
      "a": "False",<br/>
      "racyscore": "0.xxx",<br/>
      "r": "True"<br/>
      },<br/>
      "ReviewerResultTags": {<br/>
      "a": "False",<br/>
      "r": "True"<br/>
      }<br/>
      }<br/>

      </p>.
    syntax:
      content: 'function getVideoFrames(teamName: string, reviewId: string, options?: Models.ReviewsGetVideoFramesOptionalParams)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: options
          type:
            - Models.ReviewsGetVideoFramesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ReviewsGetVideoFramesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames_2'
    name: 'getVideoFrames(string, string, ReviewsGetVideoFramesOptionalParams, ServiceCallback<Frames>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getVideoFrames(teamName: string, reviewId: string, options: ReviewsGetVideoFramesOptionalParams, callback: ServiceCallback<Frames>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ReviewsGetVideoFramesOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Frames>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsGetVideoFramesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.getVideoFrames_1'
    name: 'getVideoFrames(string, string, ServiceCallback<Frames>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getVideoFrames(teamName: string, reviewId: string, callback: ServiceCallback<Frames>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Frames>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.ReviewsGetVideoFramesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview'
    name: 'publishVideoReview(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Pubblicare la revisione di video per renderlo disponibile per la revisione.
    syntax:
      content: 'function publishVideoReview(teamName: string, reviewId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview_2'
    name: 'publishVideoReview(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function publishVideoReview(teamName: string, reviewId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.publishVideoReview_1'
    name: 'publishVideoReview(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function publishVideoReview(teamName: string, reviewId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: teamName
          type:
            - string
          description: Nome del team.
        - id: reviewId
          type:
            - string
          description: ID della verifica.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.Reviews.constructor'
    name: Reviews(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creare un revisioni.
    syntax:
      content: 'new Reviews(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
          description: |
            Riferimento al client del servizio.
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
  - uid: '@azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameOptionalParams'
    name: ReviewsAddVideoFrameOptionalParams
    spec.typeScript:
      - name: ReviewsAddVideoFrameOptionalParams
        fullName: ReviewsAddVideoFrameOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameStreamOptionalParams'
    name: ReviewsAddVideoFrameStreamOptionalParams
    spec.typeScript:
      - name: ReviewsAddVideoFrameStreamOptionalParams
        fullName: ReviewsAddVideoFrameStreamOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameStreamOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.VideoFrameBodyItem[]'
    name: 'VideoFrameBodyItem[]'
    spec.typeScript:
      - name: VideoFrameBodyItem
        fullName: VideoFrameBodyItem
        uid: '@azure/cognitiveservices-contentmoderator.VideoFrameBodyItem'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameUrlOptionalParams'
    name: ReviewsAddVideoFrameUrlOptionalParams
    spec.typeScript:
      - name: ReviewsAddVideoFrameUrlOptionalParams
        fullName: ReviewsAddVideoFrameUrlOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ReviewsAddVideoFrameUrlOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]'
    name: 'TranscriptModerationBodyItem[]'
    spec.typeScript:
      - name: TranscriptModerationBodyItem
        fullName: TranscriptModerationBodyItem
        uid: '@azure/cognitiveservices-contentmoderator.TranscriptModerationBodyItem'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/cognitiveservices-contentmoderator.Content'
    name: Content
    spec.typeScript:
      - name: Content
        fullName: Content
        uid: '@azure/cognitiveservices-contentmoderator.Content'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.JobId>
    name: JobId>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: JobId
        fullName: JobId
        uid: '@azure/cognitiveservices-contentmoderator.JobId'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ReviewsCreateJobOptionalParams'
    name: ReviewsCreateJobOptionalParams
    spec.typeScript:
      - name: ReviewsCreateJobOptionalParams
        fullName: ReviewsCreateJobOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ReviewsCreateJobOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.CreateReviewBodyItem[]'
    name: 'CreateReviewBodyItem[]'
    spec.typeScript:
      - name: CreateReviewBodyItem
        fullName: CreateReviewBodyItem
        uid: '@azure/cognitiveservices-contentmoderator.CreateReviewBodyItem'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/cognitiveservices-contentmoderator.ReviewsCreateReviewsOptionalParams'
    name: ReviewsCreateReviewsOptionalParams
    spec.typeScript:
      - name: ReviewsCreateReviewsOptionalParams
        fullName: ReviewsCreateReviewsOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ReviewsCreateReviewsOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]'
    name: 'CreateVideoReviewsBodyItem[]'
    spec.typeScript:
      - name: CreateVideoReviewsBodyItem
        fullName: CreateVideoReviewsBodyItem
        uid: '@azure/cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/cognitiveservices-contentmoderator.ReviewsCreateVideoReviewsOptionalParams'
    name: ReviewsCreateVideoReviewsOptionalParams
    spec.typeScript:
      - name: ReviewsCreateVideoReviewsOptionalParams
        fullName: ReviewsCreateVideoReviewsOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ReviewsCreateVideoReviewsOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Job>
    name: Job>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Job
        fullName: Job
        uid: '@azure/cognitiveservices-contentmoderator.Job'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Review>
    name: Review>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Review
        fullName: Review
        uid: '@azure/cognitiveservices-contentmoderator.Review'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Frames>
    name: Frames>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Frames
        fullName: Frames
        uid: '@azure/cognitiveservices-contentmoderator.Frames'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ReviewsGetVideoFramesOptionalParams'
    name: ReviewsGetVideoFramesOptionalParams
    spec.typeScript:
      - name: ReviewsGetVideoFramesOptionalParams
        fullName: ReviewsGetVideoFramesOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ReviewsGetVideoFramesOptionalParams'