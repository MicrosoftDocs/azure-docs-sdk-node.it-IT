### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm'
    name: ListManagementTerm
    fullName: ListManagementTerm
    children:
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.constructor'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="96d84-101">Classe che rappresenta un ListManagementTerm.</span><span class="sxs-lookup"><span data-stu-id="96d84-101">Class representing a ListManagementTerm.</span></span>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm'
    name: 'addTerm(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="96d84-102">Aggiungere un termine all'elenco di termini con elenco di Id uguale all'elenco di che ID passato.</span><span class="sxs-lookup"><span data-stu-id="96d84-102">Add a term to the term list with list Id equal to list Id passed.</span></span>
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-103">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-103">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="96d84-104">Termine da eliminare</span><span class="sxs-lookup"><span data-stu-id="96d84-104">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-105">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-105">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2'
    name: 'addTerm(string, string, string, RequestOptionsBase, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<any>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-106">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-106">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="96d84-107">Termine da eliminare</span><span class="sxs-lookup"><span data-stu-id="96d84-107">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-108">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-108">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="96d84-109">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="96d84-109">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="96d84-110">Il callback</span><span class="sxs-lookup"><span data-stu-id="96d84-110">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1'
    name: 'addTerm(string, string, string, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, callback: ServiceCallback<any>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-111">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-111">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="96d84-112">Termine da eliminare</span><span class="sxs-lookup"><span data-stu-id="96d84-112">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-113">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-113">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="96d84-114">Il callback</span><span class="sxs-lookup"><span data-stu-id="96d84-114">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms'
    name: 'deleteAllTerms(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="96d84-115">Elimina tutte le condizioni nell'elenco con elenco di Id uguale all'elenco di che ID passato.</span><span class="sxs-lookup"><span data-stu-id="96d84-115">Deletes all terms from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-116">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-116">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-117">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-117">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2'
    name: 'deleteAllTerms(string, string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-118">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-118">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-119">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-119">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="96d84-120">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="96d84-120">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="96d84-121">Il callback</span><span class="sxs-lookup"><span data-stu-id="96d84-121">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1'
    name: 'deleteAllTerms(string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-122">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-122">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-123">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-123">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="96d84-124">Il callback</span><span class="sxs-lookup"><span data-stu-id="96d84-124">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm'
    name: 'deleteTerm(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="96d84-125">Elimina un termine nell'elenco con elenco di Id uguale all'elenco di che ID passato.</span><span class="sxs-lookup"><span data-stu-id="96d84-125">Deletes a term from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-126">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-126">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="96d84-127">Termine da eliminare</span><span class="sxs-lookup"><span data-stu-id="96d84-127">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-128">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-128">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2'
    name: 'deleteTerm(string, string, string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-129">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-129">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="96d84-130">Termine da eliminare</span><span class="sxs-lookup"><span data-stu-id="96d84-130">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-131">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-131">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="96d84-132">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="96d84-132">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="96d84-133">Il callback</span><span class="sxs-lookup"><span data-stu-id="96d84-133">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1'
    name: 'deleteTerm(string, string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-134">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-134">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="96d84-135">Termine da eliminare</span><span class="sxs-lookup"><span data-stu-id="96d84-135">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-136">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-136">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="96d84-137">Il callback</span><span class="sxs-lookup"><span data-stu-id="96d84-137">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2'
    name: 'getAllTerms(string, string, ListManagementTermGetAllTermsOptionalParams, ServiceCallback<Terms>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllTerms(listId: string, language: string, options: ListManagementTermGetAllTermsOptionalParams, callback: ServiceCallback<Terms>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-138">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-138">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-139">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-139">Language of the terms.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'
          description: <span data-ttu-id="96d84-140">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="96d84-140">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
          description: |
            <span data-ttu-id="96d84-141">Il callback</span><span class="sxs-lookup"><span data-stu-id="96d84-141">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms'
    name: 'getAllTerms(string, string, Models.ListManagementTermGetAllTermsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="96d84-142">Ottiene tutte le condizioni nell'elenco con l'Id elenco uguale all'elenco di che ID passato.</span><span class="sxs-lookup"><span data-stu-id="96d84-142">Gets all terms from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function getAllTerms(listId: string, language: string, options?: Models.ListManagementTermGetAllTermsOptionalParams)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-143">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-143">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-144">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-144">Language of the terms.</span></span>
        - id: options
          type:
            - Models.ListManagementTermGetAllTermsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1'
    name: 'getAllTerms(string, string, ServiceCallback<Terms>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllTerms(listId: string, language: string, callback: ServiceCallback<Terms>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="96d84-145">Id dell'elenco dell'elenco immagini.</span><span class="sxs-lookup"><span data-stu-id="96d84-145">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="96d84-146">Lingua delle condizioni.</span><span class="sxs-lookup"><span data-stu-id="96d84-146">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
          description: |
            <span data-ttu-id="96d84-147">Il callback</span><span class="sxs-lookup"><span data-stu-id="96d84-147">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.constructor'
    name: ListManagementTerm(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="96d84-148">Creare un ListManagementTerm.</span><span class="sxs-lookup"><span data-stu-id="96d84-148">Create a ListManagementTerm.</span></span>
    syntax:
      content: 'new ListManagementTerm(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
          description: |
            <span data-ttu-id="96d84-149">Riferimento al client del servizio.</span><span class="sxs-lookup"><span data-stu-id="96d84-149">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
    name: Terms>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Terms
        fullName: Terms
        uid: '@azure/cognitiveservices-contentmoderator.Terms'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'
    name: ListManagementTermGetAllTermsOptionalParams
    spec.typeScript:
      - name: ListManagementTermGetAllTermsOptionalParams
        fullName: ListManagementTermGetAllTermsOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'