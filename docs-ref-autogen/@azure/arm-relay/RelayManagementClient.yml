### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-relay.RelayManagementClient'
    name: RelayManagementClient
    fullName: RelayManagementClient
    children:
      - '@azure/arm-relay.RelayManagementClient.acceptLanguage'
      - '@azure/arm-relay.RelayManagementClient.apiVersion'
      - '@azure/arm-relay.RelayManagementClient.beginLongRunningRequest'
      - '@azure/arm-relay.RelayManagementClient.credentials'
      - '@azure/arm-relay.RelayManagementClient.hybridConnections'
      - '@azure/arm-relay.RelayManagementClient.longRunningOperationRetryTimeout'
      - '@azure/arm-relay.RelayManagementClient.namespaces'
      - '@azure/arm-relay.RelayManagementClient.operations'
      - '@azure/arm-relay.RelayManagementClient.constructor'
      - '@azure/arm-relay.RelayManagementClient.restoreLROPoller'
      - '@azure/arm-relay.RelayManagementClient.sendLongRunningRequest'
      - '@azure/arm-relay.RelayManagementClient.sendLRORequest'
      - '@azure/arm-relay.RelayManagementClient.sendOperationRequest'
      - '@azure/arm-relay.RelayManagementClient.sendRequest'
      - '@azure/arm-relay.RelayManagementClient.subscriptionId'
      - '@azure/arm-relay.RelayManagementClient.wCFRelays'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-relay.RelayManagementClientContext'
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inviare la richiesta iniziale di un operazioni a esecuzione Prolungata (operazione a esecuzione prolungata) e ottenere nuovamente un HttpLongRunningOperationResponse che fornisce metodi per il polling di operazioni a esecuzione Prolungata e verifica se le operazioni a esecuzione Prolungata è stata completata.
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: L'oggetto richiesta
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.hybridConnections'
    name: hybridConnections
    fullName: hybridConnections
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'hybridConnections: HybridConnections'
      return:
        type:
          - '@azure/arm-relay.HybridConnections'
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: Il timeout di ripetizione dei tentativi in secondi per operazioni con esecuzione prolungata. Il valore predefinito è 30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.namespaces'
    name: namespaces
    fullName: namespaces
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'namespaces: Namespaces'
      return:
        type:
          - '@azure/arm-relay.Namespaces'
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-relay.Operations'
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.constructor'
    name: 'RelayManagementClient(ServiceClientCredentials, string, Models.RelayManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Inizializza una nuova istanza della classe RelayManagementClient.
    syntax:
      content: 'new RelayManagementClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.RelayManagementClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credenziali necessarie per il client per connettersi ad Azure.
        - id: subscriptionId
          type:
            - string
          description: Credenziali della sottoscrizione che lo identificano in modo univoco la sottoscrizione di Microsoft Azure. L'ID sottoscrizione fa parte dell'URI per ogni chiamata di servizio.
        - id: options
          type:
            - Models.RelayManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: Ripristinare un LROPoller dal LROPollState fornito. Questo metodo può essere utilizzato per ricreare un LROPoller su un altro processo o computer.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Fornisce un meccanismo per eseguire una richiesta che si esegue il polling e fornirà il risultato finale.
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: L'oggetto richiesta
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inviare la richiesta iniziale di un operazioni a esecuzione Prolungata (operazione a esecuzione prolungata) e ottenere nuovamente un LROPoller che fornisce metodi per il polling di operazioni a esecuzione Prolungata e verifica se le operazioni a esecuzione Prolungata è stata completata.
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Gli argomenti per l'operazione.
        - id: operationSpec
          type:
            - OperationSpec
          description: Specifica per l'operazione.
        - id: options
          type:
            - RequestOptionsBase
          description: Opzioni aggiuntive da inviare durante la richiesta.
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inviare una richiesta HTTP che viene popolata usando il OperationSpec fornito.
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Gli argomenti che verranno popolati con i valori basati su modelli della richiesta HTTP.
        - id: operationSpec
          type:
            - OperationSpec
          description: OperationSpec da usare per popolare il httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Callback da chiamare quando viene ricevuta la risposta.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Invio di richiesta HTTP specificato.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-relay'
  - uid: '@azure/arm-relay.RelayManagementClient.wCFRelays'
    name: wCFRelays
    fullName: wCFRelays
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'wCFRelays: WCFRelays'
      return:
        type:
          - '@azure/arm-relay.WCFRelays'
    package: '@azure/arm-relay'
references:
  - uid: '@azure/arm-relay.RelayManagementClientContext'
    name: RelayManagementClientContext
    spec.typeScript:
      - name: RelayManagementClientContext
        fullName: RelayManagementClientContext
        uid: '@azure/arm-relay.RelayManagementClientContext'
  - uid: '@azure/arm-relay.HybridConnections'
    name: HybridConnections
    spec.typeScript:
      - name: HybridConnections
        fullName: HybridConnections
        uid: '@azure/arm-relay.HybridConnections'
  - uid: '@azure/arm-relay.Namespaces'
    name: Namespaces
    spec.typeScript:
      - name: Namespaces
        fullName: Namespaces
        uid: '@azure/arm-relay.Namespaces'
  - uid: '@azure/arm-relay.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-relay.Operations'
  - uid: '@azure/arm-relay.WCFRelays'
    name: WCFRelays
    spec.typeScript:
      - name: WCFRelays
        fullName: WCFRelays
        uid: '@azure/arm-relay.WCFRelays'