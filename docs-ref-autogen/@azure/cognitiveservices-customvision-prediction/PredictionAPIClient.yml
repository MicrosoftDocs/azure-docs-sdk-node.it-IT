### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient'
    name: PredictionAPIClient
    fullName: PredictionAPIClient
    children:
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey'
    name: apiKey
    fullName: apiKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiKey: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientClassifyImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientClassifyImageOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-101">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-101">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-102">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-102">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-103">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-103">Binary image data.</span></span> <span data-ttu-id="63da8-104">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-104">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-105">Supporta le immagini fino a 4MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-105">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, PredictionAPIClientClassifyImageOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientClassifyImageOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-106">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-106">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-107">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-107">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-108">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-108">Binary image data.</span></span> <span data-ttu-id="63da8-109">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-109">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-110">Supporta le immagini fino a 4MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-110">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
          description: <span data-ttu-id="63da8-111">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="63da8-111">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-112">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-112">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-113">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-113">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-114">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-114">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-115">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-115">Binary image data.</span></span> <span data-ttu-id="63da8-116">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-116">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-117">Supporta le immagini fino a 4MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-117">Supports images up to 4MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-118">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-118">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl'
    name: 'classifyImageUrl(string, string, ImageUrl, Models.PredictionAPIClientClassifyImageUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientClassifyImageUrlOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-119">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-119">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-120">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-120">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="63da8-121">Un ImageUrl che contiene l'url dell'immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-121">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2'
    name: 'classifyImageUrl(string, string, ImageUrl, PredictionAPIClientClassifyImageUrlOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientClassifyImageUrlOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-122">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-122">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-123">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-123">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="63da8-124">Un ImageUrl che contiene l'url dell'immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-124">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
          description: <span data-ttu-id="63da8-125">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="63da8-125">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-126">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-126">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1'
    name: 'classifyImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-127">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-127">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-128">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-128">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="63da8-129">Un ImageUrl che contiene l'url dell'immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-129">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-130">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-130">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-131">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-131">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-132">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-132">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="63da8-133">Un {Iris.Web.Api.Models.ImageUrl} che contiene l''url dell''immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-133">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-134">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-134">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-135">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-135">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="63da8-136">Un {Iris.Web.Api.Models.ImageUrl} che contiene l''url dell''immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-136">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
          description: <span data-ttu-id="63da8-137">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="63da8-137">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-138">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-138">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-139">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-139">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-140">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-140">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="63da8-141">Un {Iris.Web.Api.Models.ImageUrl} che contiene l''url dell''immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-141">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-142">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-142">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-143">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-143">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-144">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-144">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-145">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-145">Binary image data.</span></span> <span data-ttu-id="63da8-146">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-146">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-147">Supporta le immagini fino a 0MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-147">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, PredictionAPIClientClassifyImageWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientClassifyImageWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-148">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-148">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-149">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-149">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-150">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-150">Binary image data.</span></span> <span data-ttu-id="63da8-151">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-151">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-152">Supporta le immagini fino a 0MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-152">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
          description: <span data-ttu-id="63da8-153">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="63da8-153">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-154">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-154">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-155">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-155">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-156">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-156">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-157">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-157">Binary image data.</span></span> <span data-ttu-id="63da8-158">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-158">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-159">Supporta le immagini fino a 0MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-159">Supports images up to 0MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-160">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-160">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage'
    name: 'detectImage(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientDetectImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientDetectImageOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-161">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-161">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-162">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-162">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-163">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-163">Binary image data.</span></span> <span data-ttu-id="63da8-164">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-164">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-165">Supporta le immagini fino a 4MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-165">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2'
    name: 'detectImage(string, string, msRest.HttpRequestBody, PredictionAPIClientDetectImageOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientDetectImageOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-166">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-166">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-167">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-167">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-168">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-168">Binary image data.</span></span> <span data-ttu-id="63da8-169">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-169">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-170">Supporta le immagini fino a 4MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-170">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
          description: <span data-ttu-id="63da8-171">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="63da8-171">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-172">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-172">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1'
    name: 'detectImage(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-173">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-173">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-174">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-174">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-175">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-175">Binary image data.</span></span> <span data-ttu-id="63da8-176">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-176">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-177">Supporta le immagini fino a 4MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-177">Supports images up to 4MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-178">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-178">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl'
    name: 'detectImageUrl(string, string, ImageUrl, Models.PredictionAPIClientDetectImageUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientDetectImageUrlOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-179">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-179">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-180">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-180">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="63da8-181">Un ImageUrl che contiene l'url dell'immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-181">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2'
    name: 'detectImageUrl(string, string, ImageUrl, PredictionAPIClientDetectImageUrlOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientDetectImageUrlOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-182">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-182">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-183">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-183">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="63da8-184">Un ImageUrl che contiene l'url dell'immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-184">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
          description: <span data-ttu-id="63da8-185">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="63da8-185">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-186">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-186">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1'
    name: 'detectImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-187">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-187">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-188">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-188">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: <span data-ttu-id="63da8-189">Un ImageUrl che contiene l'url dell'immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-189">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-190">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-190">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-191">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-191">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-192">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-192">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="63da8-193">Un {Iris.Web.Api.Models.ImageUrl} che contiene l''url dell''immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-193">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-194">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-194">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-195">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-195">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="63da8-196">Un {Iris.Web.Api.Models.ImageUrl} che contiene l''url dell''immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-196">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
          description: <span data-ttu-id="63da8-197">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="63da8-197">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-198">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-198">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-199">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-199">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-200">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-200">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="63da8-201">Un {Iris.Web.Api.Models.ImageUrl} che contiene l''url dell''immagine da valutare.</span><span class="sxs-lookup"><span data-stu-id="63da8-201">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-202">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-202">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-203">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-203">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-204">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-204">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-205">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-205">Binary image data.</span></span> <span data-ttu-id="63da8-206">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-206">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-207">Supporta le immagini fino a 0MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-207">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, PredictionAPIClientDetectImageWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientDetectImageWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-208">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-208">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-209">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-209">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-210">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-210">Binary image data.</span></span> <span data-ttu-id="63da8-211">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-211">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-212">Supporta le immagini fino a 0MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-212">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'
          description: <span data-ttu-id="63da8-213">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="63da8-213">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-214">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-214">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="63da8-215">L'id di progetto.</span><span class="sxs-lookup"><span data-stu-id="63da8-215">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="63da8-216">Specifica il nome del modello da valutare rispetto a.</span><span class="sxs-lookup"><span data-stu-id="63da8-216">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="63da8-217">Dati immagine binari.</span><span class="sxs-lookup"><span data-stu-id="63da8-217">Binary image data.</span></span> <span data-ttu-id="63da8-218">Formati supportati sono BMP, GIF, PNG e JPEG.</span><span class="sxs-lookup"><span data-stu-id="63da8-218">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="63da8-219">Supporta le immagini fino a 0MB.</span><span class="sxs-lookup"><span data-stu-id="63da8-219">Supports images up to 0MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="63da8-220">Il callback</span><span class="sxs-lookup"><span data-stu-id="63da8-220">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor'
    name: 'PredictionAPIClient(string, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="63da8-221">Inizializza una nuova istanza della classe PredictionAPIClient.</span><span class="sxs-lookup"><span data-stu-id="63da8-221">Initializes a new instance of the PredictionAPIClient class.</span></span>
    syntax:
      content: 'new PredictionAPIClient(apiKey: string, endpoint: string, options?: msRest.ServiceClientOptions)'
      parameters:
        - id: apiKey
          type:
            - string
          description: <span data-ttu-id="63da8-222">Chiave API.</span><span class="sxs-lookup"><span data-stu-id="63da8-222">API key.</span></span>
        - id: endpoint
          type:
            - string
          description: <span data-ttu-id="63da8-223">Endpoint di servizi cognitivi supportati.</span><span class="sxs-lookup"><span data-stu-id="63da8-223">Supported Cognitive Services endpoints.</span></span>
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="63da8-224">Inviare una richiesta HTTP che viene popolata usando il OperationSpec fornito.</span><span class="sxs-lookup"><span data-stu-id="63da8-224">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="63da8-225">Gli argomenti che verranno popolati con i valori basati su modelli della richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="63da8-225">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="63da8-226">OperationSpec da usare per popolare il httpRequest.</span><span class="sxs-lookup"><span data-stu-id="63da8-226">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="63da8-227">Callback da chiamare quando viene ricevuta la risposta.</span><span class="sxs-lookup"><span data-stu-id="63da8-227">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="63da8-228">Invio di richiesta HTTP specificato.</span><span class="sxs-lookup"><span data-stu-id="63da8-228">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
references:
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
    name: PredictionAPIClientContext
    spec.typeScript:
      - name: PredictionAPIClientContext
        fullName: PredictionAPIClientContext
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
    name: ImagePrediction>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImagePrediction
        fullName: ImagePrediction
        uid: '@azure/cognitiveservices-customvision-prediction.ImagePrediction'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
    name: PredictionAPIClientClassifyImageOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageOptionalParams
        fullName: PredictionAPIClientClassifyImageOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.ImageUrl'
    name: ImageUrl
    spec.typeScript:
      - name: ImageUrl
        fullName: ImageUrl
        uid: '@azure/cognitiveservices-customvision-prediction.ImageUrl'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
    name: PredictionAPIClientClassifyImageUrlOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageUrlOptionalParams
        fullName: PredictionAPIClientClassifyImageUrlOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
    name: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
        fullName: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
    name: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
        fullName: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
    name: PredictionAPIClientDetectImageOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageOptionalParams
        fullName: PredictionAPIClientDetectImageOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
    name: PredictionAPIClientDetectImageUrlOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageUrlOptionalParams
        fullName: PredictionAPIClientDetectImageUrlOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
    name: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
        fullName: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'
    name: PredictionAPIClientDetectImageWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageWithNoStoreOptionalParams
        fullName: PredictionAPIClientDetectImageWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'