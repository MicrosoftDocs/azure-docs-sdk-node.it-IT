### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson'
    name: PersonGroupPerson
    fullName: PersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: Classe che rappresenta un PersonGroupPerson.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, Models.PersonGroupPersonAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Aggiungere un volto a una persona in un gruppo di persone per l'identificazione viso o verifica. Per gestire un'immagine contiene più volti, viso input può essere specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto. Nessuna immagine verrà archiviata.
      Solo la funzionalità di volti estratti verrà archiviata nel server fino a quando [PersonGroup PersonFace - eliminare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [Elimina gruppo di persone persona -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) oppure [gruppo di persone - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) viene chiamato.
      <br /> Nota persistedFaceId è diverso da faceId generato dal [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      *   Qualità dell'immagine superiore viso significa maggiore precisione il riconoscimento. Prendere in considerazione i volti di alta qualità: volti frontali e clear dimensioni sono 200 x 200 pixel (100 pixel tra gli occhi) o più grandi.
      *   Ogni voce di persona può contenere fino a 248 facce.
      *   Sono supportati JPEG, PNG, GIF (il primo fotogramma) e formato BMP. Le dimensioni del file immagine consentito va da 1KB a 6MB.
      *   "targetFace" rettangolo deve contenere una faccia. Zero o più visi saranno considerati come un errore. Se il rettangolo specificato "targetFace" non viene restituito da [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), non c'è garanzia per rilevi e aggiunga correttamente il viso.
      *   All'esterno delle dimensioni rilevabili del volto (36 x 36 a 4096 x 4096 pixel), large occlusions head posa o grandi dimensioni provocherà errori.
      *   Aggiunta/eliminazione di volti da e verso una stessa persona verranno elaborato in sequenza. Aggiunta/eliminazione di volti a/da persone diverse vengono elaborati in parallelo.
      * La dimensione minima rilevabili del volto è 36 x 36 pixel in un'immagine non maggiore di 1920 x 1080 pixel.
      Le immagini con dimensioni superiori a 1920 x 1080 pixel necessario una dimensione minima viso proporzionalmente maggiore.
      * È possibile specificare valori diversi 'detectionModel'. Per usare e confrontare i modelli di rilevamento diverso, fare riferimento a [come specificare un modello di rilevamento](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modello | Uso consigliato-case(s) |
      | ---------- | -------- |
      | 'detection_01': | Il modello di rilevamento predefinito per [gruppo di persone persona - Aggiungi
      Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523b). Consigliati per il rilevamento di volti frontali quasi. Per gli scenari con visi (head-posa) angolo eccezionalmente grandi, le facce bloccate o orientamento dell'immagine non corretto, i visi in questi casi potrebbero non essere rilevati. | | 'detection_02': | Modello di rilevamento rilasciata in 2019 potrebbe con una maggiore precisione soprattutto sui volti di piccole dimensioni, lati e sfocati. |
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, options?: Models.PersonGroupPersonAddFaceFromStreamOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, PersonGroupPersonAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, options: PersonGroupPersonAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, string, Models.PersonGroupPersonAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Aggiungere un volto a una persona in un gruppo di persone per l'identificazione viso o verifica. Per gestire un'immagine contiene più volti, viso input può essere specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto. Nessuna immagine verrà archiviata.
      Solo la funzionalità di volti estratti verrà archiviata nel server fino a quando [PersonGroup PersonFace - eliminare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [Elimina gruppo di persone persona -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) oppure [gruppo di persone - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) viene chiamato.
      <br /> Nota persistedFaceId è diverso da faceId generato dal [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      *   Qualità dell'immagine superiore viso significa maggiore precisione il riconoscimento. Prendere in considerazione i volti di alta qualità: volti frontali e clear dimensioni sono 200 x 200 pixel (100 pixel tra gli occhi) o più grandi.
      *   Ogni voce di persona può contenere fino a 248 facce.
      *   Sono supportati JPEG, PNG, GIF (il primo fotogramma) e formato BMP. Le dimensioni del file immagine consentito va da 1KB a 6MB.
      *   "targetFace" rettangolo deve contenere una faccia. Zero o più visi saranno considerati come un errore. Se il rettangolo specificato "targetFace" non viene restituito da [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), non c'è garanzia per rilevi e aggiunga correttamente il viso.
      *   All'esterno delle dimensioni rilevabili del volto (36 x 36 a 4096 x 4096 pixel), large occlusions head posa o grandi dimensioni provocherà errori.
      *   Aggiunta/eliminazione di volti da e verso una stessa persona verranno elaborato in sequenza. Aggiunta/eliminazione di volti a/da persone diverse vengono elaborati in parallelo.
      * La dimensione minima rilevabili del volto è 36 x 36 pixel in un'immagine non maggiore di 1920 x 1080 pixel.
      Le immagini con dimensioni superiori a 1920 x 1080 pixel necessario una dimensione minima viso proporzionalmente maggiore.
      * È possibile specificare valori diversi 'detectionModel'. Per usare e confrontare i modelli di rilevamento diverso, fare riferimento a [come specificare un modello di rilevamento](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modello | Uso consigliato-case(s) |
      | ---------- | -------- |
      | 'detection_01': | Il modello di rilevamento predefinito per [gruppo di persone persona - Aggiungi
      Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523b). Consigliati per il rilevamento di volti frontali quasi. Per gli scenari con visi (head-posa) angolo eccezionalmente grandi, le facce bloccate o orientamento dell'immagine non corretto, i visi in questi casi potrebbero non essere rilevati. | | 'detection_02': | Modello di rilevamento rilasciata in 2019 potrebbe con una maggiore precisione soprattutto sui volti di piccole dimensioni, lati e sfocati. |
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options?: Models.PersonGroupPersonAddFaceFromUrlOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, string, PersonGroupPersonAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options: PersonGroupPersonAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create'
    name: 'create(string, Models.PersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creare una nuova persona in un gruppo di persone specificate.
    syntax:
      content: 'function create(personGroupId: string, options?: Models.PersonGroupPersonCreateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: options
          type:
            - Models.PersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
    name: 'create(string, PersonGroupPersonCreateOptionalParams, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, options: PersonGroupPersonCreateOptionalParams, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Eliminare una faccia da una persona in un gruppo di persone, persistedFaceId, personId e personGroupId specificato.
      <br /> Aggiunta/eliminazione di volti da e verso una stessa persona verranno elaborato in sequenza.
      Aggiunta/eliminazione di volti a/da persone diverse vengono elaborati in parallelo.
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
    name: 'deleteFace(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Eliminare una persona esistente da un gruppo di persone. Il persistedFaceId, userData, funzionalità di nome e il face persona nella voce di persona verranno tutti eliminati.'
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.'
    syntax:
      content: 'function get(personGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).'
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
    name: 'getFace(string, string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list'
    name: 'list(string, Models.PersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell''utente).'
    syntax:
      content: 'function list(personGroupId: string, options?: Models.PersonGroupPersonListOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: options
          type:
            - Models.PersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
    name: 'list(string, PersonGroupPersonListOptionalParams, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(personGroupId: string, options: PersonGroupPersonListOptionalParams, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(personGroupId: string, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            Il callback
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
    name: PersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creare un PersonGroupPerson.
    syntax:
      content: 'new PersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Riferimento al client del servizio.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update'
    name: 'update(string, string, Models.PersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Nome dell'aggiornamento o una persona userData.
    syntax:
      content: 'function update(personGroupId: string, personId: string, options?: Models.PersonGroupPersonUpdateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - Models.PersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
    name: 'update(string, string, PersonGroupPersonUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, personId: string, options: PersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
    name: 'updateFace(string, string, string, Models.PersonGroupPersonUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Aggiungere un volto a una persona in un gruppo di persone per l'identificazione viso o verifica. Per gestire un'immagine contiene più volti, viso input può essere specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto. Nessuna immagine verrà archiviata.
      Solo la funzionalità di volti estratti verrà archiviata nel server fino a quando [PersonGroup PersonFace - eliminare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [Elimina gruppo di persone persona -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) oppure [gruppo di persone - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) viene chiamato.
      <br /> Nota persistedFaceId è diverso da faceId generato dal [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Qualità dell'immagine superiore viso significa maggiore precisione il riconoscimento. Prendere in considerazione i volti di alta qualità: volti frontali e clear dimensioni sono 200 x 200 pixel (100 pixel tra gli occhi) o più grandi.
      * Ogni voce di persona può contenere fino a 248 facce.
      * Sono supportati JPEG, PNG, GIF (il primo fotogramma) e formato BMP. Le dimensioni del file immagine consentito va da 1KB a 6MB.
      * "targetFace" rettangolo deve contenere una faccia. Zero o più visi saranno considerati come un errore. Se il rettangolo specificato "targetFace" non viene restituito da [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), non c'è garanzia per rilevi e aggiunga correttamente il viso.
      * All'esterno delle dimensioni rilevabili del volto (36 x 36 a 4096 x 4096 pixel), large occlusions head posa o grandi dimensioni provocherà errori.
      * Aggiunta/eliminazione di volti da e verso una stessa persona verranno elaborato in sequenza. Aggiunta/eliminazione di volti a/da persone diverse vengono elaborati in parallelo.
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Models.PersonGroupPersonUpdateFaceOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - Models.PersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
    name: 'updateFace(string, string, string, PersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: PersonGroupPersonUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo di persone particolare.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
    name: PersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: PersonGroupPersonAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
    name: PersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: PersonGroupPersonAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
    name: PersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonCreateOptionalParams
        fullName: PersonGroupPersonCreateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
    name: PersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonListOptionalParams
        fullName: PersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
    name: PersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateOptionalParams
        fullName: PersonGroupPersonUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
    name: PersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateFaceOptionalParams
        fullName: PersonGroupPersonUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'