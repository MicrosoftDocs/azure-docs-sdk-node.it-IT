### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.Face'
    name: Face
    fullName: Face
    children:
      - '@azure/cognitiveservices-face.Face.detectWithStream_2'
      - '@azure/cognitiveservices-face.Face.detectWithStream'
      - '@azure/cognitiveservices-face.Face.detectWithStream_1'
      - '@azure/cognitiveservices-face.Face.detectWithUrl_2'
      - '@azure/cognitiveservices-face.Face.detectWithUrl'
      - '@azure/cognitiveservices-face.Face.detectWithUrl_1'
      - '@azure/cognitiveservices-face.Face.constructor'
      - '@azure/cognitiveservices-face.Face.findSimilar_2'
      - '@azure/cognitiveservices-face.Face.findSimilar'
      - '@azure/cognitiveservices-face.Face.findSimilar_1'
      - '@azure/cognitiveservices-face.Face.group'
      - '@azure/cognitiveservices-face.Face.group_2'
      - '@azure/cognitiveservices-face.Face.group_1'
      - '@azure/cognitiveservices-face.Face.identify_2'
      - '@azure/cognitiveservices-face.Face.identify'
      - '@azure/cognitiveservices-face.Face.identify_1'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace_2'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace_1'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson_2'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson_1'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="a4195-101">Classe che rappresenta un carattere tipografico.</span><span class="sxs-lookup"><span data-stu-id="a4195-101">Class representing a Face.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream_2'
    name: 'detectWithStream(msRest.HttpRequestBody, FaceDetectWithStreamOptionalParams, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, options: FaceDetectWithStreamOptionalParams, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="a4195-102">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="a4195-102">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
          description: <span data-ttu-id="a4195-103">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="a4195-103">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="a4195-104">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-104">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream'
    name: 'detectWithStream(msRest.HttpRequestBody, Models.FaceDetectWithStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="a4195-105">Rileva i visi in un''immagine e restituisce le posizioni viso e, facoltativamente con faceIds, punti di riferimento e gli attributi.</span><span class="sxs-lookup"><span data-stu-id="a4195-105">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>'
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, options?: Models.FaceDetectWithStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="a4195-106">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="a4195-106">An image stream.</span></span>
        - id: options
          type:
            - Models.FaceDetectWithStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream_1'
    name: 'detectWithStream(msRest.HttpRequestBody, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="a4195-107">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="a4195-107">An image stream.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="a4195-108">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-108">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl_2'
    name: 'detectWithUrl(string, FaceDetectWithUrlOptionalParams, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithUrl(url: string, options: FaceDetectWithUrlOptionalParams, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="a4195-109">Raggiungibile pubblicamente URL di un'immagine</span><span class="sxs-lookup"><span data-stu-id="a4195-109">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
          description: <span data-ttu-id="a4195-110">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="a4195-110">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="a4195-111">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-111">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl'
    name: 'detectWithUrl(string, Models.FaceDetectWithUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a4195-112">Rileva i visi in un'immagine, rettangoli restituito e, facoltativamente, con faceIds, punti di riferimento e gli attributi.</span><span class="sxs-lookup"><span data-stu-id="a4195-112">Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.</span></span><br />
      * <span data-ttu-id="a4195-113">Parametri facoltativi come faceId, punti di riferimento e gli attributi.</span><span class="sxs-lookup"><span data-stu-id="a4195-113">Optional parameters including faceId, landmarks, and attributes.</span></span> <span data-ttu-id="a4195-114">Gli attributi includono età, sesso, headPose, smile, facialHair, bicchieri, emozioni, sorriso, composizione, relative all'occlusione, Accessori, Sfocatura, l'esposizione e rumore.</span><span class="sxs-lookup"><span data-stu-id="a4195-114">Attributes include age, gender, headPose, smile, facialHair, glasses, emotion, hair, makeup, occlusion, accessories, blur, exposure and noise.</span></span>
      * <span data-ttu-id="a4195-115">La funzionalità di volti estratti, anziché l'immagine effettiva, verrà archiviata nel server.</span><span class="sxs-lookup"><span data-stu-id="a4195-115">The extracted face feature, instead of the actual image, will be stored on server.</span></span> <span data-ttu-id="a4195-116">Il faceId è un identificatore della funzionalità di visi e verrà usata in [affrontano: identificare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [affrontano: verificare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a)e [viso</span><span class="sxs-lookup"><span data-stu-id="a4195-116">The faceId is an identifier of the face feature and will be used in [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a), and [Face</span></span>
      - <span data-ttu-id="a4195-117">Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class="sxs-lookup"><span data-stu-id="a4195-117">Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span> <span data-ttu-id="a4195-118">Scadenza 24 ore dopo la chiamata di rilevamento.</span><span class="sxs-lookup"><span data-stu-id="a4195-118">It will expire 24 hours after the detection call.</span></span>
      * <span data-ttu-id="a4195-119">Qualità dell'immagine superiore viso significa rilevamento migliorato e una precisione di riconoscimento.</span><span class="sxs-lookup"><span data-stu-id="a4195-119">Higher face image quality means better detection and recognition precision.</span></span> <span data-ttu-id="a4195-120">Prendere in considerazione i volti di alta qualità: volti frontali e clear dimensioni sono 200 x 200 pixel (100 pixel tra gli occhi) o più grandi.</span><span class="sxs-lookup"><span data-stu-id="a4195-120">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="a4195-121">Sono supportati JPEG, PNG, GIF (il primo fotogramma) e formato BMP.</span><span class="sxs-lookup"><span data-stu-id="a4195-121">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="a4195-122">Le dimensioni del file immagine consentito va da 1KB a 6MB.</span><span class="sxs-lookup"><span data-stu-id="a4195-122">The allowed image file size is from 1KB to 6MB.</span></span>
      * <span data-ttu-id="a4195-123">I volti sono rilevabili quando la dimensione pari a 36 x 36 per 4096x4096 pixel.</span><span class="sxs-lookup"><span data-stu-id="a4195-123">Faces are detectable when its size is 36x36 to 4096x4096 pixels.</span></span> <span data-ttu-id="a4195-124">Se è necessario rilevare i visi molto piccoli, ma non crittografati, provare a ingrandire l'immagine di input.</span><span class="sxs-lookup"><span data-stu-id="a4195-124">If need to detect very small but clear faces, please try to enlarge the input image.</span></span>
      * <span data-ttu-id="a4195-125">Fino a 64 volti possono essere restituiti per un'immagine.</span><span class="sxs-lookup"><span data-stu-id="a4195-125">Up to 64 faces can be returned for an image.</span></span> <span data-ttu-id="a4195-126">I volti vengono classificati in base a dimensioni del riquadro viso dalla grande al più piccolo.</span><span class="sxs-lookup"><span data-stu-id="a4195-126">Faces are ranked by face rectangle size from large to small.</span></span>
      * <span data-ttu-id="a4195-127">Rilevamento volti preferisce volti frontali e quasi frontali.</span><span class="sxs-lookup"><span data-stu-id="a4195-127">Face detector prefer frontal and near-frontal faces.</span></span> <span data-ttu-id="a4195-128">Esistono casi in cui i visi non possono essere angoli del volto rilevati, ad esempio eccezionalmente grandi (head-posa) o in corso bloccati o orientamento dell'immagine non corretto.</span><span class="sxs-lookup"><span data-stu-id="a4195-128">There are cases that faces may not be detected, e.g. exceptionally large face angles (head-pose) or being occluded, or wrong image orientation.</span></span>
      * <span data-ttu-id="a4195-129">Attributi (età, sesso, headPose, smile, facialHair, bicchieri, emozioni, selettore di precisione, struttura, relative all'occlusione, Accessori, Sfocatura, l'esposizione e rumore) potrebbero non essere perfettamente accurati.</span><span class="sxs-lookup"><span data-stu-id="a4195-129">Attributes (age, gender, headPose, smile, facialHair, glasses, emotion, hair, makeup, occlusion, accessories, blur, exposure and noise) may not be perfectly accurate.</span></span> <span data-ttu-id="a4195-130">Valore di passi del HeadPose è un campo riservato e restituirà sempre 0.</span><span class="sxs-lookup"><span data-stu-id="a4195-130">HeadPose's pitch value is a reserved field and will always return 0.</span></span>
      * <span data-ttu-id="a4195-131">Vengono forniti diversi 'recognitionModel' valori.</span><span class="sxs-lookup"><span data-stu-id="a4195-131">Different 'recognitionModel' values are provided.</span></span> <span data-ttu-id="a4195-132">Se le operazioni di follow-up, Verify, identificare, trovare simili sono necessari, specificare il modello di riconoscimento con il parametro 'recognitionModel'.</span><span class="sxs-lookup"><span data-stu-id="a4195-132">If follow-up operations like Verify, Identify, Find Similar are needed, please specify the recognition model with 'recognitionModel' parameter.</span></span> <span data-ttu-id="a4195-133">Il valore predefinito per 'recognitionModel' è 'recognition_01', se più recente modello necessarie, specificare in modo esplicito il modello che è necessario in questo parametro.</span><span class="sxs-lookup"><span data-stu-id="a4195-133">The default value for 'recognitionModel' is 'recognition_01', if latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id="a4195-134">Una volta specificate, il faceIds rilevato sarà associata al modello di riconoscimento specificato.</span><span class="sxs-lookup"><span data-stu-id="a4195-134">Once specified, the detected faceIds will be associated with the specified recognition model.</span></span> <span data-ttu-id="a4195-135">Altri dettagli, consultare [come specificare un modello di riconoscimento](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)</span><span class="sxs-lookup"><span data-stu-id="a4195-135">More details, please refer to [How to specify a recognition model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)</span></span>
    syntax:
      content: 'function detectWithUrl(url: string, options?: Models.FaceDetectWithUrlOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="a4195-136">Raggiungibile pubblicamente URL di un'immagine</span><span class="sxs-lookup"><span data-stu-id="a4195-136">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.FaceDetectWithUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl_1'
    name: 'detectWithUrl(string, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithUrl(url: string, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="a4195-137">Raggiungibile pubblicamente URL di un'immagine</span><span class="sxs-lookup"><span data-stu-id="a4195-137">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="a4195-138">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-138">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.constructor'
    name: Face(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="a4195-139">Creare un viso.</span><span class="sxs-lookup"><span data-stu-id="a4195-139">Create a Face.</span></span>
    syntax:
      content: 'new Face(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="a4195-140">Riferimento al client del servizio.</span><span class="sxs-lookup"><span data-stu-id="a4195-140">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar_2'
    name: 'findSimilar(string, FaceFindSimilarOptionalParams, ServiceCallback<SimilarFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findSimilar(faceId: string, options: FaceFindSimilarOptionalParams, callback: ServiceCallback<SimilarFace[]>)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="a4195-141">FaceId della faccia di query.</span><span class="sxs-lookup"><span data-stu-id="a4195-141">FaceId of the query face.</span></span> <span data-ttu-id="a4195-142">Utente deve chiamare viso: rilevare prima per ottenere un faceId valido.</span><span class="sxs-lookup"><span data-stu-id="a4195-142">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="a4195-143">Si noti che questo faceId non è persistente e scadrà tra 24 ore dopo la chiamata di rilevamento</span><span class="sxs-lookup"><span data-stu-id="a4195-143">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
          description: <span data-ttu-id="a4195-144">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="a4195-144">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
          description: |
            <span data-ttu-id="a4195-145">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-145">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar'
    name: 'findSimilar(string, Models.FaceFindSimilarOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a4195-146">Dato faceId del viso, per la ricerca di visi somiglianti da una matrice di faceId, un elenco di visi o un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="a4195-146">Given query face's faceId, to search the similar-looking faces from a faceId array, a face list or a large face list.</span></span> <span data-ttu-id="a4195-147">faceId matrice contiene i volti creati [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), che scadrà tra 24 ore dopo la creazione.</span><span class="sxs-lookup"><span data-stu-id="a4195-147">faceId array contains the faces created by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), which will expire 24 hours after creation.</span></span> <span data-ttu-id="a4195-148">Un "faceListId" creato da [FaceList - creare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b) contenente persistedFaceIds che non scada mai.</span><span class="sxs-lookup"><span data-stu-id="a4195-148">A "faceListId" is created by [FaceList - Create](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b) containing persistedFaceIds that will not expire.</span></span> <span data-ttu-id="a4195-149">E viene creato un "largeFaceListId" dallo [LargeFaceList - creare](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) contenente persistedFaceIds che inoltre non scadranno.</span><span class="sxs-lookup"><span data-stu-id="a4195-149">And a "largeFaceListId" is created by [LargeFaceList - Create](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) containing persistedFaceIds that will also not expire.</span></span> <span data-ttu-id="a4195-150">In base all'input nell'elenco di visi simili restituito contiene faceIds o persistedFaceIds classificati in base alla similitudine.</span><span class="sxs-lookup"><span data-stu-id="a4195-150">Depending on the input the returned similar faces list contains faceIds or persistedFaceIds ranked by similarity.</span></span>
      <br/><span data-ttu-id="a4195-151">Argomenti correlati ha due modalità di utilizzo "matchPerson" e "matchFace".</span><span class="sxs-lookup"><span data-stu-id="a4195-151">Find similar has two working modes, "matchPerson" and "matchFace".</span></span> <span data-ttu-id="a4195-152">"matchPerson" è la modalità predefinita che tenta di trovare le facce della stessa persona come possibili con soglie interne stessa persona.</span><span class="sxs-lookup"><span data-stu-id="a4195-152">"matchPerson" is the default mode that it tries to find faces of the same person as possible by using internal same-person thresholds.</span></span> <span data-ttu-id="a4195-153">È utile trovare un noto altri foto dell'utente.</span><span class="sxs-lookup"><span data-stu-id="a4195-153">It is useful to find a known person's other photos.</span></span> <span data-ttu-id="a4195-154">Si noti che verrà restituito un elenco vuoto se nessun visi supera le soglie interne.</span><span class="sxs-lookup"><span data-stu-id="a4195-154">Note that an empty list will be returned if no faces pass the internal thresholds.</span></span> <span data-ttu-id="a4195-155">la modalità "matchFace" Ignora le soglie stessa persona e restituisce classificati comunque visi simili, anche la somiglianza è bassa.</span><span class="sxs-lookup"><span data-stu-id="a4195-155">"matchFace" mode ignores same-person thresholds and returns ranked similar faces anyway, even the similarity is low.</span></span> <span data-ttu-id="a4195-156">Può essere utilizzato nei casi come la ricerca di visi dall'aspetto relativo alle celebrità.</span><span class="sxs-lookup"><span data-stu-id="a4195-156">It can be used in the cases like searching celebrity-looking faces.</span></span>
      <br/><span data-ttu-id="a4195-157">'RecognitionModel' associato faceId del viso query deve essere lo stesso come il recognitionModel usata dalla matrice di destinazione faceId, viso elenco o nell'elenco viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="a4195-157">The 'recognitionModel' associated with the query face's faceId should be the same as the 'recognitionModel' used by the target faceId array, face list or large face list.</span></span>
    syntax:
      content: 'function findSimilar(faceId: string, options?: Models.FaceFindSimilarOptionalParams)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="a4195-158">FaceId della faccia di query.</span><span class="sxs-lookup"><span data-stu-id="a4195-158">FaceId of the query face.</span></span> <span data-ttu-id="a4195-159">Utente deve chiamare viso: rilevare prima per ottenere un faceId valido.</span><span class="sxs-lookup"><span data-stu-id="a4195-159">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="a4195-160">Si noti che questo faceId non è persistente e scadrà tra 24 ore dopo la chiamata di rilevamento</span><span class="sxs-lookup"><span data-stu-id="a4195-160">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>'
        - id: options
          type:
            - Models.FaceFindSimilarOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar_1'
    name: 'findSimilar(string, ServiceCallback<SimilarFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findSimilar(faceId: string, callback: ServiceCallback<SimilarFace[]>)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="a4195-161">FaceId della faccia di query.</span><span class="sxs-lookup"><span data-stu-id="a4195-161">FaceId of the query face.</span></span> <span data-ttu-id="a4195-162">Utente deve chiamare viso: rilevare prima per ottenere un faceId valido.</span><span class="sxs-lookup"><span data-stu-id="a4195-162">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="a4195-163">Si noti che questo faceId non è persistente e scadrà tra 24 ore dopo la chiamata di rilevamento</span><span class="sxs-lookup"><span data-stu-id="a4195-163">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
          description: |
            <span data-ttu-id="a4195-164">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-164">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group'
    name: 'group(string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a4195-165">Dividere candidato visi in gruppi basati sulla somiglianza viso.</span><span class="sxs-lookup"><span data-stu-id="a4195-165">Divide candidate faces into groups based on face similarity.</span></span><br />
      * <span data-ttu-id="a4195-166">L'output è un messyGroup e uno o più gruppi di volti indipendente.</span><span class="sxs-lookup"><span data-stu-id="a4195-166">The output is one or more disjointed face groups and a messyGroup.</span></span> <span data-ttu-id="a4195-167">Un gruppo di volti contiene i volti con simile alla ricerca, spesso della stessa persona.</span><span class="sxs-lookup"><span data-stu-id="a4195-167">A face group contains faces that have similar looking, often of the same person.</span></span> <span data-ttu-id="a4195-168">Dalla dimensione di gruppo, cioè il numero di volti vengono classificati in gruppi.</span><span class="sxs-lookup"><span data-stu-id="a4195-168">Face groups are ranked by group size, i.e. number of faces.</span></span> <span data-ttu-id="a4195-169">Si noti che le facce che appartengono a una stessa persona potrebbero essere suddiviso in diversi gruppi nel risultato.</span><span class="sxs-lookup"><span data-stu-id="a4195-169">Notice that faces belonging to a same person might be split into several groups in the result.</span></span>
      * <span data-ttu-id="a4195-170">MessyGroup è un gruppo di volti speciale che contiene i volti che non sono stato trovato alcun faccia controparte simili da visi originali.</span><span class="sxs-lookup"><span data-stu-id="a4195-170">MessyGroup is a special face group containing faces that cannot find any similar counterpart face from original faces.</span></span> <span data-ttu-id="a4195-171">Il messyGroup non verrà visualizzato nel risultato se tutti i volti trovati le relative controparti.</span><span class="sxs-lookup"><span data-stu-id="a4195-171">The messyGroup will not appear in the result if all faces found their counterparts.</span></span>
      * <span data-ttu-id="a4195-172">API dei gruppi deve avere almeno 2 candidato visi e 1000 al massimo.</span><span class="sxs-lookup"><span data-stu-id="a4195-172">Group API needs at least 2 candidate faces and 1000 at most.</span></span> <span data-ttu-id="a4195-173">È consigliabile per provare [affrontano: verificare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a) quando si dispone solamente i visi candidate 2.</span><span class="sxs-lookup"><span data-stu-id="a4195-173">We suggest to try [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a) when you only have 2 candidate faces.</span></span>
      * <span data-ttu-id="a4195-174">'RecognitionModel' associato faceIds delle facce query deve essere uguale.</span><span class="sxs-lookup"><span data-stu-id="a4195-174">The 'recognitionModel' associated with the query faces' faceIds should be the same.</span></span>
    syntax:
      content: 'function group(faceIds: string[], options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="a4195-175">Matrice di faceId candidato creato da viso: rilevare.</span><span class="sxs-lookup"><span data-stu-id="a4195-175">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id="a4195-176">Il valore massimo è 1000 visi</span><span class="sxs-lookup"><span data-stu-id="a4195-176">The maximum is 1000 faces</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group_2'
    name: 'group(string[], RequestOptionsBase, ServiceCallback<GroupResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function group(faceIds: string[], options: RequestOptionsBase, callback: ServiceCallback<GroupResult>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="a4195-177">Matrice di faceId candidato creato da viso: rilevare.</span><span class="sxs-lookup"><span data-stu-id="a4195-177">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id="a4195-178">Il valore massimo è 1000 visi</span><span class="sxs-lookup"><span data-stu-id="a4195-178">The maximum is 1000 faces</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="a4195-179">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="a4195-179">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.GroupResult>
          description: |
            <span data-ttu-id="a4195-180">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-180">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group_1'
    name: 'group(string[], ServiceCallback<GroupResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function group(faceIds: string[], callback: ServiceCallback<GroupResult>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="a4195-181">Matrice di faceId candidato creato da viso: rilevare.</span><span class="sxs-lookup"><span data-stu-id="a4195-181">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id="a4195-182">Il valore massimo è 1000 visi</span><span class="sxs-lookup"><span data-stu-id="a4195-182">The maximum is 1000 faces</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.GroupResult>
          description: |
            <span data-ttu-id="a4195-183">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-183">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify_2'
    name: 'identify(string[], FaceIdentifyOptionalParams, ServiceCallback<IdentifyResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function identify(faceIds: string[], options: FaceIdentifyOptionalParams, callback: ServiceCallback<IdentifyResult[]>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="a4195-184">Matrice di query deve affrontare faceIds, creato per il viso: rilevare.</span><span class="sxs-lookup"><span data-stu-id="a4195-184">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="a4195-185">Ognuna delle facce sono identificati in modo indipendente.</span><span class="sxs-lookup"><span data-stu-id="a4195-185">Each of the faces are identified independently.</span></span> <span data-ttu-id="a4195-186">Il numero di faceIds valido è compreso tra [1, 10].</span><span class="sxs-lookup"><span data-stu-id="a4195-186">The valid number of faceIds is between [1, 10].</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
          description: <span data-ttu-id="a4195-187">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="a4195-187">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
          description: |
            <span data-ttu-id="a4195-188">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-188">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify'
    name: 'identify(string[], Models.FaceIdentifyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a4195-189">identificazione di 1-a-molti per trovare le corrispondenze più vicine della faccia di persona di query specifico da un gruppo di persone o gruppo di persone di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="a4195-189">1-to-many identification to find the closest matches of the specific query person face from a person group or large person group.</span></span>
      <br/> <span data-ttu-id="a4195-190">Per ogni viso nella matrice faceIds, identificazione viso calcolerà analogie tra il viso e tutti i volti nel gruppo di persona (specificato da personGroupId) o persona di grandi dimensioni di gruppo (specificato da largePersonGroupId) e restituire persone candidate per il viso classificata per confidenza somiglianza.</span><span class="sxs-lookup"><span data-stu-id="a4195-190">For each face in the faceIds array, Face Identify will compute similarities between the query face and all the faces in the person group (given by personGroupId) or large person group (given by largePersonGroupId), and return candidate person(s) for that face ranked by similarity confidence.</span></span> <span data-ttu-id="a4195-191">Il gruppo di persone o grandi dimensioni gruppo persona deve essere addestrato per renderlo pronto per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="a4195-191">The person group/large person group should be trained to make it ready for identification.</span></span> <span data-ttu-id="a4195-192">Altre informazioni, vedere [gruppo di persone - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) e [LargePersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4).</span><span class="sxs-lookup"><span data-stu-id="a4195-192">See more in [PersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) and [LargePersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4).</span></span>
      <br/>
      <span data-ttu-id="a4195-193">Osservazioni:</span><span class="sxs-lookup"><span data-stu-id="a4195-193">Remarks:</span></span><br />
      * <span data-ttu-id="a4195-194">L'algoritmo consente più di un viso per essere identificata in modo indipendente nella stessa richiesta, ma non più di 10 facce.</span><span class="sxs-lookup"><span data-stu-id="a4195-194">The algorithm allows more than one face to be identified independently at the same request, but no more than 10 faces.</span></span>
      * <span data-ttu-id="a4195-195">Ogni persona del gruppo di persona o grandi dimensioni gruppo persona potrebbe avere più di un viso, ma non più di 248 facce.</span><span class="sxs-lookup"><span data-stu-id="a4195-195">Each person in the person group/large person group could have more than one face, but no more than 248 faces.</span></span>
      * <span data-ttu-id="a4195-196">Qualità dell'immagine superiore viso significa maggiore precisione di identificazione.</span><span class="sxs-lookup"><span data-stu-id="a4195-196">Higher face image quality means better identification precision.</span></span> <span data-ttu-id="a4195-197">Prendere in considerazione i volti di alta qualità: volti frontali e clear dimensioni sono 200 x 200 pixel (100 pixel tra gli occhi) o più grandi.</span><span class="sxs-lookup"><span data-stu-id="a4195-197">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="a4195-198">Numero di candidati restituiti è limitata maxNumOfCandidatesReturned e confidenceThreshold.</span><span class="sxs-lookup"><span data-stu-id="a4195-198">Number of candidates returned is restricted by maxNumOfCandidatesReturned and confidenceThreshold.</span></span> <span data-ttu-id="a4195-199">Se nessuna persona viene identificata, i candidati restituiti sarà una matrice vuota.</span><span class="sxs-lookup"><span data-stu-id="a4195-199">If no person is identified, the returned candidates will be an empty array.</span></span>
      * <span data-ttu-id="a4195-200">Provare [volto - ricerca simile](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) quando è necessario trovare visi simili da un elenco di visi elenco/grande viso anziché un gruppo di persone o grandi dimensioni gruppo persona.</span><span class="sxs-lookup"><span data-stu-id="a4195-200">Try [Face - Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) when you need to find similar faces from a face list/large face list instead of a person group/large person group.</span></span>
      * <span data-ttu-id="a4195-201">'RecognitionModel' associato faceIds delle facce query deve essere identico 'recognitionModel' utilizzato dal gruppo di destinazione persona o gruppo di persone di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="a4195-201">The 'recognitionModel' associated with the query faces' faceIds should be the same as the 'recognitionModel' used by the target person group or large person group.</span></span>
    syntax:
      content: 'function identify(faceIds: string[], options?: Models.FaceIdentifyOptionalParams)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="a4195-202">Matrice di query deve affrontare faceIds, creato per il viso: rilevare.</span><span class="sxs-lookup"><span data-stu-id="a4195-202">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="a4195-203">Ognuna delle facce sono identificati in modo indipendente.</span><span class="sxs-lookup"><span data-stu-id="a4195-203">Each of the faces are identified independently.</span></span> <span data-ttu-id="a4195-204">Il numero di faceIds valido è compreso tra [1, 10].</span><span class="sxs-lookup"><span data-stu-id="a4195-204">The valid number of faceIds is between [1, 10].</span></span>'
        - id: options
          type:
            - Models.FaceIdentifyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify_1'
    name: 'identify(string[], ServiceCallback<IdentifyResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function identify(faceIds: string[], callback: ServiceCallback<IdentifyResult[]>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="a4195-205">Matrice di query deve affrontare faceIds, creato per il viso: rilevare.</span><span class="sxs-lookup"><span data-stu-id="a4195-205">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="a4195-206">Ognuna delle facce sono identificati in modo indipendente.</span><span class="sxs-lookup"><span data-stu-id="a4195-206">Each of the faces are identified independently.</span></span> <span data-ttu-id="a4195-207">Il numero di faceIds valido è compreso tra [1, 10].</span><span class="sxs-lookup"><span data-stu-id="a4195-207">The valid number of faceIds is between [1, 10].</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
          description: |
            <span data-ttu-id="a4195-208">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-208">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace'
    name: 'verifyFaceToFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a4195-209">Verificare che due visi appartengano a un utente stesso o se un volto appartiene a una persona.</span><span class="sxs-lookup"><span data-stu-id="a4195-209">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
      <br/>
      <span data-ttu-id="a4195-210">Osservazioni:</span><span class="sxs-lookup"><span data-stu-id="a4195-210">Remarks:</span></span><br />
      * <span data-ttu-id="a4195-211">Qualità dell'immagine superiore viso significa maggiore precisione di identificazione.</span><span class="sxs-lookup"><span data-stu-id="a4195-211">Higher face image quality means better identification precision.</span></span> <span data-ttu-id="a4195-212">Prendere in considerazione i volti di alta qualità: volti frontali e clear dimensioni sono 200 x 200 pixel (100 pixel tra gli occhi) o più grandi.</span><span class="sxs-lookup"><span data-stu-id="a4195-212">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="a4195-213">Per gli scenari che sono sensibili accuratezza verificare il proprio giudizio.</span><span class="sxs-lookup"><span data-stu-id="a4195-213">For the scenarios that are sensitive to accuracy please make your own judgment.</span></span>
      * <span data-ttu-id="a4195-214">'RecognitionModel' associato faceIds delle facce query deve essere lo stesso come il recognitionModel utilizzato per la destinazione faccia, gruppo di persone o il gruppo di persone di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="a4195-214">The 'recognitionModel' associated with the query faces' faceIds should be the same as the 'recognitionModel' used by the target face, person group or large person group.</span></span>
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceId1
          type:
            - string
          description: '<span data-ttu-id="a4195-215">faceId del volto prima, proviene da viso: rilevare</span><span class="sxs-lookup"><span data-stu-id="a4195-215">FaceId of the first face, comes from Face - Detect</span></span>'
        - id: faceId2
          type:
            - string
          description: '<span data-ttu-id="a4195-216">faceId della faccia di secondo, proviene da viso: rilevare</span><span class="sxs-lookup"><span data-stu-id="a4195-216">FaceId of the second face, comes from Face - Detect</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace_2'
    name: 'verifyFaceToFace(string, string, RequestOptionsBase, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, options: RequestOptionsBase, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId1
          type:
            - string
          description: '<span data-ttu-id="a4195-217">faceId del volto prima, proviene da viso: rilevare</span><span class="sxs-lookup"><span data-stu-id="a4195-217">FaceId of the first face, comes from Face - Detect</span></span>'
        - id: faceId2
          type:
            - string
          description: '<span data-ttu-id="a4195-218">faceId della faccia di secondo, proviene da viso: rilevare</span><span class="sxs-lookup"><span data-stu-id="a4195-218">FaceId of the second face, comes from Face - Detect</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="a4195-219">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="a4195-219">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="a4195-220">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-220">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace_1'
    name: 'verifyFaceToFace(string, string, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId1
          type:
            - string
          description: '<span data-ttu-id="a4195-221">faceId del volto prima, proviene da viso: rilevare</span><span class="sxs-lookup"><span data-stu-id="a4195-221">FaceId of the first face, comes from Face - Detect</span></span>'
        - id: faceId2
          type:
            - string
          description: '<span data-ttu-id="a4195-222">faceId della faccia di secondo, proviene da viso: rilevare</span><span class="sxs-lookup"><span data-stu-id="a4195-222">FaceId of the second face, comes from Face - Detect</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="a4195-223">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-223">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson_2'
    name: 'verifyFaceToPerson(string, string, FaceVerifyFaceToPersonOptionalParams, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, options: FaceVerifyFaceToPersonOptionalParams, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="a4195-224">FaceId del volto, proviene da viso: rilevare</span><span class="sxs-lookup"><span data-stu-id="a4195-224">FaceId of the face, comes from Face - Detect</span></span>'
        - id: personId
          type:
            - string
          description: '<span data-ttu-id="a4195-225">Specificare una determinata persona in un gruppo di persone o un gruppo di persone di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="a4195-225">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="a4195-226">personId viene creata nel gruppo di persone persona: creare o creare di persona LargePersonGroup.</span><span class="sxs-lookup"><span data-stu-id="a4195-226">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'
          description: <span data-ttu-id="a4195-227">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="a4195-227">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="a4195-228">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-228">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson'
    name: 'verifyFaceToPerson(string, string, Models.FaceVerifyFaceToPersonOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="a4195-229">Verificare se due visi appartengono a una stessa persona.</span><span class="sxs-lookup"><span data-stu-id="a4195-229">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="a4195-230">Confronta un viso Id con un Id persona</span><span class="sxs-lookup"><span data-stu-id="a4195-230">Compares a face Id with a Person Id</span></span>
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, options?: Models.FaceVerifyFaceToPersonOptionalParams)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="a4195-231">FaceId del volto, proviene da viso: rilevare</span><span class="sxs-lookup"><span data-stu-id="a4195-231">FaceId of the face, comes from Face - Detect</span></span>'
        - id: personId
          type:
            - string
          description: '<span data-ttu-id="a4195-232">Specificare una determinata persona in un gruppo di persone o un gruppo di persone di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="a4195-232">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="a4195-233">personId viene creata nel gruppo di persone persona: creare o creare di persona LargePersonGroup.</span><span class="sxs-lookup"><span data-stu-id="a4195-233">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>'
        - id: options
          type:
            - Models.FaceVerifyFaceToPersonOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson_1'
    name: 'verifyFaceToPerson(string, string, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="a4195-234">FaceId del volto, proviene da viso: rilevare</span><span class="sxs-lookup"><span data-stu-id="a4195-234">FaceId of the face, comes from Face - Detect</span></span>'
        - id: personId
          type:
            - string
          description: '<span data-ttu-id="a4195-235">Specificare una determinata persona in un gruppo di persone o un gruppo di persone di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="a4195-235">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="a4195-236">personId viene creata nel gruppo di persone persona: creare o creare di persona LargePersonGroup.</span><span class="sxs-lookup"><span data-stu-id="a4195-236">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="a4195-237">Il callback</span><span class="sxs-lookup"><span data-stu-id="a4195-237">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
    name: 'DetectedFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectedFace
        fullName: DetectedFace
        uid: '@azure/cognitiveservices-face.DetectedFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
    name: FaceDetectWithStreamOptionalParams
    spec.typeScript:
      - name: FaceDetectWithStreamOptionalParams
        fullName: FaceDetectWithStreamOptionalParams
        uid: '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
    name: FaceDetectWithUrlOptionalParams
    spec.typeScript:
      - name: FaceDetectWithUrlOptionalParams
        fullName: FaceDetectWithUrlOptionalParams
        uid: '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
    name: 'SimilarFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SimilarFace
        fullName: SimilarFace
        uid: '@azure/cognitiveservices-face.SimilarFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
    name: FaceFindSimilarOptionalParams
    spec.typeScript:
      - name: FaceFindSimilarOptionalParams
        fullName: FaceFindSimilarOptionalParams
        uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.GroupResult>
    name: GroupResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GroupResult
        fullName: GroupResult
        uid: '@azure/cognitiveservices-face.GroupResult'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
    name: 'IdentifyResult[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IdentifyResult
        fullName: IdentifyResult
        uid: '@azure/cognitiveservices-face.IdentifyResult'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
    name: FaceIdentifyOptionalParams
    spec.typeScript:
      - name: FaceIdentifyOptionalParams
        fullName: FaceIdentifyOptionalParams
        uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
    name: VerifyResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VerifyResult
        fullName: VerifyResult
        uid: '@azure/cognitiveservices-face.VerifyResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'
    name: FaceVerifyFaceToPersonOptionalParams
    spec.typeScript:
      - name: FaceVerifyFaceToPersonOptionalParams
        fullName: FaceVerifyFaceToPersonOptionalParams
        uid: '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'