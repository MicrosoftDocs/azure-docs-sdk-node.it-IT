### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson'
    name: LargePersonGroupPerson
    fullName: LargePersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: Classe che rappresenta un LargePersonGroupPerson.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, LargePersonGroupPersonAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, options: LargePersonGroupPersonAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Aggiungere un volto a una persona in un gruppo di persone di grandi dimensioni per l'identificazione viso o verifica. Per gestire un'immagine contiene più volti, viso input può essere specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto. Nessuna immagine verrà archiviata. Solo la funzionalità di volti estratti verrà archiviata nel server fino a quando [LargePersonGroup PersonFace - eliminare](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3), [persona LargePersonGroup - eliminare](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) o [LargePersonGroup - eliminazione](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f)viene chiamato.
      <br /> Nota persistedFaceId è diverso da faceId generato dal [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Qualità dell'immagine superiore viso significa maggiore precisione il riconoscimento. Prendere in considerazione i volti di alta qualità: volti frontali e clear dimensioni sono 200 x 200 pixel (100 pixel tra gli occhi) o più grandi.
      * Ogni voce di persona può contenere fino a 248 facce.
      * Sono supportati JPEG, PNG, GIF (il primo fotogramma) e formato BMP. Le dimensioni del file immagine consentito va da 1KB a 6MB.
      * "targetFace" rettangolo deve contenere una faccia. Zero o più visi saranno considerati come un errore. Se il rettangolo specificato "targetFace" non viene restituito da [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), non c'è garanzia per rilevi e aggiunga correttamente il viso.
      * All'esterno delle dimensioni rilevabili del volto (36 x 36 a 4096 x 4096 pixel), large occlusions head posa o grandi dimensioni provocherà errori.
      * Aggiunta/eliminazione di volti da e verso una stessa persona verranno elaborato in sequenza. Aggiunta/eliminazione di volti a/da persone diverse vengono elaborati in parallelo.
      * La dimensione minima rilevabili del volto è 36 x 36 pixel in un'immagine non maggiore di 1920 x 1080 pixel.
      Le immagini con dimensioni superiori a 1920 x 1080 pixel necessario una dimensione minima viso proporzionalmente maggiore.
      * È possibile specificare valori diversi 'detectionModel'. Per usare e confrontare i modelli di rilevamento diverso, fare riferimento a [come specificare un modello di rilevamento](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modello | Uso consigliato-case(s) |
      | ---------- | -------- |
      | 'detection_01': | Il modello di rilevamento predefinito per [persona LargePersonGroup - Aggiungi
      Face](/docs/services/563879b61984550e40cbbe8d/operations/599adf2a3a7b9412a4d53f42). Consigliati per il rilevamento di volti frontali quasi. Per gli scenari con visi (head-posa) angolo eccezionalmente grandi, le facce bloccate o orientamento dell'immagine non corretto, i visi in questi casi potrebbero non essere rilevati. | | 'detection_02': | Modello di rilevamento rilasciata in 2019 potrebbe con una maggiore precisione soprattutto sui volti di piccole dimensioni, lati e sfocati. |
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, options?: Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: options
          type:
            - Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flusso dell'immagine.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, string, LargePersonGroupPersonAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options: LargePersonGroupPersonAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, string, Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Aggiungere un volto a una persona in un gruppo di persone di grandi dimensioni per l'identificazione viso o verifica. Per gestire un'immagine contiene più volti, viso input può essere specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto. Nessuna immagine verrà archiviata. Solo la funzionalità di volti estratti verrà archiviata nel server fino a quando [LargePersonGroup PersonFace - eliminare](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3), [persona LargePersonGroup - eliminare](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) o [LargePersonGroup - eliminazione](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f)viene chiamato.
      <br /> Nota persistedFaceId è diverso da faceId generato dal [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Qualità dell'immagine superiore viso significa maggiore precisione il riconoscimento. Prendere in considerazione i volti di alta qualità: volti frontali e clear dimensioni sono 200 x 200 pixel (100 pixel tra gli occhi) o più grandi.
      * Ogni voce di persona può contenere fino a 248 facce.
      * Sono supportati JPEG, PNG, GIF (il primo fotogramma) e formato BMP. Le dimensioni del file immagine consentito va da 1KB a 6MB.
      * "targetFace" rettangolo deve contenere una faccia. Zero o più visi saranno considerati come un errore. Se il rettangolo specificato "targetFace" non viene restituito da [affrontano: rilevare](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), non c'è garanzia per rilevi e aggiunga correttamente il viso.
      * All'esterno delle dimensioni rilevabili del volto (36 x 36 a 4096 x 4096 pixel), large occlusions head posa o grandi dimensioni provocherà errori.
      * Aggiunta/eliminazione di volti da e verso una stessa persona verranno elaborato in sequenza. Aggiunta/eliminazione di volti a/da persone diverse vengono elaborati in parallelo.
      * La dimensione minima rilevabili del volto è 36 x 36 pixel in un'immagine non maggiore di 1920 x 1080 pixel.
      Le immagini con dimensioni superiori a 1920 x 1080 pixel necessario una dimensione minima viso proporzionalmente maggiore.
      * È possibile specificare valori diversi 'detectionModel'. Per usare e confrontare i modelli di rilevamento diverso, fare riferimento a [come specificare un modello di rilevamento](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modello | Uso consigliato-case(s) |
      | ---------- | -------- |
      | 'detection_01': | Il modello di rilevamento predefinito per [persona LargePersonGroup - Aggiungi
      Face](/docs/services/563879b61984550e40cbbe8d/operations/599adf2a3a7b9412a4d53f42). Consigliati per il rilevamento di volti frontali quasi. Per gli scenari con visi (head-posa) angolo eccezionalmente grandi, le facce bloccate o orientamento dell'immagine non corretto, i visi in questi casi potrebbero non essere rilevati. | | 'detection_02': | Modello di rilevamento rilasciata in 2019 potrebbe con una maggiore precisione soprattutto sui volti di piccole dimensioni, lati e sfocati. |
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options?: Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine
        - id: options
          type:
            - Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: url
          type:
            - string
          description: Raggiungibile pubblicamente URL di un'immagine
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
    name: 'create(string, LargePersonGroupPersonCreateOptionalParams, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largePersonGroupId: string, options: LargePersonGroupPersonCreateOptionalParams, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
    name: 'create(string, Models.LargePersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creare una nuova persona in un gruppo di persone di grandi dimensioni specificato.
    syntax:
      content: 'function create(largePersonGroupId: string, options?: Models.LargePersonGroupPersonCreateOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: options
          type:
            - Models.LargePersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largePersonGroupId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Eliminare una faccia da una persona in un gruppo di persone di grandi dimensioni, persistedFaceId, personId e largePersonGroupId specificato.
      <br /> Aggiunta/eliminazione di volti da e verso una stessa persona verranno elaborato in sequenza.
      Aggiunta/eliminazione di volti a/da persone diverse vengono elaborati in parallelo.
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
    name: 'deleteFace(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Eliminare una persona esistente da un gruppo di persone di grandi dimensioni. Il persistedFaceId, userData, funzionalità di nome e il face persona nella voce di persona verranno tutti eliminati.'
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Recuperare il nome di una persona e userData e il faceIds persistente che rappresenta la funzionalità di volti persona registrata.
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo largePersonGroupId appartenente).'
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
    name: 'getFace(string, string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
    name: LargePersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creare un LargePersonGroupPerson.
    syntax:
      content: 'new LargePersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Riferimento al client del servizio.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
    name: 'list(string, LargePersonGroupPersonListOptionalParams, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(largePersonGroupId: string, options: LargePersonGroupPersonListOptionalParams, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
    name: 'list(string, Models.LargePersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Elencare tutte le persone in un gruppo di persone di grandi dimensioni e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell''utente).'
    syntax:
      content: 'function list(largePersonGroupId: string, options?: Models.LargePersonGroupPersonListOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: options
          type:
            - Models.LargePersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(largePersonGroupId: string, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            Il callback
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
    name: 'update(string, string, LargePersonGroupPersonUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, options: LargePersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
    name: 'update(string, string, Models.LargePersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Nome dell'aggiornamento o una persona userData.
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, options?: Models.LargePersonGroupPersonUpdateOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: options
          type:
            - Models.LargePersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
    name: 'updateFace(string, string, string, LargePersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: LargePersonGroupPersonUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
    name: 'updateFace(string, string, string, Models.LargePersonGroupPersonUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Aggiornamento di una persona persistente campo userData del viso.
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Models.LargePersonGroupPersonUpdateFaceOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: options
          type:
            - Models.LargePersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: ID che fanno riferimento a un gruppo particolare utente di grandi dimensioni.
        - id: personId
          type:
            - string
          description: ID che fanno riferimento a una determinata persona.
        - id: persistedFaceId
          type:
            - string
          description: ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Il callback
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
    name: LargePersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: LargePersonGroupPersonAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
    name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: LargePersonGroupPersonAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
    name: LargePersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonCreateOptionalParams
        fullName: LargePersonGroupPersonCreateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
    name: LargePersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonListOptionalParams
        fullName: LargePersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
    name: LargePersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonUpdateOptionalParams
        fullName: LargePersonGroupPersonUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'
    name: LargePersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonUpdateFaceOptionalParams
        fullName: LargePersonGroupPersonUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'