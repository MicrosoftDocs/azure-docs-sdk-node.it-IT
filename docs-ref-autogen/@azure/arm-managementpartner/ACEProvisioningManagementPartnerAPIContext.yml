### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext'
    name: ACEProvisioningManagementPartnerAPIContext
    fullName: ACEProvisioningManagementPartnerAPIContext
    children:
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.acceptLanguage'
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.constructor'
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.apiVersion'
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.beginLongRunningRequest'
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.credentials'
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.longRunningOperationRetryTimeout'
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.restoreLROPoller'
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.sendLongRunningRequest'
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.sendLRORequest'
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.sendOperationRequest'
      - '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: AzureServiceClient
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.constructor'
    name: 'ACEProvisioningManagementPartnerAPIContext(ServiceClientCredentials, Models.ACEProvisioningManagementPartnerAPIOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="d98dd-101">Inizializza una nuova istanza della classe ACEProvisioningManagementPartnerAPI.</span><span class="sxs-lookup"><span data-stu-id="d98dd-101">Initializes a new instance of the ACEProvisioningManagementPartnerAPI class.</span></span>
    syntax:
      content: 'new ACEProvisioningManagementPartnerAPIContext(credentials: ServiceClientCredentials, options?: Models.ACEProvisioningManagementPartnerAPIOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="d98dd-102">Credenziali necessarie per il client per connettersi ad Azure.</span><span class="sxs-lookup"><span data-stu-id="d98dd-102">Credentials needed for the client to connect to Azure.</span></span>
        - id: options
          type:
            - Models.ACEProvisioningManagementPartnerAPIOptions
          description: ''
          optional: true
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d98dd-103">Inviare la richiesta iniziale di un operazioni a esecuzione Prolungata (operazione a esecuzione prolungata) e ottenere nuovamente un HttpLongRunningOperationResponse che fornisce metodi per il polling di operazioni a esecuzione Prolungata e verifica se le operazioni a esecuzione Prolungata è stata completata.</span><span class="sxs-lookup"><span data-stu-id="d98dd-103">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="d98dd-104">L'oggetto richiesta</span><span class="sxs-lookup"><span data-stu-id="d98dd-104">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d98dd-105">Il timeout di ripetizione dei tentativi in secondi per operazioni con esecuzione prolungata.</span><span class="sxs-lookup"><span data-stu-id="d98dd-105">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="d98dd-106">Il valore predefinito è 30.</span><span class="sxs-lookup"><span data-stu-id="d98dd-106">Default value is 30.</span></span>
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d98dd-107">Ripristinare un LROPoller dal LROPollState fornito.</span><span class="sxs-lookup"><span data-stu-id="d98dd-107">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="d98dd-108">Questo metodo può essere utilizzato per ricreare un LROPoller su un altro processo o computer.</span><span class="sxs-lookup"><span data-stu-id="d98dd-108">This method can be used to recreate an LROPoller on a different process or machine.</span></span>
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d98dd-109">Fornisce un meccanismo per eseguire una richiesta che si esegue il polling e fornirà il risultato finale.</span><span class="sxs-lookup"><span data-stu-id="d98dd-109">Provides a mechanism to make a request that will poll and provide the final result.</span></span>
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="d98dd-110">L'oggetto richiesta</span><span class="sxs-lookup"><span data-stu-id="d98dd-110">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d98dd-111">Inviare la richiesta iniziale di un operazioni a esecuzione Prolungata (operazione a esecuzione prolungata) e ottenere nuovamente un LROPoller che fornisce metodi per il polling di operazioni a esecuzione Prolungata e verifica se le operazioni a esecuzione Prolungata è stata completata.</span><span class="sxs-lookup"><span data-stu-id="d98dd-111">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="d98dd-112">Gli argomenti per l'operazione.</span><span class="sxs-lookup"><span data-stu-id="d98dd-112">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="d98dd-113">Specifica per l'operazione.</span><span class="sxs-lookup"><span data-stu-id="d98dd-113">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d98dd-114">Opzioni aggiuntive da inviare durante la richiesta.</span><span class="sxs-lookup"><span data-stu-id="d98dd-114">Additional options to be sent while making the request.</span></span>
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d98dd-115">Inviare una richiesta HTTP che viene popolata usando il OperationSpec fornito.</span><span class="sxs-lookup"><span data-stu-id="d98dd-115">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="d98dd-116">Gli argomenti che verranno popolati con i valori basati su modelli della richiesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="d98dd-116">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="d98dd-117">OperationSpec da usare per popolare il httpRequest.</span><span class="sxs-lookup"><span data-stu-id="d98dd-117">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="d98dd-118">Callback da chiamare quando viene ricevuta la risposta.</span><span class="sxs-lookup"><span data-stu-id="d98dd-118">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-managementpartner'
  - uid: '@azure/arm-managementpartner.ACEProvisioningManagementPartnerAPIContext.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d98dd-119">Invio di richiesta HTTP specificato.</span><span class="sxs-lookup"><span data-stu-id="d98dd-119">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-managementpartner'