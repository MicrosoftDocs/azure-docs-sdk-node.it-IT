### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.TopicClient'
    name: TopicClient
    fullName: TopicClient
    children:
      - '@azure/service-bus.TopicClient.close'
      - '@azure/service-bus.TopicClient.createSender'
      - '@azure/service-bus.TopicClient.entityPath'
      - '@azure/service-bus.TopicClient.getDeadLetterTopicPath'
      - '@azure/service-bus.TopicClient.id'
    langs:
      - typeScript
    type: class
    summary: |-
      Vengono descritti il client che consente l'interazione con un argomento del Bus di servizio.
      Usare il `createTopicClient` sull'oggetto ServiceBusClient per creare un'istanza di un TopicClient (funzione)
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.TopicClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Chiude il collegamento AMQP per il mittente creato da questo client.
      Una volta chiusa, né il TopicClient né relativo mittenti sono utilizzabile per eventuali altre operazioni.
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.TopicClient.createSender'
    name: createSender()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Crea un mittente da usare per l'invio di messaggi, pianificando i messaggi vengano inviati in un secondo momento e l'annullamento di tali messaggi pianificati.
      - Genera l'errore se un mittente aperto esiste già per questo TopicClient.
      Se l'argomento ha sottoscrizioni attivata dalla sessione, quindi i messaggi inviati senza il `sessionId` proprietà verrà inviata a una coda di lettera non consegnata di tali sottoscrizioni.
    syntax:
      content: function createSender()
      parameters: []
      return:
        type:
          - '@azure/service-bus.Sender'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.TopicClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: Il percorso per l'argomento del Bus di servizio per il quale viene creato questo client.
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.TopicClient.getDeadLetterTopicPath'
    name: 'getDeadLetterTopicPath(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Restituisce il nome dell'argomento lettera non consegnata corrispondente per i nomi di argomento e sottoscrizione specificati.
      Usare queste informazioni il `createSubscriptionClient` funzione del `ServiceBusClient` istanza per ricevere messaggi dalla coda non recapitabili per un determinato sottoscrizione.
    syntax:
      content: 'static function getDeadLetterTopicPath(topicName: string, subscriptionName: string)'
      parameters:
        - id: topicName
          type:
            - string
          description: Nome dell'argomento viene recuperato il nome della controparte cui lettera non consegnata
        - id: subscriptionName
          type:
            - string
          description: |
            Nome della sottoscrizione viene recuperato il nome della controparte cui lettera non consegnata
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.TopicClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Identificatore univoco per questo client.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.Sender'
    name: Sender
    spec.typeScript:
      - name: Sender
        fullName: Sender
        uid: '@azure/service-bus.Sender'