### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.SubscriptionClient'
    name: SubscriptionClient
    fullName: SubscriptionClient
    children:
      - '@azure/service-bus.SubscriptionClient.addRule'
      - '@azure/service-bus.SubscriptionClient.close'
      - '@azure/service-bus.SubscriptionClient.createReceiver'
      - '@azure/service-bus.SubscriptionClient.createReceiver_1'
      - '@azure/service-bus.SubscriptionClient.defaultRuleName'
      - '@azure/service-bus.SubscriptionClient.entityPath'
      - '@azure/service-bus.SubscriptionClient.getRules'
      - '@azure/service-bus.SubscriptionClient.id'
      - '@azure/service-bus.SubscriptionClient.peek'
      - '@azure/service-bus.SubscriptionClient.peekBySequenceNumber'
      - '@azure/service-bus.SubscriptionClient.removeRule'
      - '@azure/service-bus.SubscriptionClient.subscriptionName'
      - '@azure/service-bus.SubscriptionClient.topicName'
    langs:
      - typeScript
    type: class
    summary: |-
      Vengono descritti il client che consente l'interazione con una sottoscrizione del Bus di servizio.
      Usare il `createSubscriptionClient` sull'oggetto ServiceBusClient per creare un'istanza di un SubscriptionClient (funzione)
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.addRule'
    name: 'addRule(string, boolean | string | CorrelationFilter, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Aggiunge una regola per la sottoscrizione, come definito dal nome della regola specificata, filtro e azione.
      **Nota**: Rimuovere il filtro true predefinito per la sottoscrizione prima di aggiungere una regola.
      In caso contrario, la regola di aggiunta non avrà alcun effetto perché il filtro true si otterrà sempre nella sottoscrizione di ricezione di tutti i messaggi.
    syntax:
      content: 'function addRule(ruleName: string, filter: boolean | string | CorrelationFilter, sqlRuleActionExpression?: undefined | string)'
      parameters:
        - id: ruleName
          type:
            - string
          description: Nome della regola
        - id: filter
          type:
            - boolean | string | @azure/service-bus.CorrelationFilter
          description: 'Valore booleano, espressione SQL o un filtro di correlazione. La sintassi di filtro SQL, vedere [sintassi di SQLFilter](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-filter).'
        - id: sqlRuleActionExpression
          type:
            - undefined | string
          description: |
            Azione da eseguire se il messaggio soddisfa l'espressione di filtro. Per informazioni sulla sintassi SQL Rule Action, vedere [sintassi di SQLRuleAction](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-rule-action).
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Chiude il collegamento AMQP per i ricevitori creati da questo client.
      Una volta chiusa, né il SubscriptionClient né relativo ricevitori utilizzabile per eventuali altre operazioni.
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Crea un ricevitore per la ricezione di messaggi da una sottoscrizione che non ha abilitate le sessioni.
      - Genera l'errore se un ricevitore aperto esiste già per questo SubscriptionClient.
      - Genera un'eccezione `InvalidOperationError` se la sottoscrizione contiene le sessioni abilitate (nel qual caso, usare l'overload del metodo che accetta `sessionOptions` argomento)
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            Un'enumerazione che indica la modalità in cui devono essere ricevuti i messaggi. I valori possibili sono:
            - `ReceiveMode.peekLock`: Una volta che viene ricevuto un messaggio in questa modalità, il ricevitore dispone di un blocco sul messaggio per un periodo di tempo specifico. Se il messaggio non è finalizzato a questo punto, si trovino nel Bus di servizio da recuperare dalla successiva operazione di ricezione.
            - `ReceiveMode.receiveAndDelete`: I messaggi ricevuti in questa modalità automaticamente rimossi dal Bus di servizio.
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Crea un ricevitore per sottoscrizione abilitata per la ricezione di messaggi da una sessione. Quando non viene specificato alcun ID di sessione, viene usata una sessione casuale tra le sessioni disponibili.
      - Genera l'errore se un ricevitore open esiste già per specificato sessionId.
      - Genera un'eccezione `SessionCannotBeLockedError` se la sottoscrizione non ha le sessioni abilitate (nel qual caso non si passano le `sessionOptions` argomento) o se non è in grado di ottenere un blocco sulla sessione (in cui provare a qualche minuto) del Bus di servizio
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            Un'enumerazione che indica la modalità in cui devono essere ricevuti i messaggi. I valori possibili sono:
            - `ReceiveMode.peekLock`: Una volta che viene ricevuto un messaggio in questa modalità, il ricevitore dispone di un blocco sul messaggio per un periodo di tempo specifico. Se il messaggio non è finalizzato a questo punto, si trovino nel Bus di servizio da recuperare dalla successiva operazione di ricezione.
            - `ReceiveMode.receiveAndDelete`: I messaggi ricevuti in questa modalità automaticamente rimossi dal Bus di servizio.
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            Opzioni per fornire l'ID sessione e la durata del rinnovo del blocco automatico per il ricevitore di sessione.
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.defaultRuleName'
    name: defaultRuleName
    fullName: defaultRuleName
    children: []
    langs:
      - typeScript
    type: property
    summary: Il nome della regola predefinita nella sottoscrizione.
    syntax:
      content: 'defaultRuleName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: Il percorso per la sottoscrizione del Bus di servizio per il quale viene creato questo client.
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.getRules'
    name: getRules()
    children: []
    type: method
    langs:
      - typeScript
    summary: Ottiene tutte le regole associate alla sottoscrizione
    syntax:
      content: function getRules()
      parameters: []
      return:
        type:
          - 'Promise<@azure/service-bus.RuleDescription[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Identificatore univoco per questo client.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Recupera il successivo batch di messaggi attivi (incluso con rinviata ma non i messaggi non recapitabile).
      - La prima chiamata a `peek()` recupera il primo messaggio attivo. Ogni chiamata successiva viene recuperato il messaggio successivo.
      - A differenza di una `received` messaggio `peeked` messaggio è una versione di sola lettura del messaggio.
      Non può essere `Completed/Abandoned/Deferred/Deadlettered`. Non è possibile rinnovare il blocco su di esso.
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Visualizza il numero desiderato di messaggi attivi (incluso con rinviata ma non i messaggi non recapitabile) rispetto al numero di sequenza specificata.
      - A differenza di una `received` messaggio `peeked` messaggio è una versione di sola lettura del messaggio.
      Non può essere `Completed/Abandoned/Deferred/Deadlettered`. Non è possibile rinnovare il blocco su di esso.
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: Il numero di sequenza da cui leggere il messaggio.
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.removeRule'
    name: removeRule(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Rimuove la regola per la sottoscrizione identificata dal nome di regole specificato.
      **Attenzione**: Se vengono rimosse tutte le regole in una sottoscrizione, quindi la sottoscrizione non riceveranno ulteriori messaggi.
    syntax:
      content: 'function removeRule(ruleName: string)'
      parameters:
        - id: ruleName
          type:
            - string
          description: |+

      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.subscriptionName'
    name: subscriptionName
    fullName: subscriptionName
    children: []
    langs:
      - typeScript
    type: property
    summary: Il nome della sottoscrizione del Bus di servizio per il quale viene creato questo client.
    syntax:
      content: 'subscriptionName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.topicName'
    name: topicName
    fullName: topicName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Il nome dell''argomento del Bus di servizio per cui sottoscrizione, questo client viene creato.'
    syntax:
      content: 'topicName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
references:
  - uid: boolean | string | @azure/service-bus.CorrelationFilter
    name: CorrelationFilter
    spec.typeScript:
      - name: 'boolean | string | '
        fullName: 'boolean | string | '
      - name: CorrelationFilter
        fullName: CorrelationFilter
        uid: '@azure/service-bus.CorrelationFilter'
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: 'Promise<@azure/service-bus.RuleDescription[]>'
    name: 'RuleDescription[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RuleDescription
        fullName: RuleDescription
        uid: '@azure/service-bus.RuleDescription'
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'