### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.Sender'
    name: Sender
    fullName: Sender
    children:
      - '@azure/service-bus.Sender.cancelScheduledMessage'
      - '@azure/service-bus.Sender.cancelScheduledMessages'
      - '@azure/service-bus.Sender.close'
      - '@azure/service-bus.Sender.isClosed'
      - '@azure/service-bus.Sender.scheduleMessage'
      - '@azure/service-bus.Sender.scheduleMessages'
      - '@azure/service-bus.Sender.send'
      - '@azure/service-bus.Sender.sendBatch'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="6a324-101">La classe mittente può essere utilizzata per inviare messaggi, pianificare i messaggi da inviare in un secondo momento e annullare tali messaggi pianificati.</span><span class="sxs-lookup"><span data-stu-id="6a324-101">The Sender class can be used to send messages, schedule messages to be sent at a later time and cancel such scheduled messages.</span></span>
      <span data-ttu-id="6a324-102">Usare il `createSender` funzione nel QueueClient o TopicClient per creare un'istanza di un mittente.</span><span class="sxs-lookup"><span data-stu-id="6a324-102">Use the `createSender` function on the QueueClient or TopicClient to instantiate a Sender.</span></span>
      <span data-ttu-id="6a324-103">La classe di mittente è un'astrazione sul collegamento mittente AMQP sottostante.</span><span class="sxs-lookup"><span data-stu-id="6a324-103">The Sender class is an abstraction over the underlying AMQP sender link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessage'
    name: cancelScheduledMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="6a324-104">Annulla un messaggio che è stato pianificato vengono visualizzati in un bus di servizio coda/sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="6a324-104">Cancels a message that was scheduled to appear on a ServiceBus Queue/Subscription.</span></span>
    syntax:
      content: 'function cancelScheduledMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: <span data-ttu-id="6a324-105">Il numero di sequenza del messaggio da annullare.</span><span class="sxs-lookup"><span data-stu-id="6a324-105">The sequence number of the message to be cancelled.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessages'
    name: 'cancelScheduledMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="6a324-106">Annulla più i messaggi che sono stati pianificati da visualizzare nel bus di servizio coda/sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="6a324-106">Cancels multiple messages that were scheduled to appear on a ServiceBus Queue/Subscription.</span></span>
    syntax:
      content: 'function cancelScheduledMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: <span data-ttu-id="6a324-107">Matrice di numeri di sequenza dei messaggi di annullamento.</span><span class="sxs-lookup"><span data-stu-id="6a324-107">An Array of sequence numbers of the messages to be cancelled.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="6a324-108">Chiude il collegamento mittente AMQP sottostante.</span><span class="sxs-lookup"><span data-stu-id="6a324-108">Closes the underlying AMQP sender link.</span></span>
      <span data-ttu-id="6a324-109">Una volta chiusa, il server sender non è utilizzabile per eventuali altre operazioni.</span><span class="sxs-lookup"><span data-stu-id="6a324-109">Once closed, the sender cannot be used for any further operations.</span></span>
      <span data-ttu-id="6a324-110">Usare il `createSender` nel QueueClient o TopicClient per creare un'istanza di un nuovo mittente (funzione)</span><span class="sxs-lookup"><span data-stu-id="6a324-110">Use the `createSender` function on the QueueClient or TopicClient to instantiate a new Sender</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="6a324-111">Restituisce `true` se il mittente o il client che lo ha creato è stato chiuso.</span><span class="sxs-lookup"><span data-stu-id="6a324-111">Returns `true` if either the sender or the client that created it has been closed</span></span>
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessage'
    name: 'scheduleMessage(Date, SendableMessageInfo)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="6a324-112">Pianificazioni Data messaggio venga visualizzato nel Bus di servizio coda/sottoscrizione in un secondo momento.</span><span class="sxs-lookup"><span data-stu-id="6a324-112">Schedules given message to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessage(scheduledEnqueueTimeUtc: Date, message: SendableMessageInfo)'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: <span data-ttu-id="6a324-113">L'ora UTC in cui il messaggio deve essere accodati.</span><span class="sxs-lookup"><span data-stu-id="6a324-113">The UTC time at which the message should be enqueued.</span></span>
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="6a324-114">Messaggio che deve essere pianificata.</span><span class="sxs-lookup"><span data-stu-id="6a324-114">The message that needs to be scheduled.</span></span>
      return:
        type:
          - Promise<Long>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessages'
    name: 'scheduleMessages(Date, SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="6a324-115">Pianificazioni data messaggi venga visualizzato nel Bus di servizio coda/sottoscrizione in un secondo momento.</span><span class="sxs-lookup"><span data-stu-id="6a324-115">Schedules given messages to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessages(scheduledEnqueueTimeUtc: Date, messages: SendableMessageInfo[])'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: <span data-ttu-id="6a324-116">L'ora UTC in cui i messaggi devono essere accodati.</span><span class="sxs-lookup"><span data-stu-id="6a324-116">The UTC time at which the messages should be enqueued.</span></span>
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: <span data-ttu-id="6a324-117">Matrice di messaggi che devono essere pianificati.</span><span class="sxs-lookup"><span data-stu-id="6a324-117">Array of Messages that need to be scheduled.</span></span>
      return:
        type:
          - 'Promise<Long[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.send'
    name: send(SendableMessageInfo)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="6a324-118">Invia il messaggio specificato dopo la creazione di un collegamento AMQP mittente se non è già presente.</span><span class="sxs-lookup"><span data-stu-id="6a324-118">Sends the given message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      <span data-ttu-id="6a324-119">Per inviare un messaggio a un `session` e/o `partition` coda/argomento abilitato, impostare il `sessionId` e/o `partitionKey` proprietà rispettivamente nel messaggio.</span><span class="sxs-lookup"><span data-stu-id="6a324-119">To send a message to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the message.</span></span>
    syntax:
      content: 'function send(message: SendableMessageInfo)'
      parameters:
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="6a324-120">Messaggio da inviare.</span><span class="sxs-lookup"><span data-stu-id="6a324-120">Message to send.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.sendBatch'
    name: 'sendBatch(SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="6a324-121">Invia i messaggi specificati in un unico batch, ad esempio in un singolo messaggio AMQP, dopo la creazione di un collegamento AMQP mittente se non è già presente.</span><span class="sxs-lookup"><span data-stu-id="6a324-121">Sends the given messages in a single batch i.e. in a single AMQP message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      - <span data-ttu-id="6a324-122">Per inviare messaggi a un `session` e/o `partition` coda/argomento abilitato, impostare il `sessionId` e/o `partitionKey` rispettivamente proprietà del messaggio.</span><span class="sxs-lookup"><span data-stu-id="6a324-122">To send messages to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the messages.</span></span>
      - <span data-ttu-id="6a324-123">In tal caso, tutti i messaggi del batch devono avere lo stesso `sessionId` (se si usa sessioni) e lo stesso `parititionKey` (se si usa partizioni).</span><span class="sxs-lookup"><span data-stu-id="6a324-123">When doing so, all messages in the batch should have the same `sessionId` (if using sessions) and the same `parititionKey` (if using paritions).</span></span>
    syntax:
      content: 'function sendBatch(messages: SendableMessageInfo[])'
      parameters:
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: <span data-ttu-id="6a324-124">Una matrice di oggetti SendableMessageInfo da inviare in un messaggio Batch.</span><span class="sxs-lookup"><span data-stu-id="6a324-124">An array of SendableMessageInfo objects to be sent in a Batch message.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.SendableMessageInfo'
    name: SendableMessageInfo
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
  - uid: '@azure/service-bus.SendableMessageInfo[]'
    name: 'SendableMessageInfo[]'
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
      - name: '[]'
        fullName: '[]'