### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.QueueClient'
    name: QueueClient
    fullName: QueueClient
    children:
      - '@azure/service-bus.QueueClient.close'
      - '@azure/service-bus.QueueClient.createReceiver'
      - '@azure/service-bus.QueueClient.createReceiver_1'
      - '@azure/service-bus.QueueClient.createSender'
      - '@azure/service-bus.QueueClient.entityPath'
      - '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
      - '@azure/service-bus.QueueClient.id'
      - '@azure/service-bus.QueueClient.peek'
      - '@azure/service-bus.QueueClient.peekBySequenceNumber'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="a901d-101">Vengono descritti il client che consente l'interazione con una coda del Bus di servizio.</span><span class="sxs-lookup"><span data-stu-id="a901d-101">Describes the client that allows interacting with a Service Bus Queue.</span></span>
      <span data-ttu-id="a901d-102">Usare il `createQueueClient` sull'oggetto ServiceBusClient per creare un'istanza di un QueueClient (funzione)</span><span class="sxs-lookup"><span data-stu-id="a901d-102">Use the `createQueueClient` function on the ServiceBusClient object to instantiate a QueueClient</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a901d-103">Chiude tutti i collegamenti AMQP per mittente/ricevitori, creati da questo client.</span><span class="sxs-lookup"><span data-stu-id="a901d-103">Closes all the AMQP links for sender/receivers created by this client.</span></span>
      <span data-ttu-id="a901d-104">Una volta chiusa, né il QueueClient né i mittente/destinatari è utilizzabile per eventuali altre operazioni.</span><span class="sxs-lookup"><span data-stu-id="a901d-104">Once closed, neither the QueueClient nor its sender/receivers can be used for any further operations.</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a901d-105">Crea un ricevitore per la ricezione di messaggi da una coda che non ha abilitate le sessioni.</span><span class="sxs-lookup"><span data-stu-id="a901d-105">Creates a Receiver for receiving messages from a Queue which does not have sessions enabled.</span></span>
      - <span data-ttu-id="a901d-106">Genera l'errore se un ricevitore aperto esiste già per questo QueueClient.</span><span class="sxs-lookup"><span data-stu-id="a901d-106">Throws error if an open receiver already exists for this QueueClient.</span></span>
      - <span data-ttu-id="a901d-107">Genera un'eccezione `InvalidOperationError` se la coda contiene le sessioni abilitate (nel qual caso, usare l'overload del metodo che accetta `sessionOptions` argomento)</span><span class="sxs-lookup"><span data-stu-id="a901d-107">Throws `InvalidOperationError` if the Queue has sessions enabled (in which case, use the overload of this method which takes `sessionOptions` argument)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            <span data-ttu-id="a901d-108">Un'enumerazione che indica la modalità in cui devono essere ricevuti i messaggi.</span><span class="sxs-lookup"><span data-stu-id="a901d-108">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="a901d-109">I valori possibili sono:</span><span class="sxs-lookup"><span data-stu-id="a901d-109">Possible values are:</span></span>
            - <span data-ttu-id="a901d-110">`ReceiveMode.peekLock`: Una volta che viene ricevuto un messaggio in questa modalità, il ricevitore dispone di un blocco sul messaggio per un periodo di tempo specifico.</span><span class="sxs-lookup"><span data-stu-id="a901d-110">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="a901d-111">Se il messaggio non è finalizzato a questo punto, si trovino nel Bus di servizio da recuperare dalla successiva operazione di ricezione.</span><span class="sxs-lookup"><span data-stu-id="a901d-111">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="a901d-112">`ReceiveMode.receiveAndDelete`: I messaggi ricevuti in questa modalità automaticamente rimossi dal Bus di servizio.</span><span class="sxs-lookup"><span data-stu-id="a901d-112">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a901d-113">Crea un ricevitore per la ricezione di messaggi da una sessione della coda è abilitato.</span><span class="sxs-lookup"><span data-stu-id="a901d-113">Creates a Receiver for receiving messages from a session enabled Queue.</span></span> <span data-ttu-id="a901d-114">Quando non viene specificato alcun ID di sessione, viene usata una sessione casuale tra le sessioni disponibili.</span><span class="sxs-lookup"><span data-stu-id="a901d-114">When no sessionId is given, a random session among the available sessions is used.</span></span>
      - <span data-ttu-id="a901d-115">Genera l'errore se un ricevitore open esiste già per specificato sessionId.</span><span class="sxs-lookup"><span data-stu-id="a901d-115">Throws error if an open receiver already exists for given sessionId.</span></span>
      - <span data-ttu-id="a901d-116">Genera un'eccezione `SessionCannotBeLockedError` se la coda non ha le sessioni abilitate (nel qual caso non si passano le `sessionOptions` argomento) o se non è in grado di ottenere un blocco sulla sessione (in cui provare a qualche minuto) del Bus di servizio</span><span class="sxs-lookup"><span data-stu-id="a901d-116">Throws `SessionCannotBeLockedError` if the Queue does not have sessions enabled (in which case do not pass the `sessionOptions` argument) or if Service Bus is not able to get a lock on the session (in which case try again after some time)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            <span data-ttu-id="a901d-117">Un'enumerazione che indica la modalità in cui devono essere ricevuti i messaggi.</span><span class="sxs-lookup"><span data-stu-id="a901d-117">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="a901d-118">I valori possibili sono:</span><span class="sxs-lookup"><span data-stu-id="a901d-118">Possible values are:</span></span>
            - <span data-ttu-id="a901d-119">`ReceiveMode.peekLock`: Una volta che viene ricevuto un messaggio in questa modalità, il ricevitore dispone di un blocco sul messaggio per un periodo di tempo specifico.</span><span class="sxs-lookup"><span data-stu-id="a901d-119">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="a901d-120">Se il messaggio non è finalizzato a questo punto, si trovino nel Bus di servizio da recuperare dalla successiva operazione di ricezione.</span><span class="sxs-lookup"><span data-stu-id="a901d-120">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="a901d-121">`ReceiveMode.receiveAndDelete`: I messaggi ricevuti in questa modalità automaticamente rimossi dal Bus di servizio.</span><span class="sxs-lookup"><span data-stu-id="a901d-121">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            <span data-ttu-id="a901d-122">Opzioni per fornire l'ID sessione e la durata del rinnovo del blocco automatico per il ricevitore di sessione.</span><span class="sxs-lookup"><span data-stu-id="a901d-122">Options to provide sessionId and duration of automatic lock renewal for the session receiver.</span></span>
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createSender'
    name: createSender()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a901d-123">Crea un mittente da usare per l'invio di messaggi, pianificando i messaggi vengano inviati in un secondo momento e l'annullamento di tali messaggi pianificati.</span><span class="sxs-lookup"><span data-stu-id="a901d-123">Creates a Sender to be used for sending messages, scheduling messages to be sent at a later time and cancelling such scheduled messages.</span></span>
      - <span data-ttu-id="a901d-124">Genera l'errore se un mittente aperto esiste già per questo QueueClient.</span><span class="sxs-lookup"><span data-stu-id="a901d-124">Throws error if an open sender already exists for this QueueClient.</span></span>
    syntax:
      content: function createSender()
      parameters: []
      return:
        type:
          - '@azure/service-bus.Sender'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="a901d-125">Il percorso per la coda del Bus di servizio per il quale viene creato questo client.</span><span class="sxs-lookup"><span data-stu-id="a901d-125">The path for the Service Bus Queue for which this client is created.</span></span>
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
    name: getDeadLetterQueuePath(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a901d-126">Restituisce il nome della coda lettera non consegnata corrispondente per la coda rappresentata dal nome specificato.</span><span class="sxs-lookup"><span data-stu-id="a901d-126">Returns the corresponding dead letter queue name for the queue represented by the given name.</span></span>
      <span data-ttu-id="a901d-127">Usare queste informazioni il `createQueueClient` funzionano nel `ServiceBusClient` istanza per ricevere messaggi da una coda dei messaggi non recapitabili.</span><span class="sxs-lookup"><span data-stu-id="a901d-127">Use this in the `createQueueClient` function on the `ServiceBusClient` instance to receive messages from a dead letter queue.</span></span>
    syntax:
      content: 'static function getDeadLetterQueuePath(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |
            <span data-ttu-id="a901d-128">Nome della coda viene recuperato il nome della controparte cui lettera non consegnata</span><span class="sxs-lookup"><span data-stu-id="a901d-128">Name of the queue whose dead letter counterpart's name is being fetched</span></span>
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="a901d-129">Identificatore univoco per questo client.</span><span class="sxs-lookup"><span data-stu-id="a901d-129">A unique identifier for this client.</span></span>
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a901d-130">Recupera il successivo batch di messaggi attivi (incluso con rinviata ma non i messaggi non recapitabile).</span><span class="sxs-lookup"><span data-stu-id="a901d-130">Fetches the next batch of active messages (including deferred but not deadlettered messages).</span></span>
      - <span data-ttu-id="a901d-131">La prima chiamata a `peek()` recupera il primo messaggio attivo.</span><span class="sxs-lookup"><span data-stu-id="a901d-131">The first call to `peek()` fetches the first active message.</span></span> <span data-ttu-id="a901d-132">Ogni chiamata successiva viene recuperato il messaggio successivo.</span><span class="sxs-lookup"><span data-stu-id="a901d-132">Each subsequent call fetches the subsequent message.</span></span>
      - <span data-ttu-id="a901d-133">A differenza di una `received` messaggio `peeked` messaggio è una versione di sola lettura del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a901d-133">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="a901d-134">Non può essere `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="a901d-134">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="a901d-135">Non è possibile rinnovare il blocco su di esso.</span><span class="sxs-lookup"><span data-stu-id="a901d-135">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a901d-136">Visualizza il numero desiderato di messaggi attivi (incluso con rinviata ma non i messaggi non recapitabile) rispetto al numero di sequenza specificata.</span><span class="sxs-lookup"><span data-stu-id="a901d-136">Peeks the desired number of active messages (including deferred but not deadlettered messages) from the specified sequence number.</span></span>
      - <span data-ttu-id="a901d-137">A differenza di una `received` messaggio `peeked` messaggio è una versione di sola lettura del messaggio.</span><span class="sxs-lookup"><span data-stu-id="a901d-137">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="a901d-138">Non può essere `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="a901d-138">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="a901d-139">Non è possibile rinnovare il blocco su di esso.</span><span class="sxs-lookup"><span data-stu-id="a901d-139">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: <span data-ttu-id="a901d-140">Il numero di sequenza da cui leggere il messaggio.</span><span class="sxs-lookup"><span data-stu-id="a901d-140">The sequence number from where to read the message.</span></span>
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: '@azure/service-bus.Sender'
    name: Sender
    spec.typeScript:
      - name: Sender
        fullName: Sender
        uid: '@azure/service-bus.Sender'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'