### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.QueueClient'
    name: QueueClient
    fullName: QueueClient
    children:
      - '@azure/service-bus.QueueClient.close'
      - '@azure/service-bus.QueueClient.createReceiver'
      - '@azure/service-bus.QueueClient.createReceiver_1'
      - '@azure/service-bus.QueueClient.createSender'
      - '@azure/service-bus.QueueClient.entityPath'
      - '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
      - '@azure/service-bus.QueueClient.id'
      - '@azure/service-bus.QueueClient.peek'
      - '@azure/service-bus.QueueClient.peekBySequenceNumber'
    langs:
      - typeScript
    type: class
    summary: |-
      Vengono descritti il client che consente l'interazione con una coda del Bus di servizio.
      Usare il `createQueueClient` sull'oggetto ServiceBusClient per creare un'istanza di un QueueClient (funzione)
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Chiude tutti i collegamenti AMQP per mittente/ricevitori, creati da questo client.
      Una volta chiusa, né il QueueClient né i mittente/destinatari è utilizzabile per eventuali altre operazioni.
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Crea un ricevitore per la ricezione di messaggi da una coda che non ha abilitate le sessioni.
      - Genera l'errore se un ricevitore aperto esiste già per questo QueueClient.
      - Genera un'eccezione `InvalidOperationError` se la coda contiene le sessioni abilitate (nel qual caso, usare l'overload del metodo che accetta `sessionOptions` argomento)
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            Un'enumerazione che indica la modalità in cui devono essere ricevuti i messaggi. I valori possibili sono:
            - `ReceiveMode.peekLock`: Una volta che viene ricevuto un messaggio in questa modalità, il ricevitore dispone di un blocco sul messaggio per un periodo di tempo specifico. Se il messaggio non è finalizzato a questo punto, si trovino nel Bus di servizio da recuperare dalla successiva operazione di ricezione.
            - `ReceiveMode.receiveAndDelete`: I messaggi ricevuti in questa modalità automaticamente rimossi dal Bus di servizio.
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Crea un ricevitore per la ricezione di messaggi da una sessione della coda è abilitato. Quando non viene specificato alcun ID di sessione, viene usata una sessione casuale tra le sessioni disponibili.
      - Genera l'errore se un ricevitore open esiste già per specificato sessionId.
      - Genera un'eccezione `SessionCannotBeLockedError` se la coda non ha le sessioni abilitate (nel qual caso non si passano le `sessionOptions` argomento) o se non è in grado di ottenere un blocco sulla sessione (in cui provare a qualche minuto) del Bus di servizio
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            Un'enumerazione che indica la modalità in cui devono essere ricevuti i messaggi. I valori possibili sono:
            - `ReceiveMode.peekLock`: Una volta che viene ricevuto un messaggio in questa modalità, il ricevitore dispone di un blocco sul messaggio per un periodo di tempo specifico. Se il messaggio non è finalizzato a questo punto, si trovino nel Bus di servizio da recuperare dalla successiva operazione di ricezione.
            - `ReceiveMode.receiveAndDelete`: I messaggi ricevuti in questa modalità automaticamente rimossi dal Bus di servizio.
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            Opzioni per fornire l'ID sessione e la durata del rinnovo del blocco automatico per il ricevitore di sessione.
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createSender'
    name: createSender()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Crea un mittente da usare per l'invio di messaggi, pianificando i messaggi vengano inviati in un secondo momento e l'annullamento di tali messaggi pianificati.
      - Genera l'errore se un mittente aperto esiste già per questo QueueClient.
    syntax:
      content: function createSender()
      parameters: []
      return:
        type:
          - '@azure/service-bus.Sender'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: Il percorso per la coda del Bus di servizio per il quale viene creato questo client.
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
    name: getDeadLetterQueuePath(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Restituisce il nome della coda lettera non consegnata corrispondente per la coda rappresentata dal nome specificato.
      Usare queste informazioni il `createQueueClient` funzionano nel `ServiceBusClient` istanza per ricevere messaggi da una coda dei messaggi non recapitabili.
    syntax:
      content: 'static function getDeadLetterQueuePath(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |
            Nome della coda viene recuperato il nome della controparte cui lettera non consegnata
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Identificatore univoco per questo client.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Recupera il successivo batch di messaggi attivi (incluso con rinviata ma non i messaggi non recapitabile).
      - La prima chiamata a `peek()` recupera il primo messaggio attivo. Ogni chiamata successiva viene recuperato il messaggio successivo.
      - A differenza di una `received` messaggio `peeked` messaggio è una versione di sola lettura del messaggio.
      Non può essere `Completed/Abandoned/Deferred/Deadlettered`. Non è possibile rinnovare il blocco su di esso.
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Visualizza il numero desiderato di messaggi attivi (incluso con rinviata ma non i messaggi non recapitabile) rispetto al numero di sequenza specificata.
      - A differenza di una `received` messaggio `peeked` messaggio è una versione di sola lettura del messaggio.
      Non può essere `Completed/Abandoned/Deferred/Deadlettered`. Non è possibile rinnovare il blocco su di esso.
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: Il numero di sequenza da cui leggere il messaggio.
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: '@azure/service-bus.Sender'
    name: Sender
    spec.typeScript:
      - name: Sender
        fullName: Sender
        uid: '@azure/service-bus.Sender'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'