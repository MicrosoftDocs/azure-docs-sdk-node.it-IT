### YamlMime:UniversalReference
ms.openlocfilehash: c3a850610277a2821743d82a2fcb184890eabd24
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/22/2018
ms.locfileid: "41702078"
items:
- uid: '@azure/cosmos.UserDefinedFunctions'
  name: UserDefinedFunctions
  fullName: UserDefinedFunctions
  children:
  - '@azure/cosmos.UserDefinedFunctions.container'
  - '@azure/cosmos.UserDefinedFunctions.create'
  - '@azure/cosmos.UserDefinedFunctions.query'
  - '@azure/cosmos.UserDefinedFunctions.readAll'
  - '@azure/cosmos.UserDefinedFunctions.upsert'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="c9e11-101">Consente di creare, upsert, eseguire una query o leggere tutte le funzioni definite dall'utente.</span><span class="sxs-lookup"><span data-stu-id="c9e11-101">Used to create, upsert, query, or read all User Defined Functions.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.UserDefinedFunctions.container'
  name: container
  fullName: container
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'container: Container'
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.UserDefinedFunctions.create'
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: >+
    <span data-ttu-id="c9e11-102">Creare un UserDefinedFunction.</span><span class="sxs-lookup"><span data-stu-id="c9e11-102">Create a UserDefinedFunction.</span></span>

    <span data-ttu-id="c9e11-103">Azure Cosmos DB supporta funzioni UDF di JavaScript che possono essere usati all'interno di query, stored procedure e trigger.</span><span class="sxs-lookup"><span data-stu-id="c9e11-103">Azure Cosmos DB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers.</span></span>


    <span data-ttu-id="c9e11-104">Per altre informazioni, vedere la documentazione dell'API JavaScript lato server.</span><span class="sxs-lookup"><span data-stu-id="c9e11-104">For additional details, refer to the server-side JavaScript API documentation.</span></span>

  syntax:
    content: 'function create(body: UserDefinedFunctionDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.UserDefinedFunctionDefinition'
      description: ''
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.UserDefinedFunctionResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.UserDefinedFunctions.query'
  name: query
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c9e11-105">Eseguire una query tutte le funzioni definite dall'utente.</span><span class="sxs-lookup"><span data-stu-id="c9e11-105">Query all User Defined Functions.</span></span>
  syntax:
    content: 'function query(query: SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - '@azure/cosmos.SqlQuerySpec'
      description: <span data-ttu-id="c9e11-106">Configurazione di query per l'operazione.</span><span class="sxs-lookup"><span data-stu-id="c9e11-106">Query configuration for the operation.</span></span> <span data-ttu-id="c9e11-107">Vedere <xref:SqlQuerySpec> per altre informazioni su come configurare una query.</span><span class="sxs-lookup"><span data-stu-id="c9e11-107">See <xref:SqlQuerySpec> for more info on how to configure a query.</span></span>
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: "\n"
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.UserDefinedFunctionDefinition>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.UserDefinedFunctions.readAll'
  name: readAll
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c9e11-108">Leggere tutte le funzioni definite dall'utente.</span><span class="sxs-lookup"><span data-stu-id="c9e11-108">Read all User Defined Functions.</span></span>
  syntax:
    content: 'function readAll(options?: FeedOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.UserDefinedFunctionDefinition>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.UserDefinedFunctions.upsert'
  name: upsert
  children: []
  type: method
  langs:
  - typeScript
  summary: >+
    <span data-ttu-id="c9e11-109">Upsert UserDefinedFunction.</span><span class="sxs-lookup"><span data-stu-id="c9e11-109">Upsert a UserDefinedFunction.</span></span>

    <span data-ttu-id="c9e11-110">Azure Cosmos DB supporta funzioni UDF di JavaScript che possono essere usati all'interno di query, stored procedure e trigger.</span><span class="sxs-lookup"><span data-stu-id="c9e11-110">Azure Cosmos DB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers.</span></span>


    <span data-ttu-id="c9e11-111">Per altre informazioni, vedere la documentazione dell'API JavaScript lato server.</span><span class="sxs-lookup"><span data-stu-id="c9e11-111">For additional details, refer to the server-side JavaScript API documentation.</span></span>

  syntax:
    content: 'function upsert(body: UserDefinedFunctionDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.UserDefinedFunctionDefinition'
      description: ''
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.UserDefinedFunctionResponse>
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Container'
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.UserDefinedFunctionDefinition'
  spec.typeScript:
  - name: UserDefinedFunctionDefinition
    fullName: UserDefinedFunctionDefinition
    uid: '@azure/cosmos.UserDefinedFunctionDefinition'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.UserDefinedFunctionResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: UserDefinedFunctionResponse
    fullName: UserDefinedFunctionResponse
    uid: '@azure/cosmos.UserDefinedFunctionResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.SqlQuerySpec'
  spec.typeScript:
  - name: SqlQuerySpec
    fullName: SqlQuerySpec
    uid: '@azure/cosmos.SqlQuerySpec'
- uid: '@azure/cosmos.FeedOptions'
  spec.typeScript:
  - name: FeedOptions
    fullName: FeedOptions
    uid: '@azure/cosmos.FeedOptions'
- uid: '@azure/cosmos.QueryIterator<@azure/cosmos.UserDefinedFunctionDefinition>'
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <
    fullName: <
  - name: UserDefinedFunctionDefinition
    fullName: UserDefinedFunctionDefinition
    uid: '@azure/cosmos.UserDefinedFunctionDefinition'
  - name: '>'
    fullName: '>'
