### YamlMime:UniversalReference
ms.openlocfilehash: 4a7b31531596d279916e06f31fad35eae76ba216
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/22/2018
ms.locfileid: "41695936"
items:
- uid: '@azure/cosmos.Conflict'
  name: Conflict
  fullName: Conflict
  children:
  - '@azure/cosmos.Conflict.container'
  - '@azure/cosmos.Conflict.delete'
  - '@azure/cosmos.Conflict.id'
  - '@azure/cosmos.Conflict.read'
  - '@azure/cosmos.Conflict.url'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="20358-101">Consente di leggere o eliminare un determinato <xref:Conflict> dall'id.</span><span class="sxs-lookup"><span data-stu-id="20358-101">Use to read or delete a given <xref:Conflict> by id.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Conflict.container'
  name: container
  fullName: container
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'container: Container'
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Conflict.delete'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="20358-102">Eliminare il determinato <xref:ConflictDefinition>.</span><span class="sxs-lookup"><span data-stu-id="20358-102">Delete the given <xref:ConflictDefinition>.</span></span>
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ConflictResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Conflict.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Conflict.read'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="20358-103">Leggere il <xref:ConflictDefinition> per il determinato <xref:Conflict>.</span><span class="sxs-lookup"><span data-stu-id="20358-103">Read the <xref:ConflictDefinition> for the given <xref:Conflict>.</span></span>
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ConflictResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Conflict.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="20358-104">Restituisce un riferimento URL alla risorsa.</span><span class="sxs-lookup"><span data-stu-id="20358-104">Returns a reference URL to the resource.</span></span> <span data-ttu-id="20358-105">Utilizzato per il collegamento nelle autorizzazioni.</span><span class="sxs-lookup"><span data-stu-id="20358-105">Used for linking in Permissions.</span></span>
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Container'
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.ConflictResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ConflictResponse
    fullName: ConflictResponse
    uid: '@azure/cosmos.ConflictResponse'
  - name: '>'
    fullName: '>'
