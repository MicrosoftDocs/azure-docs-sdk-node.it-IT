### YamlMime:UniversalReference
ms.openlocfilehash: b6cf265e32d99a6a28606ac1567c131562ffb51b
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 12/13/2018
ms.locfileid: "52089396"
items:
- uid: '@azure/cosmos.Users'
  name: Users
  fullName: Users
  children:
  - '@azure/cosmos.Users.create'
  - '@azure/cosmos.Users.database'
  - '@azure/cosmos.Users.query'
  - '@azure/cosmos.Users.query_1'
  - '@azure/cosmos.Users.readAll'
  - '@azure/cosmos.Users.upsert'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="d0692-101">Consente di creare, upsert, eseguire una query e leggere tutti gli utenti.</span><span class="sxs-lookup"><span data-stu-id="d0692-101">Used to create, upsert, query, and read all users.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.create'
  name: create(UserDefinition, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d0692-102">Creare un utente del database con la propriet√† specificata <xref:UserDefinition>.</span><span class="sxs-lookup"><span data-stu-id="d0692-102">Create a database user with the specified <xref:UserDefinition>.</span></span>
  syntax:
    content: 'function create(body: UserDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.UserDefinition'
      description: <span data-ttu-id="d0692-103">L'oggetto specificato <xref:UserDefinition>.</span><span class="sxs-lookup"><span data-stu-id="d0692-103">The specified <xref:UserDefinition>.</span></span>
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.UserResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.database'
  name: database
  fullName: database
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'database: Database'
    return:
      type:
      - '@azure/cosmos.Database'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.query'
  name: query(SqlQuerySpec, FeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d0692-104">Interroga tutti gli utenti.</span><span class="sxs-lookup"><span data-stu-id="d0692-104">Query all users.</span></span>
  syntax:
    content: 'function query(query: SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - '@azure/cosmos.SqlQuerySpec'
      description: <span data-ttu-id="d0692-105">Configurazione di query per l'operazione.</span><span class="sxs-lookup"><span data-stu-id="d0692-105">Query configuration for the operation.</span></span> <span data-ttu-id="d0692-106">Vedere <xref:SqlQuerySpec> per altre informazioni su come configurare una query.</span><span class="sxs-lookup"><span data-stu-id="d0692-106">See <xref:SqlQuerySpec> for more info on how to configure a query.</span></span>
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: "\n"
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<any>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.query_1'
  name: query(SqlQuerySpec, FeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d0692-107">Interroga tutti gli utenti.</span><span class="sxs-lookup"><span data-stu-id="d0692-107">Query all users.</span></span>
  syntax:
    content: 'function query<T>(query: SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - '@azure/cosmos.SqlQuerySpec'
      description: <span data-ttu-id="d0692-108">Configurazione di query per l'operazione.</span><span class="sxs-lookup"><span data-stu-id="d0692-108">Query configuration for the operation.</span></span> <span data-ttu-id="d0692-109">Vedere <xref:SqlQuerySpec> per altre informazioni su come configurare una query.</span><span class="sxs-lookup"><span data-stu-id="d0692-109">See <xref:SqlQuerySpec> for more info on how to configure a query.</span></span>
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: "\n"
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<T>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.readAll'
  name: readAll(FeedOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d0692-110">Leggere tutti gli utenti.</span><span class="sxs-lookup"><span data-stu-id="d0692-110">Read all users.</span></span>
  syntax:
    content: 'function readAll(options?: FeedOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.UserDefinition & @azure/cosmos.Resource>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Users.upsert'
  name: upsert(UserDefinition, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d0692-111">Upsert utente del database con un determinato <xref:UserDefinition>.</span><span class="sxs-lookup"><span data-stu-id="d0692-111">Upsert a database user with a specified <xref:UserDefinition>.</span></span>
  syntax:
    content: 'function upsert(body: UserDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.UserDefinition'
      description: <span data-ttu-id="d0692-112">L'oggetto specificato <xref:UserDefinition>.</span><span class="sxs-lookup"><span data-stu-id="d0692-112">The specified <xref:UserDefinition>.</span></span>
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.UserResponse>
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Database'
  name: Database
  spec.typeScript:
  - name: Database
    fullName: Database
    uid: '@azure/cosmos.Database'
- uid: '@azure/cosmos.UserDefinition'
  name: UserDefinition
  spec.typeScript:
  - name: UserDefinition
    fullName: UserDefinition
    uid: '@azure/cosmos.UserDefinition'
- uid: '@azure/cosmos.RequestOptions'
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.UserResponse>
  name: UserResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: UserResponse
    fullName: UserResponse
    uid: '@azure/cosmos.UserResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.SqlQuerySpec'
  name: SqlQuerySpec
  spec.typeScript:
  - name: SqlQuerySpec
    fullName: SqlQuerySpec
    uid: '@azure/cosmos.SqlQuerySpec'
- uid: '@azure/cosmos.FeedOptions'
  name: FeedOptions
  spec.typeScript:
  - name: FeedOptions
    fullName: FeedOptions
    uid: '@azure/cosmos.FeedOptions'
- uid: '@azure/cosmos.QueryIterator<any>'
  name: QueryIterator<any>
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <any>
    fullName: <any>
- uid: '@azure/cosmos.QueryIterator<T>'
  name: QueryIterator<T>
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <T>
    fullName: <T>
- uid: '@azure/cosmos.QueryIterator<@azure/cosmos.UserDefinition & @azure/cosmos.Resource>'
  name: Resource>
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <
    fullName: <
  - name: UserDefinition
    fullName: UserDefinition
    uid: '@azure/cosmos.UserDefinition'
  - name: " & "
    fullName: " & "
  - name: Resource
    fullName: Resource
    uid: '@azure/cosmos.Resource'
  - name: '>'
    fullName: '>'
