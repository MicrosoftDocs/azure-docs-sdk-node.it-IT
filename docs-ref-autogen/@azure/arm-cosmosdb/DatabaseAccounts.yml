### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts'
    name: DatabaseAccounts
    fullName: DatabaseAccounts
    children:
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginPatch'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.patch'
      - '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="3bb36-101">Classe che rappresenta un DatabaseAccounts.</span><span class="sxs-lookup"><span data-stu-id="3bb36-101">Class representing a DatabaseAccounts.</span></span>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, DatabaseAccountCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-102">Crea o aggiorna un account di database Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-102">Creates or updates an Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, accountName: string, createUpdateParameters: DatabaseAccountCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-103">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-103">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-104">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-104">Cosmos DB database account name.</span></span>
        - id: createUpdateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-105">I parametri da specificare per l'account del database corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-105">The parameters to provide for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraKeyspace'
    name: 'beginCreateUpdateCassandraKeyspace(string, string, string, CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-106">Crea o aggiorna un keyspace Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="3bb36-106">Create or update an Azure Cosmos DB Cassandra keyspace</span></span>
    syntax:
      content: 'function beginCreateUpdateCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, createUpdateCassandraKeyspaceParameters: CassandraKeyspaceCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-107">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-107">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-108">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-108">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-109">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-109">Cosmos DB keyspace name.</span></span>
        - id: createUpdateCassandraKeyspaceParameters
          type:
            - '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-110">I parametri da specificare per il keyspace Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-110">The parameters to provide for the current Cassandra keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraTable'
    name: 'beginCreateUpdateCassandraTable(string, string, string, string, CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-111">Crea o aggiorna una tabella di Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="3bb36-111">Create or update an Azure Cosmos DB Cassandra Table</span></span>
    syntax:
      content: 'function beginCreateUpdateCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, createUpdateCassandraTableParameters: CassandraTableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-112">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-112">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-113">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-113">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-114">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-114">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-115">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-115">Cosmos DB table name.</span></span>
        - id: createUpdateCassandraTableParameters
          type:
            - '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-116">I parametri da specificare per la tabella di Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-116">The parameters to provide for the current Cassandra Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinDatabase'
    name: 'beginCreateUpdateGremlinDatabase(string, string, string, GremlinDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-117">Crea o aggiorna un database di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="3bb36-117">Create or update an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function beginCreateUpdateGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateGremlinDatabaseParameters: GremlinDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-118">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-118">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-119">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-119">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-120">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-120">Cosmos DB database name.</span></span>
        - id: createUpdateGremlinDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-121">I parametri da specificare per il database corrente di Gremlin.</span><span class="sxs-lookup"><span data-stu-id="3bb36-121">The parameters to provide for the current Gremlin database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinGraph'
    name: 'beginCreateUpdateGremlinGraph(string, string, string, string, GremlinGraphCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-122">Crea o aggiorna un grafo di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="3bb36-122">Create or update an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function beginCreateUpdateGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-123">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-123">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-124">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-124">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-125">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-125">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="3bb36-126">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-126">Cosmos DB graph name.</span></span>
        - id: createUpdateGremlinGraphParameters
          type:
            - '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-127">I parametri da specificare per il grafico di Gremlin corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-127">The parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBCollection'
    name: 'beginCreateUpdateMongoDBCollection(string, string, string, string, MongoDBCollectionCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-128">Crea o aggiorna una raccolta MongoDB di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="3bb36-128">Create or update an Azure Cosmos DB MongoDB Collection</span></span>
    syntax:
      content: 'function beginCreateUpdateMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, createUpdateMongoDBCollectionParameters: MongoDBCollectionCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-129">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-129">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-130">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-130">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-131">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-131">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="3bb36-132">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-132">Cosmos DB collection name.</span></span>
        - id: createUpdateMongoDBCollectionParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-133">I parametri da specificare per la raccolta corrente di MongoDB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-133">The parameters to provide for the current MongoDB Collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBDatabase'
    name: 'beginCreateUpdateMongoDBDatabase(string, string, string, MongoDBDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-134">Crea o aggiorna il database di Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="3bb36-134">Create or updates Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function beginCreateUpdateMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateMongoDBDatabaseParameters: MongoDBDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-135">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-135">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-136">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-136">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-137">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-137">Cosmos DB database name.</span></span>
        - id: createUpdateMongoDBDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-138">I parametri da specificare per il database MongoDB corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-138">The parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlContainer'
    name: 'beginCreateUpdateSqlContainer(string, string, string, string, SqlContainerCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-139">Crea o aggiorna un contenitore di Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="3bb36-139">Create or update an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function beginCreateUpdateSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, createUpdateSqlContainerParameters: SqlContainerCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-140">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-140">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-141">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-141">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-142">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-142">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="3bb36-143">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-143">Cosmos DB container name.</span></span>
        - id: createUpdateSqlContainerParameters
          type:
            - '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-144">I parametri da specificare per il contenitore SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-144">The parameters to provide for the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlDatabase'
    name: 'beginCreateUpdateSqlDatabase(string, string, string, SqlDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-145">Crea o aggiorna un database SQL di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="3bb36-145">Create or update an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function beginCreateUpdateSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateSqlDatabaseParameters: SqlDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-146">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-146">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-147">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-147">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-148">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-148">Cosmos DB database name.</span></span>
        - id: createUpdateSqlDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-149">I parametri da specificare per il database SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-149">The parameters to provide for the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateTable'
    name: 'beginCreateUpdateTable(string, string, string, TableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-150">Crea o aggiorna una tabella di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="3bb36-150">Create or update an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function beginCreateUpdateTable(resourceGroupName: string, accountName: string, tableName: string, createUpdateTableParameters: TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-151">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-151">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-152">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-152">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-153">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-153">Cosmos DB table name.</span></span>
        - id: createUpdateTableParameters
          type:
            - '@azure/arm-cosmosdb.TableCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-154">I parametri da specificare per la tabella corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-154">The parameters to provide for the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraKeyspace'
    name: 'beginDeleteCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-155">Elimina un keyspace Cassandra di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-155">Deletes an existing Azure Cosmos DB Cassandra keyspace.</span></span>
    syntax:
      content: 'function beginDeleteCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-156">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-156">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-157">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-157">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-158">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-158">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraTable'
    name: 'beginDeleteCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-159">Elimina una tabella di Cassandra di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-159">Deletes an existing Azure Cosmos DB Cassandra table.</span></span>
    syntax:
      content: 'function beginDeleteCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-160">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-160">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-161">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-161">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-162">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-162">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-163">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-163">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinDatabase'
    name: 'beginDeleteGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-164">Elimina un database di Azure Cosmos DB Gremlin esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-164">Deletes an existing Azure Cosmos DB Gremlin database.</span></span>
    syntax:
      content: 'function beginDeleteGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-165">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-165">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-166">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-166">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-167">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-167">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinGraph'
    name: 'beginDeleteGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-168">Elimina un grafico esistente di Azure Cosmos DB Gremlin.</span><span class="sxs-lookup"><span data-stu-id="3bb36-168">Deletes an existing Azure Cosmos DB Gremlin graph.</span></span>
    syntax:
      content: 'function beginDeleteGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-169">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-169">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-170">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-170">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-171">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-171">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="3bb36-172">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-172">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-173">Elimina un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-173">Deletes an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-174">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-174">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-175">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-175">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBCollection'
    name: 'beginDeleteMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-176">Elimina una raccolta di MongoDB di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-176">Deletes an existing Azure Cosmos DB MongoDB Collection.</span></span>
    syntax:
      content: 'function beginDeleteMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-177">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-177">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-178">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-178">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-179">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-179">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="3bb36-180">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-180">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBDatabase'
    name: 'beginDeleteMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-181">Elimina un database di Azure Cosmos DB MongoDB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-181">Deletes an existing Azure Cosmos DB MongoDB database.</span></span>
    syntax:
      content: 'function beginDeleteMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-182">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-182">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-183">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-183">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-184">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-184">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlContainer'
    name: 'beginDeleteSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-185">Elimina un contenitore di Azure Cosmos DB SQL esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-185">Deletes an existing Azure Cosmos DB SQL container.</span></span>
    syntax:
      content: 'function beginDeleteSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-186">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-186">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-187">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-187">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-188">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-188">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="3bb36-189">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-189">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlDatabase'
    name: 'beginDeleteSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-190">Elimina un database SQL di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-190">Deletes an existing Azure Cosmos DB SQL database.</span></span>
    syntax:
      content: 'function beginDeleteSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-191">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-191">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-192">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-192">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-193">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-193">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteTable'
    name: 'beginDeleteTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-194">Elimina una tabella di DB Cosmos Azure esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-194">Deletes an existing Azure Cosmos DB Table.</span></span>
    syntax:
      content: 'function beginDeleteTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-195">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-195">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-196">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-196">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-197">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-197">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
    name: 'beginFailoverPriorityChange(string, string, FailoverPolicies, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-198">Modifica la priorità di failover per l'account di database Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-198">Changes the failover priority for the Azure Cosmos DB database account.</span></span> <span data-ttu-id="3bb36-199">Una priorità di failover pari a 0 indica un'area di scrittura.</span><span class="sxs-lookup"><span data-stu-id="3bb36-199">A failover priority of 0 indicates a write region.</span></span> <span data-ttu-id="3bb36-200">Il valore massimo per una priorità di failover = (numero totale di aree di-1).</span><span class="sxs-lookup"><span data-stu-id="3bb36-200">The maximum value for a failover priority = (total number of regions - 1).</span></span> <span data-ttu-id="3bb36-201">I valori di priorità di failover devono essere univoci per ogni area in cui si trova l'account del database.</span><span class="sxs-lookup"><span data-stu-id="3bb36-201">Failover priority values must be unique for each of the regions in which the database account exists.</span></span>
    syntax:
      content: 'function beginFailoverPriorityChange(resourceGroupName: string, accountName: string, failoverParameters: FailoverPolicies, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-202">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-202">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-203">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-203">Cosmos DB database account name.</span></span>
        - id: failoverParameters
          type:
            - '@azure/arm-cosmosdb.FailoverPolicies'
          description: <span data-ttu-id="3bb36-204">I nuovi criteri di failover per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="3bb36-204">The new failover policies for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
    name: 'beginOfflineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-205">Account del database non in linea l'area specificata per Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-205">Offline the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginOfflineRegion(resourceGroupName: string, accountName: string, regionParameterForOffline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-206">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-206">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-207">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-207">Cosmos DB database account name.</span></span>
        - id: regionParameterForOffline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="3bb36-208">Area di COSMOS DB non in linea per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="3bb36-208">Cosmos DB region to offline for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
    name: 'beginOnlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-209">Account del database online l'area specificata per Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-209">Online the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginOnlineRegion(resourceGroupName: string, accountName: string, regionParameterForOnline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-210">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-210">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-211">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-211">Cosmos DB database account name.</span></span>
        - id: regionParameterForOnline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="3bb36-212">Area di COSMOS DB da online per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="3bb36-212">Cosmos DB region to online for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginPatch'
    name: 'beginPatch(string, string, DatabaseAccountPatchParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-213">Corregge le proprietà di un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-213">Patches the properties of an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginPatch(resourceGroupName: string, accountName: string, updateParameters: DatabaseAccountPatchParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-214">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-214">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-215">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-215">Cosmos DB database account name.</span></span>
        - id: updateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
          description: <span data-ttu-id="3bb36-216">Il parametro tag patch per l'account del database corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-216">The tags parameter to patch for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
    name: 'beginRegenerateKey(string, string, DatabaseAccountRegenerateKeyParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-217">Rigenera una chiave di accesso per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-217">Regenerates an access key for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginRegenerateKey(resourceGroupName: string, accountName: string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-218">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-218">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-219">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-219">Cosmos DB database account name.</span></span>
        - id: keyToRegenerate
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
          description: <span data-ttu-id="3bb36-220">Il nome della chiave da rigenerare.</span><span class="sxs-lookup"><span data-stu-id="3bb36-220">The name of the key to regenerate.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
    name: 'checkNameExists(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="3bb36-221">Verifica che il nome dell''account Azure Cosmos DB esiste già.</span><span class="sxs-lookup"><span data-stu-id="3bb36-221">Checks that the Azure Cosmos DB account name already exists.</span></span> <span data-ttu-id="3bb36-222">Un nome di account valido può contenere solo lettere minuscole lettere, numeri e ''-'' di caratteri e deve essere compresa tra 3 e 50 caratteri.</span><span class="sxs-lookup"><span data-stu-id="3bb36-222">A valid account name may contain only lowercase letters, numbers, and the ''-'' character, and must be between 3 and 50 characters.</span></span>'
    syntax:
      content: 'function checkNameExists(accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-223">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-223">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
    name: 'checkNameExists(string, RequestOptionsBase, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameExists(accountName: string, options: RequestOptionsBase, callback: ServiceCallback<boolean>)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-224">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-224">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-225">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-225">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            <span data-ttu-id="3bb36-226">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-226">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
    name: 'checkNameExists(string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameExists(accountName: string, callback: ServiceCallback<boolean>)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-227">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-227">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            <span data-ttu-id="3bb36-228">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-228">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
    name: 'createOrUpdate(string, string, DatabaseAccountCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-229">Crea o aggiorna un account di database Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-229">Creates or updates an Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, accountName: string, createUpdateParameters: DatabaseAccountCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-230">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-230">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-231">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-231">Cosmos DB database account name.</span></span>
        - id: createUpdateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-232">I parametri da specificare per l'account del database corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-232">The parameters to provide for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateOrUpdateResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraKeyspace'
    name: 'createUpdateCassandraKeyspace(string, string, string, CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-233">Crea o aggiorna un keyspace Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="3bb36-233">Create or update an Azure Cosmos DB Cassandra keyspace</span></span>
    syntax:
      content: 'function createUpdateCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, createUpdateCassandraKeyspaceParameters: CassandraKeyspaceCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-234">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-234">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-235">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-235">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-236">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-236">Cosmos DB keyspace name.</span></span>
        - id: createUpdateCassandraKeyspaceParameters
          type:
            - '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-237">I parametri da specificare per il keyspace Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-237">The parameters to provide for the current Cassandra keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraTable'
    name: 'createUpdateCassandraTable(string, string, string, string, CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-238">Crea o aggiorna una tabella di Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="3bb36-238">Create or update an Azure Cosmos DB Cassandra Table</span></span>
    syntax:
      content: 'function createUpdateCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, createUpdateCassandraTableParameters: CassandraTableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-239">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-239">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-240">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-240">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-241">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-241">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-242">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-242">Cosmos DB table name.</span></span>
        - id: createUpdateCassandraTableParameters
          type:
            - '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-243">I parametri da specificare per la tabella di Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-243">The parameters to provide for the current Cassandra Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinDatabase'
    name: 'createUpdateGremlinDatabase(string, string, string, GremlinDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-244">Crea o aggiorna un database di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="3bb36-244">Create or update an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function createUpdateGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateGremlinDatabaseParameters: GremlinDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-245">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-245">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-246">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-246">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-247">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-247">Cosmos DB database name.</span></span>
        - id: createUpdateGremlinDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-248">I parametri da specificare per il database corrente di Gremlin.</span><span class="sxs-lookup"><span data-stu-id="3bb36-248">The parameters to provide for the current Gremlin database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinGraph'
    name: 'createUpdateGremlinGraph(string, string, string, string, GremlinGraphCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-249">Crea o aggiorna un grafo di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="3bb36-249">Create or update an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function createUpdateGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-250">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-250">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-251">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-251">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-252">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-252">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="3bb36-253">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-253">Cosmos DB graph name.</span></span>
        - id: createUpdateGremlinGraphParameters
          type:
            - '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-254">I parametri da specificare per il grafico di Gremlin corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-254">The parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBCollection'
    name: 'createUpdateMongoDBCollection(string, string, string, string, MongoDBCollectionCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-255">Crea o aggiorna una raccolta MongoDB di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="3bb36-255">Create or update an Azure Cosmos DB MongoDB Collection</span></span>
    syntax:
      content: 'function createUpdateMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, createUpdateMongoDBCollectionParameters: MongoDBCollectionCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-256">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-256">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-257">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-257">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-258">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-258">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="3bb36-259">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-259">Cosmos DB collection name.</span></span>
        - id: createUpdateMongoDBCollectionParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-260">I parametri da specificare per la raccolta corrente di MongoDB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-260">The parameters to provide for the current MongoDB Collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBDatabase'
    name: 'createUpdateMongoDBDatabase(string, string, string, MongoDBDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-261">Crea o aggiorna il database di Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="3bb36-261">Create or updates Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function createUpdateMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateMongoDBDatabaseParameters: MongoDBDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-262">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-262">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-263">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-263">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-264">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-264">Cosmos DB database name.</span></span>
        - id: createUpdateMongoDBDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-265">I parametri da specificare per il database MongoDB corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-265">The parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlContainer'
    name: 'createUpdateSqlContainer(string, string, string, string, SqlContainerCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-266">Crea o aggiorna un contenitore di Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="3bb36-266">Create or update an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function createUpdateSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, createUpdateSqlContainerParameters: SqlContainerCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-267">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-267">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-268">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-268">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-269">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-269">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="3bb36-270">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-270">Cosmos DB container name.</span></span>
        - id: createUpdateSqlContainerParameters
          type:
            - '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-271">I parametri da specificare per il contenitore SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-271">The parameters to provide for the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlDatabase'
    name: 'createUpdateSqlDatabase(string, string, string, SqlDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-272">Crea o aggiorna un database SQL di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="3bb36-272">Create or update an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function createUpdateSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateSqlDatabaseParameters: SqlDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-273">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-273">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-274">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-274">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-275">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-275">Cosmos DB database name.</span></span>
        - id: createUpdateSqlDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-276">I parametri da specificare per il database SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-276">The parameters to provide for the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateTable'
    name: 'createUpdateTable(string, string, string, TableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-277">Crea o aggiorna una tabella di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="3bb36-277">Create or update an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function createUpdateTable(resourceGroupName: string, accountName: string, tableName: string, createUpdateTableParameters: TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-278">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-278">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-279">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-279">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-280">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-280">Cosmos DB table name.</span></span>
        - id: createUpdateTableParameters
          type:
            - '@azure/arm-cosmosdb.TableCreateUpdateParameters'
          description: <span data-ttu-id="3bb36-281">I parametri da specificare per la tabella corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-281">The parameters to provide for the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
    name: DatabaseAccounts(CosmosDBManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-282">Creare un DatabaseAccounts.</span><span class="sxs-lookup"><span data-stu-id="3bb36-282">Create a DatabaseAccounts.</span></span>
    syntax:
      content: 'new DatabaseAccounts(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
          description: |
            <span data-ttu-id="3bb36-283">Riferimento al client del servizio.</span><span class="sxs-lookup"><span data-stu-id="3bb36-283">Reference to the service client.</span></span>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraKeyspace'
    name: 'deleteCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-284">Elimina un keyspace Cassandra di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-284">Deletes an existing Azure Cosmos DB Cassandra keyspace.</span></span>
    syntax:
      content: 'function deleteCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-285">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-285">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-286">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-286">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-287">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-287">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraTable'
    name: 'deleteCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-288">Elimina una tabella di Cassandra di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-288">Deletes an existing Azure Cosmos DB Cassandra table.</span></span>
    syntax:
      content: 'function deleteCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-289">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-289">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-290">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-290">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-291">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-291">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-292">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-292">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinDatabase'
    name: 'deleteGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-293">Elimina un database di Azure Cosmos DB Gremlin esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-293">Deletes an existing Azure Cosmos DB Gremlin database.</span></span>
    syntax:
      content: 'function deleteGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-294">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-294">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-295">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-295">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-296">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-296">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinGraph'
    name: 'deleteGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-297">Elimina un grafico esistente di Azure Cosmos DB Gremlin.</span><span class="sxs-lookup"><span data-stu-id="3bb36-297">Deletes an existing Azure Cosmos DB Gremlin graph.</span></span>
    syntax:
      content: 'function deleteGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-298">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-298">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-299">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-299">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-300">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-300">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="3bb36-301">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-301">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-302">Elimina un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-302">Deletes an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-303">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-303">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-304">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-304">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBCollection'
    name: 'deleteMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-305">Elimina una raccolta di MongoDB di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-305">Deletes an existing Azure Cosmos DB MongoDB Collection.</span></span>
    syntax:
      content: 'function deleteMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-306">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-306">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-307">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-307">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-308">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-308">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="3bb36-309">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-309">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBDatabase'
    name: 'deleteMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-310">Elimina un database di Azure Cosmos DB MongoDB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-310">Deletes an existing Azure Cosmos DB MongoDB database.</span></span>
    syntax:
      content: 'function deleteMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-311">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-311">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-312">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-312">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-313">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-313">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlContainer'
    name: 'deleteSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-314">Elimina un contenitore di Azure Cosmos DB SQL esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-314">Deletes an existing Azure Cosmos DB SQL container.</span></span>
    syntax:
      content: 'function deleteSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-315">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-315">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-316">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-316">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-317">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-317">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="3bb36-318">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-318">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlDatabase'
    name: 'deleteSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-319">Elimina un database SQL di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-319">Deletes an existing Azure Cosmos DB SQL database.</span></span>
    syntax:
      content: 'function deleteSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-320">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-320">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-321">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-321">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-322">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-322">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteTable'
    name: 'deleteTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-323">Elimina una tabella di DB Cosmos Azure esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-323">Deletes an existing Azure Cosmos DB Table.</span></span>
    syntax:
      content: 'function deleteTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-324">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-324">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-325">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-325">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-326">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-326">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
    name: 'failoverPriorityChange(string, string, FailoverPolicies, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-327">Modifica la priorità di failover per l'account di database Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-327">Changes the failover priority for the Azure Cosmos DB database account.</span></span> <span data-ttu-id="3bb36-328">Una priorità di failover pari a 0 indica un'area di scrittura.</span><span class="sxs-lookup"><span data-stu-id="3bb36-328">A failover priority of 0 indicates a write region.</span></span> <span data-ttu-id="3bb36-329">Il valore massimo per una priorità di failover = (numero totale di aree di-1).</span><span class="sxs-lookup"><span data-stu-id="3bb36-329">The maximum value for a failover priority = (total number of regions - 1).</span></span> <span data-ttu-id="3bb36-330">I valori di priorità di failover devono essere univoci per ogni area in cui si trova l'account del database.</span><span class="sxs-lookup"><span data-stu-id="3bb36-330">Failover priority values must be unique for each of the regions in which the database account exists.</span></span>
    syntax:
      content: 'function failoverPriorityChange(resourceGroupName: string, accountName: string, failoverParameters: FailoverPolicies, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-331">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-331">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-332">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-332">Cosmos DB database account name.</span></span>
        - id: failoverParameters
          type:
            - '@azure/arm-cosmosdb.FailoverPolicies'
          description: <span data-ttu-id="3bb36-333">I nuovi criteri di failover per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="3bb36-333">The new failover policies for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-334">Recupera le proprietà di un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-334">Retrieves the properties of an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-335">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-335">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-336">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-336">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-337">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-337">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-338">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-338">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-339">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-339">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
          description: |
            <span data-ttu-id="3bb36-340">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-340">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
    name: 'get(string, string, ServiceCallback<DatabaseAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-341">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-341">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-342">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-342">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
          description: |
            <span data-ttu-id="3bb36-343">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-343">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace'
    name: 'getCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-344">Ottiene lo spazi di Cassandra in un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="3bb36-344">Gets the Cassandra keyspaces under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-345">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-345">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-346">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-346">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-347">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-347">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_2'
    name: 'getCassandraKeyspace(string, string, string, RequestOptionsBase, ServiceCallback<CassandraKeyspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraKeyspace>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-348">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-348">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-349">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-349">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-350">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-350">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-351">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-351">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
          description: |
            <span data-ttu-id="3bb36-352">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-352">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_1'
    name: 'getCassandraKeyspace(string, string, string, ServiceCallback<CassandraKeyspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<CassandraKeyspace>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-353">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-353">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-354">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-354">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-355">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-355">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
          description: |
            <span data-ttu-id="3bb36-356">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-356">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable'
    name: 'getCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-357">Ottiene la tabella di Cassandra in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-357">Gets the Cassandra table under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-358">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-358">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-359">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-359">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-360">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-360">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-361">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-361">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_2'
    name: 'getCassandraTable(string, string, string, string, RequestOptionsBase, ServiceCallback<CassandraTable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraTable>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-362">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-362">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-363">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-363">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-364">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-364">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-365">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-365">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-366">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-366">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
          description: |
            <span data-ttu-id="3bb36-367">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-367">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_1'
    name: 'getCassandraTable(string, string, string, string, ServiceCallback<CassandraTable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, callback: ServiceCallback<CassandraTable>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-368">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-368">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-369">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-369">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-370">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-370">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-371">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-371">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
          description: |
            <span data-ttu-id="3bb36-372">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-372">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase'
    name: 'getGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-373">Ottiene i database Gremlin con un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="3bb36-373">Gets the Gremlin databases under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-374">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-374">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-375">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-375">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-376">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-376">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_2'
    name: 'getGremlinDatabase(string, string, string, RequestOptionsBase, ServiceCallback<GremlinDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-377">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-377">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-378">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-378">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-379">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-379">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-380">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-380">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
          description: |
            <span data-ttu-id="3bb36-381">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-381">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_1'
    name: 'getGremlinDatabase(string, string, string, ServiceCallback<GremlinDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<GremlinDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-382">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-382">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-383">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-383">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-384">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-384">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
          description: |
            <span data-ttu-id="3bb36-385">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-385">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph'
    name: 'getGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-386">Ottiene il grafico di Gremlin con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-386">Gets the Gremlin graph under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-387">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-387">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-388">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-388">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-389">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-389">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="3bb36-390">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-390">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_2'
    name: 'getGremlinGraph(string, string, string, string, RequestOptionsBase, ServiceCallback<GremlinGraph>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinGraph>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-391">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-391">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-392">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-392">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-393">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-393">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="3bb36-394">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-394">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-395">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-395">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
          description: |
            <span data-ttu-id="3bb36-396">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-396">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_1'
    name: 'getGremlinGraph(string, string, string, string, ServiceCallback<GremlinGraph>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, callback: ServiceCallback<GremlinGraph>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-397">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-397">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-398">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-398">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-399">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-399">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="3bb36-400">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-400">Cosmos DB graph name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
          description: |
            <span data-ttu-id="3bb36-401">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-401">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection'
    name: 'getMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-402">Ottiene la raccolta MongoDB con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-402">Gets the MongoDB collection under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-403">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-403">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-404">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-404">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-405">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-405">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="3bb36-406">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-406">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_2'
    name: 'getMongoDBCollection(string, string, string, string, RequestOptionsBase, ServiceCallback<MongoDBCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-407">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-407">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-408">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-408">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-409">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-409">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="3bb36-410">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-410">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-411">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-411">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
          description: |
            <span data-ttu-id="3bb36-412">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-412">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_1'
    name: 'getMongoDBCollection(string, string, string, string, ServiceCallback<MongoDBCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, callback: ServiceCallback<MongoDBCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-413">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-413">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-414">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-414">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-415">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-415">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="3bb36-416">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-416">Cosmos DB collection name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
          description: |
            <span data-ttu-id="3bb36-417">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-417">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase'
    name: 'getMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-418">Ottiene i database di MongoDB in un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="3bb36-418">Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-419">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-419">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-420">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-420">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-421">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-421">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_2'
    name: 'getMongoDBDatabase(string, string, string, RequestOptionsBase, ServiceCallback<MongoDBDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-422">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-422">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-423">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-423">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-424">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-424">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-425">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-425">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
          description: |
            <span data-ttu-id="3bb36-426">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-426">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_1'
    name: 'getMongoDBDatabase(string, string, string, ServiceCallback<MongoDBDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<MongoDBDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-427">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-427">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-428">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-428">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-429">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-429">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
          description: |
            <span data-ttu-id="3bb36-430">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-430">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
    name: 'getReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-431">Elenca le chiavi di accesso in lettura per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-431">Lists the read-only access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-432">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-432">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-433">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-433">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
    name: 'getReadOnlyKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-434">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-434">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-435">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-435">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-436">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-436">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="3bb36-437">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-437">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
    name: 'getReadOnlyKeys(string, string, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-438">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-438">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-439">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-439">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="3bb36-440">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-440">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer'
    name: 'getSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-441">Ottiene il contenitore SQL con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-441">Gets the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-442">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-442">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-443">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-443">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-444">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-444">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="3bb36-445">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-445">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_2'
    name: 'getSqlContainer(string, string, string, string, RequestOptionsBase, ServiceCallback<SqlContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-446">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-446">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-447">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-447">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-448">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-448">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="3bb36-449">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-449">Cosmos DB container name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-450">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-450">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
          description: |
            <span data-ttu-id="3bb36-451">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-451">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_1'
    name: 'getSqlContainer(string, string, string, string, ServiceCallback<SqlContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, callback: ServiceCallback<SqlContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-452">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-452">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-453">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-453">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-454">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-454">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="3bb36-455">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-455">Cosmos DB container name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
          description: |
            <span data-ttu-id="3bb36-456">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-456">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase'
    name: 'getSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-457">Ottiene i database SQL con un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="3bb36-457">Gets the SQL databases under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-458">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-458">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-459">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-459">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-460">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-460">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_2'
    name: 'getSqlDatabase(string, string, string, RequestOptionsBase, ServiceCallback<SqlDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-461">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-461">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-462">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-462">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-463">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-463">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-464">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-464">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
          description: |
            <span data-ttu-id="3bb36-465">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-465">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_1'
    name: 'getSqlDatabase(string, string, string, ServiceCallback<SqlDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<SqlDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-466">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-466">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-467">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-467">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-468">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-468">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
          description: |
            <span data-ttu-id="3bb36-469">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-469">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable'
    name: 'getTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-470">Ottiene le tabelle in un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="3bb36-470">Gets the Tables under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-471">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-471">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-472">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-472">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-473">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-473">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable_2'
    name: 'getTable(string, string, string, RequestOptionsBase, ServiceCallback<Table>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<Table>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-474">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-474">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-475">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-475">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-476">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-476">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-477">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-477">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Table>
          description: |
            <span data-ttu-id="3bb36-478">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-478">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable_1'
    name: 'getTable(string, string, string, ServiceCallback<Table>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, callback: ServiceCallback<Table>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-479">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-479">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-480">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-480">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="3bb36-481">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-481">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Table>
          description: |
            <span data-ttu-id="3bb36-482">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-482">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-483">Elenca tutti gli account di database di Azure Cosmos DB disponibili nella sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="3bb36-483">Lists all the Azure Cosmos DB database accounts available under the subscription.</span></span>
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-484">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-484">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="3bb36-485">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-485">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
    name: list(ServiceCallback<DatabaseAccountsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="3bb36-486">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-486">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-487">Elenca tutti gli account di database di Azure Cosmos DB disponibili nel gruppo di risorse specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-487">Lists all the Azure Cosmos DB database accounts available under the given resource group.</span></span>
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-488">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-488">Name of an Azure resource group.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
    name: 'listByResourceGroup(string, RequestOptionsBase, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-489">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-489">Name of an Azure resource group.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-490">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-490">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="3bb36-491">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-491">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-492">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-492">Name of an Azure resource group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="3bb36-493">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-493">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces'
    name: 'listCassandraKeyspaces(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-494">Elenca lo spazi di Cassandra in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-494">Lists the Cassandra keyspaces under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-495">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-495">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-496">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-496">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_2'
    name: 'listCassandraKeyspaces(string, string, RequestOptionsBase, ServiceCallback<CassandraKeyspaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraKeyspaceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-497">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-497">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-498">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-498">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-499">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-499">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
          description: |
            <span data-ttu-id="3bb36-500">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-500">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_1'
    name: 'listCassandraKeyspaces(string, string, ServiceCallback<CassandraKeyspaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, callback: ServiceCallback<CassandraKeyspaceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-501">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-501">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-502">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-502">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
          description: |
            <span data-ttu-id="3bb36-503">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-503">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables'
    name: 'listCassandraTables(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-504">Sono elencati nella tabella di Cassandra in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-504">Lists the Cassandra table under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-505">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-505">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-506">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-506">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-507">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-507">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_2'
    name: 'listCassandraTables(string, string, string, RequestOptionsBase, ServiceCallback<CassandraTableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraTableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-508">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-508">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-509">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-509">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-510">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-510">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-511">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-511">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
          description: |
            <span data-ttu-id="3bb36-512">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-512">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_1'
    name: 'listCassandraTables(string, string, string, ServiceCallback<CassandraTableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<CassandraTableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-513">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-513">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-514">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-514">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="3bb36-515">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-515">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
          description: |
            <span data-ttu-id="3bb36-516">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-516">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
    name: 'listConnectionStrings(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-517">Elenca le stringhe di connessione per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-517">Lists the connection strings for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-518">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-518">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-519">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-519">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
    name: 'listConnectionStrings(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-520">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-520">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-521">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-521">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-522">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-522">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
          description: |
            <span data-ttu-id="3bb36-523">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-523">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
    name: 'listConnectionStrings(string, string, ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-524">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-524">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-525">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-525">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
          description: |
            <span data-ttu-id="3bb36-526">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-526">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases'
    name: 'listGremlinDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-527">Elenca i database Gremlin con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-527">Lists the Gremlin databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-528">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-528">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-529">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-529">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_2'
    name: 'listGremlinDatabases(string, string, RequestOptionsBase, ServiceCallback<GremlinDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-530">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-530">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-531">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-531">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-532">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-532">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
          description: |
            <span data-ttu-id="3bb36-533">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-533">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_1'
    name: 'listGremlinDatabases(string, string, ServiceCallback<GremlinDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<GremlinDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-534">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-534">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-535">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-535">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
          description: |
            <span data-ttu-id="3bb36-536">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-536">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs'
    name: 'listGremlinGraphs(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-537">Elenca il Gremlin graph con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-537">Lists the Gremlin graph under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-538">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-538">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-539">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-539">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-540">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-540">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_2'
    name: 'listGremlinGraphs(string, string, string, RequestOptionsBase, ServiceCallback<GremlinGraphListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinGraphListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-541">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-541">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-542">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-542">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-543">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-543">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-544">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-544">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
          description: |
            <span data-ttu-id="3bb36-545">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-545">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_1'
    name: 'listGremlinGraphs(string, string, string, ServiceCallback<GremlinGraphListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<GremlinGraphListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-546">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-546">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-547">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-547">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-548">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-548">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
          description: |
            <span data-ttu-id="3bb36-549">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-549">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
    name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-550">Elenca le chiavi di accesso per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-550">Lists the access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-551">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-551">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-552">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-552">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
    name: 'listKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-553">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-553">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-554">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-554">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-555">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-555">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
          description: |
            <span data-ttu-id="3bb36-556">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-556">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
    name: 'listKeys(string, string, ServiceCallback<DatabaseAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-557">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-557">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-558">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-558">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
          description: |
            <span data-ttu-id="3bb36-559">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-559">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
    name: 'listMetricDefinitions(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-560">Recupera le definizioni delle metriche per l'account del database specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-560">Retrieves metric definitions for the given database account.</span></span>
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-561">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-561">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-562">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-562">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
    name: 'listMetricDefinitions(string, string, RequestOptionsBase, ServiceCallback<MetricDefinitionsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<MetricDefinitionsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-563">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-563">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-564">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-564">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-565">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-565">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
          description: |
            <span data-ttu-id="3bb36-566">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-566">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
    name: 'listMetricDefinitions(string, string, ServiceCallback<MetricDefinitionsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, callback: ServiceCallback<MetricDefinitionsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-567">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-567">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-568">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-568">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
          description: |
            <span data-ttu-id="3bb36-569">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-569">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
    name: 'listMetrics(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-570">Recupera le metriche in base al filtro specificato per l'account del database specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-570">Retrieves the metrics determined by the given filter for the given database account.</span></span>
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-571">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-571">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-572">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-572">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="3bb36-573">Un''espressione di filtro OData che descrive un subset delle metriche da restituire.</span><span class="sxs-lookup"><span data-stu-id="3bb36-573">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="3bb36-574">I parametri che possono essere filtrati sono name.value (nome della metrica, può avere un o di più nomi), startTime, endTime e timeGrain.</span><span class="sxs-lookup"><span data-stu-id="3bb36-574">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="3bb36-575">L''operatore supportato è uguale a</span><span class="sxs-lookup"><span data-stu-id="3bb36-575">The supported operator is eq.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
    name: 'listMetrics(string, string, string, RequestOptionsBase, ServiceCallback<MetricListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, options: RequestOptionsBase, callback: ServiceCallback<MetricListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-576">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-576">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-577">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-577">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="3bb36-578">Un''espressione di filtro OData che descrive un subset delle metriche da restituire.</span><span class="sxs-lookup"><span data-stu-id="3bb36-578">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="3bb36-579">I parametri che possono essere filtrati sono name.value (nome della metrica, può avere un o di più nomi), startTime, endTime e timeGrain.</span><span class="sxs-lookup"><span data-stu-id="3bb36-579">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="3bb36-580">L''operatore supportato è uguale a</span><span class="sxs-lookup"><span data-stu-id="3bb36-580">The supported operator is eq.</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-581">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-581">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
          description: |
            <span data-ttu-id="3bb36-582">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-582">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
    name: 'listMetrics(string, string, string, ServiceCallback<MetricListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, callback: ServiceCallback<MetricListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-583">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-583">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-584">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-584">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="3bb36-585">Un''espressione di filtro OData che descrive un subset delle metriche da restituire.</span><span class="sxs-lookup"><span data-stu-id="3bb36-585">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="3bb36-586">I parametri che possono essere filtrati sono name.value (nome della metrica, può avere un o di più nomi), startTime, endTime e timeGrain.</span><span class="sxs-lookup"><span data-stu-id="3bb36-586">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="3bb36-587">L''operatore supportato è uguale a</span><span class="sxs-lookup"><span data-stu-id="3bb36-587">The supported operator is eq.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
          description: |
            <span data-ttu-id="3bb36-588">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-588">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections'
    name: 'listMongoDBCollections(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-589">Elenca la raccolta MongoDB con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-589">Lists the MongoDB collection under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-590">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-590">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-591">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-591">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-592">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-592">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_2'
    name: 'listMongoDBCollections(string, string, string, RequestOptionsBase, ServiceCallback<MongoDBCollectionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBCollectionListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-593">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-593">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-594">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-594">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-595">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-595">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-596">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-596">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
          description: |
            <span data-ttu-id="3bb36-597">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-597">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_1'
    name: 'listMongoDBCollections(string, string, string, ServiceCallback<MongoDBCollectionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<MongoDBCollectionListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-598">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-598">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-599">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-599">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-600">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-600">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
          description: |
            <span data-ttu-id="3bb36-601">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-601">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases'
    name: 'listMongoDBDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-602">Elenca i database di MongoDB in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-602">Lists the MongoDB databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-603">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-603">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-604">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-604">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_2'
    name: 'listMongoDBDatabases(string, string, RequestOptionsBase, ServiceCallback<MongoDBDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-605">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-605">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-606">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-606">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-607">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-607">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
          description: |
            <span data-ttu-id="3bb36-608">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-608">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_1'
    name: 'listMongoDBDatabases(string, string, ServiceCallback<MongoDBDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<MongoDBDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-609">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-609">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-610">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-610">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
          description: |
            <span data-ttu-id="3bb36-611">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-611">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
    name: 'listReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-612">Elenca le chiavi di accesso in lettura per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-612">Lists the read-only access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-613">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-613">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-614">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-614">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
    name: 'listReadOnlyKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-615">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-615">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-616">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-616">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-617">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-617">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="3bb36-618">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-618">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
    name: 'listReadOnlyKeys(string, string, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-619">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-619">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-620">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-620">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="3bb36-621">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-621">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers'
    name: 'listSqlContainers(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-622">Elenca il contenitore SQL con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-622">Lists the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-623">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-623">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-624">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-624">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-625">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-625">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_2'
    name: 'listSqlContainers(string, string, string, RequestOptionsBase, ServiceCallback<SqlContainerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlContainerListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-626">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-626">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-627">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-627">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-628">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-628">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-629">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-629">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
          description: |
            <span data-ttu-id="3bb36-630">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-630">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_1'
    name: 'listSqlContainers(string, string, string, ServiceCallback<SqlContainerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<SqlContainerListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-631">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-631">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-632">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-632">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="3bb36-633">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-633">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
          description: |
            <span data-ttu-id="3bb36-634">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-634">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases'
    name: 'listSqlDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-635">Elenca i database SQL con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-635">Lists the SQL databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-636">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-636">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-637">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-637">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_2'
    name: 'listSqlDatabases(string, string, RequestOptionsBase, ServiceCallback<SqlDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-638">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-638">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-639">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-639">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-640">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-640">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
          description: |
            <span data-ttu-id="3bb36-641">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-641">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_1'
    name: 'listSqlDatabases(string, string, ServiceCallback<SqlDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<SqlDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-642">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-642">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-643">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-643">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
          description: |
            <span data-ttu-id="3bb36-644">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-644">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables'
    name: 'listTables(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-645">Elenca le tabelle in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-645">Lists the Tables under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-646">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-646">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-647">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-647">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables_2'
    name: 'listTables(string, string, RequestOptionsBase, ServiceCallback<TableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<TableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-648">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-648">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-649">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-649">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="3bb36-650">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-650">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableListResult>
          description: |
            <span data-ttu-id="3bb36-651">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-651">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables_1'
    name: 'listTables(string, string, ServiceCallback<TableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, callback: ServiceCallback<TableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-652">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-652">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-653">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-653">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableListResult>
          description: |
            <span data-ttu-id="3bb36-654">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-654">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
    name: 'listUsages(string, string, DatabaseAccountsListUsagesOptionalParams, ServiceCallback<UsagesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, options: DatabaseAccountsListUsagesOptionalParams, callback: ServiceCallback<UsagesResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-655">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-655">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-656">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-656">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
          description: <span data-ttu-id="3bb36-657">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="3bb36-657">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
          description: |
            <span data-ttu-id="3bb36-658">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-658">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
    name: 'listUsages(string, string, Models.DatabaseAccountsListUsagesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-659">Recupera gli utilizzi (dati più recenti) per l'account del database specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-659">Retrieves the usages (most recent data) for the given database account.</span></span>
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, options?: Models.DatabaseAccountsListUsagesOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-660">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-660">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-661">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-661">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - Models.DatabaseAccountsListUsagesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
    name: 'listUsages(string, string, ServiceCallback<UsagesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, callback: ServiceCallback<UsagesResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-662">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-662">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-663">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-663">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
          description: |
            <span data-ttu-id="3bb36-664">Il callback</span><span class="sxs-lookup"><span data-stu-id="3bb36-664">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
    name: 'offlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-665">Account del database non in linea l'area specificata per Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-665">Offline the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function offlineRegion(resourceGroupName: string, accountName: string, regionParameterForOffline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-666">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-666">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-667">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-667">Cosmos DB database account name.</span></span>
        - id: regionParameterForOffline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="3bb36-668">Area di COSMOS DB non in linea per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="3bb36-668">Cosmos DB region to offline for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
    name: 'onlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-669">Account del database online l'area specificata per Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-669">Online the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function onlineRegion(resourceGroupName: string, accountName: string, regionParameterForOnline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-670">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-670">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-671">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-671">Cosmos DB database account name.</span></span>
        - id: regionParameterForOnline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="3bb36-672">Area di COSMOS DB da online per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="3bb36-672">Cosmos DB region to online for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.patch'
    name: 'patch(string, string, DatabaseAccountPatchParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-673">Corregge le proprietà di un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-673">Patches the properties of an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function patch(resourceGroupName: string, accountName: string, updateParameters: DatabaseAccountPatchParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-674">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-674">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-675">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-675">Cosmos DB database account name.</span></span>
        - id: updateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
          description: <span data-ttu-id="3bb36-676">Il parametro tag patch per l'account del database corrente.</span><span class="sxs-lookup"><span data-stu-id="3bb36-676">The tags parameter to patch for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsPatchResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
    name: 'regenerateKey(string, string, DatabaseAccountRegenerateKeyParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="3bb36-677">Rigenera una chiave di accesso per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="3bb36-677">Regenerates an access key for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="3bb36-678">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="3bb36-678">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="3bb36-679">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="3bb36-679">Cosmos DB database account name.</span></span>
        - id: keyToRegenerate
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
          description: <span data-ttu-id="3bb36-680">Il nome della chiave da rigenerare.</span><span class="sxs-lookup"><span data-stu-id="3bb36-680">The name of the key to regenerate.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
references:
  - uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
    name: CosmosDBManagementClientContext
    spec.typeScript:
      - name: CosmosDBManagementClientContext
        fullName: CosmosDBManagementClientContext
        uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
    name: DatabaseAccountCreateUpdateParameters
    spec.typeScript:
      - name: DatabaseAccountCreateUpdateParameters
        fullName: DatabaseAccountCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
    name: CassandraKeyspaceCreateUpdateParameters
    spec.typeScript:
      - name: CassandraKeyspaceCreateUpdateParameters
        fullName: CassandraKeyspaceCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
    name: CassandraTableCreateUpdateParameters
    spec.typeScript:
      - name: CassandraTableCreateUpdateParameters
        fullName: CassandraTableCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
    name: GremlinDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: GremlinDatabaseCreateUpdateParameters
        fullName: GremlinDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
    name: GremlinGraphCreateUpdateParameters
    spec.typeScript:
      - name: GremlinGraphCreateUpdateParameters
        fullName: GremlinGraphCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
    name: MongoDBCollectionCreateUpdateParameters
    spec.typeScript:
      - name: MongoDBCollectionCreateUpdateParameters
        fullName: MongoDBCollectionCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
    name: MongoDBDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: MongoDBDatabaseCreateUpdateParameters
        fullName: MongoDBDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
    name: SqlContainerCreateUpdateParameters
    spec.typeScript:
      - name: SqlContainerCreateUpdateParameters
        fullName: SqlContainerCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
    name: SqlDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: SqlDatabaseCreateUpdateParameters
        fullName: SqlDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.TableCreateUpdateParameters'
    name: TableCreateUpdateParameters
    spec.typeScript:
      - name: TableCreateUpdateParameters
        fullName: TableCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.TableCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.FailoverPolicies'
    name: FailoverPolicies
    spec.typeScript:
      - name: FailoverPolicies
        fullName: FailoverPolicies
        uid: '@azure/arm-cosmosdb.FailoverPolicies'
  - uid: '@azure/arm-cosmosdb.RegionForOnlineOffline'
    name: RegionForOnlineOffline
    spec.typeScript:
      - name: RegionForOnlineOffline
        fullName: RegionForOnlineOffline
        uid: '@azure/arm-cosmosdb.RegionForOnlineOffline'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
    name: DatabaseAccountPatchParameters
    spec.typeScript:
      - name: DatabaseAccountPatchParameters
        fullName: DatabaseAccountPatchParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
    name: DatabaseAccountRegenerateKeyParameters
    spec.typeScript:
      - name: DatabaseAccountRegenerateKeyParameters
        fullName: DatabaseAccountRegenerateKeyParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
    name: DatabaseAccount>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccount
        fullName: DatabaseAccount
        uid: '@azure/arm-cosmosdb.DatabaseAccount'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
    name: CassandraKeyspace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraKeyspace
        fullName: CassandraKeyspace
        uid: '@azure/arm-cosmosdb.CassandraKeyspace'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
    name: CassandraTable>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraTable
        fullName: CassandraTable
        uid: '@azure/arm-cosmosdb.CassandraTable'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
    name: GremlinDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinDatabase
        fullName: GremlinDatabase
        uid: '@azure/arm-cosmosdb.GremlinDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
    name: GremlinGraph>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinGraph
        fullName: GremlinGraph
        uid: '@azure/arm-cosmosdb.GremlinGraph'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
    name: MongoDBCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBCollection
        fullName: MongoDBCollection
        uid: '@azure/arm-cosmosdb.MongoDBCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
    name: MongoDBDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBDatabase
        fullName: MongoDBDatabase
        uid: '@azure/arm-cosmosdb.MongoDBDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
    name: DatabaseAccountListReadOnlyKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListReadOnlyKeysResult
        fullName: DatabaseAccountListReadOnlyKeysResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
    name: SqlContainer>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlContainer
        fullName: SqlContainer
        uid: '@azure/arm-cosmosdb.SqlContainer'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
    name: SqlDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlDatabase
        fullName: SqlDatabase
        uid: '@azure/arm-cosmosdb.SqlDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.Table>
    name: Table>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Table
        fullName: Table
        uid: '@azure/arm-cosmosdb.Table'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
    name: DatabaseAccountsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountsListResult
        fullName: DatabaseAccountsListResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountsListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
    name: CassandraKeyspaceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraKeyspaceListResult
        fullName: CassandraKeyspaceListResult
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
    name: CassandraTableListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraTableListResult
        fullName: CassandraTableListResult
        uid: '@azure/arm-cosmosdb.CassandraTableListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
    name: DatabaseAccountListConnectionStringsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListConnectionStringsResult
        fullName: DatabaseAccountListConnectionStringsResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
    name: GremlinDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinDatabaseListResult
        fullName: GremlinDatabaseListResult
        uid: '@azure/arm-cosmosdb.GremlinDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
    name: GremlinGraphListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinGraphListResult
        fullName: GremlinGraphListResult
        uid: '@azure/arm-cosmosdb.GremlinGraphListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
    name: DatabaseAccountListKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListKeysResult
        fullName: DatabaseAccountListKeysResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListKeysResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
    name: MetricDefinitionsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricDefinitionsListResult
        fullName: MetricDefinitionsListResult
        uid: '@azure/arm-cosmosdb.MetricDefinitionsListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
    name: MetricListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricListResult
        fullName: MetricListResult
        uid: '@azure/arm-cosmosdb.MetricListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
    name: MongoDBCollectionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBCollectionListResult
        fullName: MongoDBCollectionListResult
        uid: '@azure/arm-cosmosdb.MongoDBCollectionListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
    name: MongoDBDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBDatabaseListResult
        fullName: MongoDBDatabaseListResult
        uid: '@azure/arm-cosmosdb.MongoDBDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
    name: SqlContainerListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlContainerListResult
        fullName: SqlContainerListResult
        uid: '@azure/arm-cosmosdb.SqlContainerListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
    name: SqlDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlDatabaseListResult
        fullName: SqlDatabaseListResult
        uid: '@azure/arm-cosmosdb.SqlDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.TableListResult>
    name: TableListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TableListResult
        fullName: TableListResult
        uid: '@azure/arm-cosmosdb.TableListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
    name: UsagesResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UsagesResult
        fullName: UsagesResult
        uid: '@azure/arm-cosmosdb.UsagesResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
    name: DatabaseAccountsListUsagesOptionalParams
    spec.typeScript:
      - name: DatabaseAccountsListUsagesOptionalParams
        fullName: DatabaseAccountsListUsagesOptionalParams
        uid: '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'