### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts'
    name: DatabaseAccounts
    fullName: DatabaseAccounts
    children:
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginPatch'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinGraphThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBCollectionThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlContainerThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.patch'
      - '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinGraphThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBCollectionThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlContainerThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateTableThroughput'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="e2bc7-101">Classe che rappresenta un DatabaseAccounts.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-101">Class representing a DatabaseAccounts.</span></span>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, DatabaseAccountCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-102">Crea o aggiorna un account di database Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-102">Creates or updates an Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, accountName: string, createUpdateParameters: DatabaseAccountCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-103">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-103">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-104">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-104">Cosmos DB database account name.</span></span>
        - id: createUpdateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-105">I parametri da specificare per l'account del database corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-105">The parameters to provide for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraKeyspace'
    name: 'beginCreateUpdateCassandraKeyspace(string, string, string, CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-106">Crea o aggiorna un keyspace Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-106">Create or update an Azure Cosmos DB Cassandra keyspace</span></span>
    syntax:
      content: 'function beginCreateUpdateCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, createUpdateCassandraKeyspaceParameters: CassandraKeyspaceCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-107">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-107">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-108">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-108">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-109">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-109">Cosmos DB keyspace name.</span></span>
        - id: createUpdateCassandraKeyspaceParameters
          type:
            - '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-110">I parametri da specificare per il keyspace Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-110">The parameters to provide for the current Cassandra keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraTable'
    name: 'beginCreateUpdateCassandraTable(string, string, string, string, CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-111">Crea o aggiorna una tabella di Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-111">Create or update an Azure Cosmos DB Cassandra Table</span></span>
    syntax:
      content: 'function beginCreateUpdateCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, createUpdateCassandraTableParameters: CassandraTableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-112">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-112">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-113">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-113">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-114">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-114">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-115">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-115">Cosmos DB table name.</span></span>
        - id: createUpdateCassandraTableParameters
          type:
            - '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-116">I parametri da specificare per la tabella di Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-116">The parameters to provide for the current Cassandra Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinDatabase'
    name: 'beginCreateUpdateGremlinDatabase(string, string, string, GremlinDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-117">Crea o aggiorna un database di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="e2bc7-117">Create or update an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function beginCreateUpdateGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateGremlinDatabaseParameters: GremlinDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-118">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-118">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-119">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-119">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-120">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-120">Cosmos DB database name.</span></span>
        - id: createUpdateGremlinDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-121">I parametri da specificare per il database corrente di Gremlin.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-121">The parameters to provide for the current Gremlin database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinGraph'
    name: 'beginCreateUpdateGremlinGraph(string, string, string, string, GremlinGraphCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-122">Crea o aggiorna un grafo di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="e2bc7-122">Create or update an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function beginCreateUpdateGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-123">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-123">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-124">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-124">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-125">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-125">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-126">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-126">Cosmos DB graph name.</span></span>
        - id: createUpdateGremlinGraphParameters
          type:
            - '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-127">I parametri da specificare per il grafico di Gremlin corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-127">The parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBCollection'
    name: 'beginCreateUpdateMongoDBCollection(string, string, string, string, MongoDBCollectionCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-128">Crea o aggiorna una raccolta MongoDB di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-128">Create or update an Azure Cosmos DB MongoDB Collection</span></span>
    syntax:
      content: 'function beginCreateUpdateMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, createUpdateMongoDBCollectionParameters: MongoDBCollectionCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-129">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-129">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-130">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-130">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-131">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-131">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-132">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-132">Cosmos DB collection name.</span></span>
        - id: createUpdateMongoDBCollectionParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-133">I parametri da specificare per la raccolta corrente di MongoDB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-133">The parameters to provide for the current MongoDB Collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBDatabase'
    name: 'beginCreateUpdateMongoDBDatabase(string, string, string, MongoDBDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-134">Crea o aggiorna il database di Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-134">Create or updates Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function beginCreateUpdateMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateMongoDBDatabaseParameters: MongoDBDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-135">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-135">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-136">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-136">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-137">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-137">Cosmos DB database name.</span></span>
        - id: createUpdateMongoDBDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-138">I parametri da specificare per il database MongoDB corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-138">The parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlContainer'
    name: 'beginCreateUpdateSqlContainer(string, string, string, string, SqlContainerCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-139">Crea o aggiorna un contenitore di Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="e2bc7-139">Create or update an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function beginCreateUpdateSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, createUpdateSqlContainerParameters: SqlContainerCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-140">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-140">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-141">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-141">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-142">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-142">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-143">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-143">Cosmos DB container name.</span></span>
        - id: createUpdateSqlContainerParameters
          type:
            - '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-144">I parametri da specificare per il contenitore SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-144">The parameters to provide for the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlDatabase'
    name: 'beginCreateUpdateSqlDatabase(string, string, string, SqlDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-145">Crea o aggiorna un database SQL di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-145">Create or update an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function beginCreateUpdateSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateSqlDatabaseParameters: SqlDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-146">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-146">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-147">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-147">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-148">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-148">Cosmos DB database name.</span></span>
        - id: createUpdateSqlDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-149">I parametri da specificare per il database SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-149">The parameters to provide for the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateTable'
    name: 'beginCreateUpdateTable(string, string, string, TableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-150">Crea o aggiorna una tabella di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-150">Create or update an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function beginCreateUpdateTable(resourceGroupName: string, accountName: string, tableName: string, createUpdateTableParameters: TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-151">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-151">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-152">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-152">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-153">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-153">Cosmos DB table name.</span></span>
        - id: createUpdateTableParameters
          type:
            - '@azure/arm-cosmosdb.TableCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-154">I parametri da specificare per la tabella corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-154">The parameters to provide for the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraKeyspace'
    name: 'beginDeleteCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-155">Elimina un keyspace Cassandra di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-155">Deletes an existing Azure Cosmos DB Cassandra keyspace.</span></span>
    syntax:
      content: 'function beginDeleteCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-156">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-156">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-157">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-157">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-158">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-158">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraTable'
    name: 'beginDeleteCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-159">Elimina una tabella di Cassandra di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-159">Deletes an existing Azure Cosmos DB Cassandra table.</span></span>
    syntax:
      content: 'function beginDeleteCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-160">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-160">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-161">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-161">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-162">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-162">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-163">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-163">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinDatabase'
    name: 'beginDeleteGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-164">Elimina un database di Azure Cosmos DB Gremlin esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-164">Deletes an existing Azure Cosmos DB Gremlin database.</span></span>
    syntax:
      content: 'function beginDeleteGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-165">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-165">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-166">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-166">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-167">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-167">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinGraph'
    name: 'beginDeleteGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-168">Elimina un grafico esistente di Azure Cosmos DB Gremlin.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-168">Deletes an existing Azure Cosmos DB Gremlin graph.</span></span>
    syntax:
      content: 'function beginDeleteGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-169">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-169">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-170">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-170">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-171">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-171">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-172">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-172">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-173">Elimina un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-173">Deletes an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-174">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-174">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-175">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-175">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBCollection'
    name: 'beginDeleteMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-176">Elimina una raccolta di MongoDB di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-176">Deletes an existing Azure Cosmos DB MongoDB Collection.</span></span>
    syntax:
      content: 'function beginDeleteMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-177">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-177">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-178">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-178">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-179">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-179">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-180">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-180">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBDatabase'
    name: 'beginDeleteMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-181">Elimina un database di Azure Cosmos DB MongoDB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-181">Deletes an existing Azure Cosmos DB MongoDB database.</span></span>
    syntax:
      content: 'function beginDeleteMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-182">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-182">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-183">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-183">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-184">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-184">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlContainer'
    name: 'beginDeleteSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-185">Elimina un contenitore di Azure Cosmos DB SQL esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-185">Deletes an existing Azure Cosmos DB SQL container.</span></span>
    syntax:
      content: 'function beginDeleteSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-186">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-186">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-187">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-187">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-188">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-188">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-189">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-189">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlDatabase'
    name: 'beginDeleteSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-190">Elimina un database SQL di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-190">Deletes an existing Azure Cosmos DB SQL database.</span></span>
    syntax:
      content: 'function beginDeleteSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-191">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-191">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-192">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-192">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-193">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-193">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteTable'
    name: 'beginDeleteTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-194">Elimina una tabella di DB Cosmos Azure esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-194">Deletes an existing Azure Cosmos DB Table.</span></span>
    syntax:
      content: 'function beginDeleteTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-195">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-195">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-196">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-196">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-197">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-197">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
    name: 'beginFailoverPriorityChange(string, string, FailoverPolicies, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-198">Modifica la priorità di failover per l'account di database Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-198">Changes the failover priority for the Azure Cosmos DB database account.</span></span> <span data-ttu-id="e2bc7-199">Una priorità di failover pari a 0 indica un'area di scrittura.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-199">A failover priority of 0 indicates a write region.</span></span> <span data-ttu-id="e2bc7-200">Il valore massimo per una priorità di failover = (numero totale di aree di-1).</span><span class="sxs-lookup"><span data-stu-id="e2bc7-200">The maximum value for a failover priority = (total number of regions - 1).</span></span> <span data-ttu-id="e2bc7-201">I valori di priorità di failover devono essere univoci per ogni area in cui si trova l'account del database.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-201">Failover priority values must be unique for each of the regions in which the database account exists.</span></span>
    syntax:
      content: 'function beginFailoverPriorityChange(resourceGroupName: string, accountName: string, failoverParameters: FailoverPolicies, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-202">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-202">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-203">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-203">Cosmos DB database account name.</span></span>
        - id: failoverParameters
          type:
            - '@azure/arm-cosmosdb.FailoverPolicies'
          description: <span data-ttu-id="e2bc7-204">I nuovi criteri di failover per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-204">The new failover policies for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
    name: 'beginOfflineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-205">Account del database non in linea l'area specificata per Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-205">Offline the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginOfflineRegion(resourceGroupName: string, accountName: string, regionParameterForOffline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-206">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-206">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-207">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-207">Cosmos DB database account name.</span></span>
        - id: regionParameterForOffline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="e2bc7-208">Area di COSMOS DB non in linea per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-208">Cosmos DB region to offline for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
    name: 'beginOnlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-209">Account del database online l'area specificata per Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-209">Online the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginOnlineRegion(resourceGroupName: string, accountName: string, regionParameterForOnline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-210">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-210">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-211">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-211">Cosmos DB database account name.</span></span>
        - id: regionParameterForOnline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="e2bc7-212">Area di COSMOS DB da online per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-212">Cosmos DB region to online for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginPatch'
    name: 'beginPatch(string, string, DatabaseAccountPatchParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-213">Corregge le proprietà di un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-213">Patches the properties of an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginPatch(resourceGroupName: string, accountName: string, updateParameters: DatabaseAccountPatchParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-214">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-214">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-215">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-215">Cosmos DB database account name.</span></span>
        - id: updateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
          description: <span data-ttu-id="e2bc7-216">Il parametro tag patch per l'account del database corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-216">The tags parameter to patch for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
    name: 'beginRegenerateKey(string, string, DatabaseAccountRegenerateKeyParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-217">Rigenera una chiave di accesso per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-217">Regenerates an access key for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginRegenerateKey(resourceGroupName: string, accountName: string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-218">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-218">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-219">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-219">Cosmos DB database account name.</span></span>
        - id: keyToRegenerate
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
          description: <span data-ttu-id="e2bc7-220">Il nome della chiave da rigenerare.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-220">The name of the key to regenerate.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraKeyspaceThroughput'
    name: 'beginUpdateCassandraKeyspaceThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-221">Aggiorna unità richiesta al secondo di un Keyspace Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-221">Update RUs per second of an Azure Cosmos DB Cassandra Keyspace</span></span>
    syntax:
      content: 'function beginUpdateCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-222">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-222">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-223">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-223">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-224">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-224">Cosmos DB keyspace name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-225">Le unità richiesta al secondo dei parametri a prevedere il Keyspace Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-225">The RUs per second of the parameters to provide for the current Cassandra Keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraTableThroughput'
    name: 'beginUpdateCassandraTableThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-226">Aggiorna unità richiesta al secondo di una tabella di Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-226">Update RUs per second of an Azure Cosmos DB Cassandra table</span></span>
    syntax:
      content: 'function beginUpdateCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-227">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-227">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-228">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-228">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-229">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-229">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-230">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-230">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-231">Le unità richiesta al secondo dei parametri per fornire per la tabella di Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-231">The RUs per second of the parameters to provide for the current Cassandra table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinDatabaseThroughput'
    name: 'beginUpdateGremlinDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-232">Aggiorna unità richiesta al secondo di un database di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="e2bc7-232">Update RUs per second of an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function beginUpdateGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-233">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-233">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-234">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-234">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-235">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-235">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-236">Le unità richiesta al secondo dei parametri per fornire per il database corrente di Gremlin.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-236">The RUs per second of the parameters to provide for the current Gremlin database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinGraphThroughput'
    name: 'beginUpdateGremlinGraphThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-237">Aggiorna unità richiesta al secondo di un grafico di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="e2bc7-237">Update RUs per second of an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function beginUpdateGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-238">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-238">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-239">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-239">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-240">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-240">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-241">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-241">Cosmos DB graph name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-242">Le unità richiesta al secondo dei parametri per fornire per il grafico di Gremlin corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-242">The RUs per second of the parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBCollectionThroughput'
    name: 'beginUpdateMongoDBCollectionThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-243">Aggiornare le unità richiesta al secondo di una raccolta di Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-243">Update the RUs per second of an Azure Cosmos DB MongoDB collection</span></span>
    syntax:
      content: 'function beginUpdateMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-244">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-244">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-245">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-245">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-246">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-246">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-247">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-247">Cosmos DB collection name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-248">Le unità richiesta al secondo dei parametri per fornire per la raccolta corrente di MongoDB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-248">The RUs per second of the parameters to provide for the current MongoDB collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBDatabaseThroughput'
    name: 'beginUpdateMongoDBDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-249">Aggiornare UR al secondo di un database di Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-249">Update RUs per second of the an Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function beginUpdateMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-250">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-250">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-251">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-251">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-252">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-252">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-253">Le unità richiesta al secondo dei parametri per fornire per il database MongoDB corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-253">The RUs per second of the parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlContainerThroughput'
    name: 'beginUpdateSqlContainerThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-254">Aggiorna unità richiesta al secondo di un contenitore di Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="e2bc7-254">Update RUs per second of an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function beginUpdateSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-255">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-255">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-256">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-256">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-257">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-257">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-258">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-258">Cosmos DB container name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-259">I parametri da specificare per le unità richiesta al secondo del contenitore SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-259">The parameters to provide for the RUs per second of the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlDatabaseThroughput'
    name: 'beginUpdateSqlDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-260">Aggiorna unità richiesta al secondo di un database SQL di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-260">Update RUs per second of an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function beginUpdateSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-261">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-261">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-262">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-262">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-263">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-263">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-264">I parametri da specificare per le unità richiesta al secondo del database SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-264">The parameters to provide for the RUs per second of the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateTableThroughput'
    name: 'beginUpdateTableThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-265">Aggiorna unità richiesta al secondo di una tabella di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-265">Update RUs per second of an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function beginUpdateTableThroughput(resourceGroupName: string, accountName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-266">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-266">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-267">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-267">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-268">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-268">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-269">I parametri da specificare per le unità richiesta al secondo della tabella corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-269">The parameters to provide for the RUs per second of the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
    name: 'checkNameExists(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e2bc7-270">Verifica che il nome dell''account Azure Cosmos DB esiste già.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-270">Checks that the Azure Cosmos DB account name already exists.</span></span> <span data-ttu-id="e2bc7-271">Un nome di account valido può contenere solo lettere minuscole lettere, numeri e ''-'' di caratteri e deve essere compresa tra 3 e 50 caratteri.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-271">A valid account name may contain only lowercase letters, numbers, and the ''-'' character, and must be between 3 and 50 characters.</span></span>'
    syntax:
      content: 'function checkNameExists(accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-272">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-272">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
    name: 'checkNameExists(string, RequestOptionsBase, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameExists(accountName: string, options: RequestOptionsBase, callback: ServiceCallback<boolean>)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-273">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-273">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-274">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-274">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            <span data-ttu-id="e2bc7-275">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-275">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
    name: 'checkNameExists(string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameExists(accountName: string, callback: ServiceCallback<boolean>)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-276">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-276">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            <span data-ttu-id="e2bc7-277">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-277">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
    name: 'createOrUpdate(string, string, DatabaseAccountCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-278">Crea o aggiorna un account di database Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-278">Creates or updates an Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, accountName: string, createUpdateParameters: DatabaseAccountCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-279">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-279">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-280">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-280">Cosmos DB database account name.</span></span>
        - id: createUpdateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-281">I parametri da specificare per l'account del database corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-281">The parameters to provide for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateOrUpdateResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraKeyspace'
    name: 'createUpdateCassandraKeyspace(string, string, string, CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-282">Crea o aggiorna un keyspace Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-282">Create or update an Azure Cosmos DB Cassandra keyspace</span></span>
    syntax:
      content: 'function createUpdateCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, createUpdateCassandraKeyspaceParameters: CassandraKeyspaceCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-283">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-283">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-284">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-284">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-285">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-285">Cosmos DB keyspace name.</span></span>
        - id: createUpdateCassandraKeyspaceParameters
          type:
            - '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-286">I parametri da specificare per il keyspace Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-286">The parameters to provide for the current Cassandra keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraTable'
    name: 'createUpdateCassandraTable(string, string, string, string, CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-287">Crea o aggiorna una tabella di Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-287">Create or update an Azure Cosmos DB Cassandra Table</span></span>
    syntax:
      content: 'function createUpdateCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, createUpdateCassandraTableParameters: CassandraTableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-288">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-288">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-289">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-289">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-290">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-290">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-291">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-291">Cosmos DB table name.</span></span>
        - id: createUpdateCassandraTableParameters
          type:
            - '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-292">I parametri da specificare per la tabella di Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-292">The parameters to provide for the current Cassandra Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinDatabase'
    name: 'createUpdateGremlinDatabase(string, string, string, GremlinDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-293">Crea o aggiorna un database di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="e2bc7-293">Create or update an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function createUpdateGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateGremlinDatabaseParameters: GremlinDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-294">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-294">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-295">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-295">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-296">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-296">Cosmos DB database name.</span></span>
        - id: createUpdateGremlinDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-297">I parametri da specificare per il database corrente di Gremlin.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-297">The parameters to provide for the current Gremlin database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinGraph'
    name: 'createUpdateGremlinGraph(string, string, string, string, GremlinGraphCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-298">Crea o aggiorna un grafo di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="e2bc7-298">Create or update an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function createUpdateGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-299">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-299">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-300">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-300">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-301">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-301">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-302">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-302">Cosmos DB graph name.</span></span>
        - id: createUpdateGremlinGraphParameters
          type:
            - '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-303">I parametri da specificare per il grafico di Gremlin corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-303">The parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBCollection'
    name: 'createUpdateMongoDBCollection(string, string, string, string, MongoDBCollectionCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-304">Crea o aggiorna una raccolta MongoDB di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-304">Create or update an Azure Cosmos DB MongoDB Collection</span></span>
    syntax:
      content: 'function createUpdateMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, createUpdateMongoDBCollectionParameters: MongoDBCollectionCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-305">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-305">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-306">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-306">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-307">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-307">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-308">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-308">Cosmos DB collection name.</span></span>
        - id: createUpdateMongoDBCollectionParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-309">I parametri da specificare per la raccolta corrente di MongoDB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-309">The parameters to provide for the current MongoDB Collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBDatabase'
    name: 'createUpdateMongoDBDatabase(string, string, string, MongoDBDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-310">Crea o aggiorna il database di Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-310">Create or updates Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function createUpdateMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateMongoDBDatabaseParameters: MongoDBDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-311">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-311">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-312">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-312">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-313">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-313">Cosmos DB database name.</span></span>
        - id: createUpdateMongoDBDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-314">I parametri da specificare per il database MongoDB corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-314">The parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlContainer'
    name: 'createUpdateSqlContainer(string, string, string, string, SqlContainerCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-315">Crea o aggiorna un contenitore di Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="e2bc7-315">Create or update an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function createUpdateSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, createUpdateSqlContainerParameters: SqlContainerCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-316">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-316">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-317">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-317">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-318">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-318">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-319">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-319">Cosmos DB container name.</span></span>
        - id: createUpdateSqlContainerParameters
          type:
            - '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-320">I parametri da specificare per il contenitore SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-320">The parameters to provide for the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlDatabase'
    name: 'createUpdateSqlDatabase(string, string, string, SqlDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-321">Crea o aggiorna un database SQL di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-321">Create or update an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function createUpdateSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateSqlDatabaseParameters: SqlDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-322">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-322">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-323">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-323">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-324">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-324">Cosmos DB database name.</span></span>
        - id: createUpdateSqlDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-325">I parametri da specificare per il database SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-325">The parameters to provide for the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateTable'
    name: 'createUpdateTable(string, string, string, TableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-326">Crea o aggiorna una tabella di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-326">Create or update an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function createUpdateTable(resourceGroupName: string, accountName: string, tableName: string, createUpdateTableParameters: TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-327">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-327">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-328">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-328">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-329">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-329">Cosmos DB table name.</span></span>
        - id: createUpdateTableParameters
          type:
            - '@azure/arm-cosmosdb.TableCreateUpdateParameters'
          description: <span data-ttu-id="e2bc7-330">I parametri da specificare per la tabella corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-330">The parameters to provide for the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
    name: DatabaseAccounts(CosmosDBManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-331">Creare un DatabaseAccounts.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-331">Create a DatabaseAccounts.</span></span>
    syntax:
      content: 'new DatabaseAccounts(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
          description: |
            <span data-ttu-id="e2bc7-332">Riferimento al client del servizio.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-332">Reference to the service client.</span></span>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraKeyspace'
    name: 'deleteCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-333">Elimina un keyspace Cassandra di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-333">Deletes an existing Azure Cosmos DB Cassandra keyspace.</span></span>
    syntax:
      content: 'function deleteCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-334">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-334">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-335">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-335">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-336">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-336">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraTable'
    name: 'deleteCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-337">Elimina una tabella di Cassandra di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-337">Deletes an existing Azure Cosmos DB Cassandra table.</span></span>
    syntax:
      content: 'function deleteCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-338">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-338">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-339">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-339">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-340">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-340">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-341">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-341">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinDatabase'
    name: 'deleteGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-342">Elimina un database di Azure Cosmos DB Gremlin esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-342">Deletes an existing Azure Cosmos DB Gremlin database.</span></span>
    syntax:
      content: 'function deleteGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-343">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-343">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-344">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-344">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-345">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-345">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinGraph'
    name: 'deleteGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-346">Elimina un grafico esistente di Azure Cosmos DB Gremlin.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-346">Deletes an existing Azure Cosmos DB Gremlin graph.</span></span>
    syntax:
      content: 'function deleteGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-347">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-347">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-348">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-348">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-349">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-349">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-350">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-350">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-351">Elimina un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-351">Deletes an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-352">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-352">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-353">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-353">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBCollection'
    name: 'deleteMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-354">Elimina una raccolta di MongoDB di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-354">Deletes an existing Azure Cosmos DB MongoDB Collection.</span></span>
    syntax:
      content: 'function deleteMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-355">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-355">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-356">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-356">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-357">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-357">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-358">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-358">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBDatabase'
    name: 'deleteMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-359">Elimina un database di Azure Cosmos DB MongoDB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-359">Deletes an existing Azure Cosmos DB MongoDB database.</span></span>
    syntax:
      content: 'function deleteMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-360">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-360">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-361">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-361">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-362">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-362">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlContainer'
    name: 'deleteSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-363">Elimina un contenitore di Azure Cosmos DB SQL esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-363">Deletes an existing Azure Cosmos DB SQL container.</span></span>
    syntax:
      content: 'function deleteSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-364">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-364">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-365">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-365">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-366">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-366">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-367">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-367">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlDatabase'
    name: 'deleteSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-368">Elimina un database SQL di Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-368">Deletes an existing Azure Cosmos DB SQL database.</span></span>
    syntax:
      content: 'function deleteSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-369">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-369">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-370">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-370">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-371">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-371">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteTable'
    name: 'deleteTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-372">Elimina una tabella di DB Cosmos Azure esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-372">Deletes an existing Azure Cosmos DB Table.</span></span>
    syntax:
      content: 'function deleteTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-373">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-373">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-374">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-374">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-375">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-375">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
    name: 'failoverPriorityChange(string, string, FailoverPolicies, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-376">Modifica la priorità di failover per l'account di database Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-376">Changes the failover priority for the Azure Cosmos DB database account.</span></span> <span data-ttu-id="e2bc7-377">Una priorità di failover pari a 0 indica un'area di scrittura.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-377">A failover priority of 0 indicates a write region.</span></span> <span data-ttu-id="e2bc7-378">Il valore massimo per una priorità di failover = (numero totale di aree di-1).</span><span class="sxs-lookup"><span data-stu-id="e2bc7-378">The maximum value for a failover priority = (total number of regions - 1).</span></span> <span data-ttu-id="e2bc7-379">I valori di priorità di failover devono essere univoci per ogni area in cui si trova l'account del database.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-379">Failover priority values must be unique for each of the regions in which the database account exists.</span></span>
    syntax:
      content: 'function failoverPriorityChange(resourceGroupName: string, accountName: string, failoverParameters: FailoverPolicies, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-380">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-380">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-381">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-381">Cosmos DB database account name.</span></span>
        - id: failoverParameters
          type:
            - '@azure/arm-cosmosdb.FailoverPolicies'
          description: <span data-ttu-id="e2bc7-382">I nuovi criteri di failover per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-382">The new failover policies for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-383">Recupera le proprietà di un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-383">Retrieves the properties of an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-384">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-384">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-385">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-385">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-386">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-386">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-387">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-387">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-388">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-388">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
          description: |
            <span data-ttu-id="e2bc7-389">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-389">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
    name: 'get(string, string, ServiceCallback<DatabaseAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-390">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-390">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-391">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-391">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
          description: |
            <span data-ttu-id="e2bc7-392">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-392">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace'
    name: 'getCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-393">Ottiene lo spazi di Cassandra in un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-393">Gets the Cassandra keyspaces under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-394">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-394">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-395">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-395">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-396">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-396">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_2'
    name: 'getCassandraKeyspace(string, string, string, RequestOptionsBase, ServiceCallback<CassandraKeyspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraKeyspace>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-397">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-397">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-398">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-398">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-399">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-399">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-400">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-400">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
          description: |
            <span data-ttu-id="e2bc7-401">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-401">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_1'
    name: 'getCassandraKeyspace(string, string, string, ServiceCallback<CassandraKeyspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<CassandraKeyspace>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-402">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-402">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-403">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-403">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-404">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-404">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
          description: |
            <span data-ttu-id="e2bc7-405">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-405">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput'
    name: 'getCassandraKeyspaceThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-406">Ottiene le unità richiesta al secondo del Keyspace di Cassandra in un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-406">Gets the RUs per second of the Cassandra Keyspace under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-407">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-407">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-408">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-408">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-409">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-409">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_2'
    name: 'getCassandraKeyspaceThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-410">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-410">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-411">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-411">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-412">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-412">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-413">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-413">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-414">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-414">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_1'
    name: 'getCassandraKeyspaceThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-415">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-415">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-416">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-416">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-417">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-417">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-418">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-418">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable'
    name: 'getCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-419">Ottiene la tabella di Cassandra in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-419">Gets the Cassandra table under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-420">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-420">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-421">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-421">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-422">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-422">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-423">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-423">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_2'
    name: 'getCassandraTable(string, string, string, string, RequestOptionsBase, ServiceCallback<CassandraTable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraTable>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-424">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-424">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-425">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-425">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-426">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-426">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-427">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-427">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-428">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-428">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
          description: |
            <span data-ttu-id="e2bc7-429">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-429">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_1'
    name: 'getCassandraTable(string, string, string, string, ServiceCallback<CassandraTable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, callback: ServiceCallback<CassandraTable>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-430">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-430">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-431">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-431">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-432">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-432">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-433">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-433">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
          description: |
            <span data-ttu-id="e2bc7-434">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-434">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput'
    name: 'getCassandraTableThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-435">Ottiene le unità richiesta al secondo della tabella di Cassandra in un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-435">Gets the RUs per second of the Cassandra table under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-436">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-436">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-437">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-437">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-438">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-438">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-439">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-439">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_2'
    name: 'getCassandraTableThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-440">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-440">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-441">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-441">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-442">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-442">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-443">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-443">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-444">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-444">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-445">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-445">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_1'
    name: 'getCassandraTableThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-446">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-446">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-447">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-447">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-448">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-448">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-449">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-449">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-450">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-450">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase'
    name: 'getGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-451">Ottiene i database Gremlin con un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-451">Gets the Gremlin databases under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-452">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-452">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-453">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-453">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-454">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-454">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_2'
    name: 'getGremlinDatabase(string, string, string, RequestOptionsBase, ServiceCallback<GremlinDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-455">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-455">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-456">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-456">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-457">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-457">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-458">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-458">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
          description: |
            <span data-ttu-id="e2bc7-459">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-459">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_1'
    name: 'getGremlinDatabase(string, string, string, ServiceCallback<GremlinDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<GremlinDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-460">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-460">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-461">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-461">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-462">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-462">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
          description: |
            <span data-ttu-id="e2bc7-463">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-463">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput'
    name: 'getGremlinDatabaseThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-464">Ottiene le unità richiesta al secondo del database Gremlin con un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-464">Gets the RUs per second of the Gremlin database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-465">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-465">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-466">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-466">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-467">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-467">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_2'
    name: 'getGremlinDatabaseThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-468">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-468">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-469">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-469">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-470">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-470">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-471">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-471">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-472">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-472">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_1'
    name: 'getGremlinDatabaseThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-473">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-473">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-474">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-474">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-475">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-475">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-476">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-476">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph'
    name: 'getGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-477">Ottiene il grafico di Gremlin con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-477">Gets the Gremlin graph under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-478">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-478">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-479">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-479">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-480">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-480">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-481">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-481">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_2'
    name: 'getGremlinGraph(string, string, string, string, RequestOptionsBase, ServiceCallback<GremlinGraph>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinGraph>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-482">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-482">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-483">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-483">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-484">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-484">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-485">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-485">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-486">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-486">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
          description: |
            <span data-ttu-id="e2bc7-487">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-487">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_1'
    name: 'getGremlinGraph(string, string, string, string, ServiceCallback<GremlinGraph>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, callback: ServiceCallback<GremlinGraph>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-488">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-488">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-489">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-489">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-490">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-490">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-491">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-491">Cosmos DB graph name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
          description: |
            <span data-ttu-id="e2bc7-492">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-492">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput'
    name: 'getGremlinGraphThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-493">Ottiene la velocità effettiva graph Gremlin con un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-493">Gets the Gremlin graph throughput under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-494">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-494">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-495">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-495">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-496">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-496">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-497">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-497">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_2'
    name: 'getGremlinGraphThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-498">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-498">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-499">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-499">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-500">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-500">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-501">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-501">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-502">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-502">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-503">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-503">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_1'
    name: 'getGremlinGraphThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-504">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-504">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-505">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-505">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-506">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-506">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-507">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-507">Cosmos DB graph name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-508">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-508">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection'
    name: 'getMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-509">Ottiene la raccolta MongoDB con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-509">Gets the MongoDB collection under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-510">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-510">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-511">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-511">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-512">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-512">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-513">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-513">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_2'
    name: 'getMongoDBCollection(string, string, string, string, RequestOptionsBase, ServiceCallback<MongoDBCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-514">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-514">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-515">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-515">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-516">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-516">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-517">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-517">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-518">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-518">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
          description: |
            <span data-ttu-id="e2bc7-519">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-519">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_1'
    name: 'getMongoDBCollection(string, string, string, string, ServiceCallback<MongoDBCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, callback: ServiceCallback<MongoDBCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-520">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-520">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-521">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-521">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-522">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-522">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-523">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-523">Cosmos DB collection name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
          description: |
            <span data-ttu-id="e2bc7-524">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-524">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput'
    name: 'getMongoDBCollectionThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-525">Ottiene le unità richiesta al secondo della raccolta MongoDB con un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-525">Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-526">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-526">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-527">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-527">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-528">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-528">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-529">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-529">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_2'
    name: 'getMongoDBCollectionThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-530">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-530">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-531">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-531">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-532">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-532">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-533">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-533">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-534">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-534">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-535">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-535">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_1'
    name: 'getMongoDBCollectionThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-536">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-536">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-537">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-537">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-538">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-538">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-539">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-539">Cosmos DB collection name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-540">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-540">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase'
    name: 'getMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-541">Ottiene i database di MongoDB in un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-541">Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-542">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-542">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-543">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-543">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-544">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-544">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_2'
    name: 'getMongoDBDatabase(string, string, string, RequestOptionsBase, ServiceCallback<MongoDBDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-545">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-545">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-546">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-546">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-547">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-547">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-548">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-548">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
          description: |
            <span data-ttu-id="e2bc7-549">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-549">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_1'
    name: 'getMongoDBDatabase(string, string, string, ServiceCallback<MongoDBDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<MongoDBDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-550">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-550">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-551">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-551">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-552">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-552">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
          description: |
            <span data-ttu-id="e2bc7-553">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-553">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput'
    name: 'getMongoDBDatabaseThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-554">Ottiene le unità richiesta al secondo del database MongoDB in un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-554">Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-555">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-555">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-556">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-556">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-557">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-557">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_2'
    name: 'getMongoDBDatabaseThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-558">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-558">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-559">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-559">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-560">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-560">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-561">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-561">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-562">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-562">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_1'
    name: 'getMongoDBDatabaseThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-563">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-563">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-564">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-564">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-565">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-565">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-566">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-566">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
    name: 'getReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-567">Elenca le chiavi di accesso in lettura per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-567">Lists the read-only access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-568">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-568">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-569">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-569">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
    name: 'getReadOnlyKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-570">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-570">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-571">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-571">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-572">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-572">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="e2bc7-573">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-573">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
    name: 'getReadOnlyKeys(string, string, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-574">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-574">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-575">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-575">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="e2bc7-576">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-576">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer'
    name: 'getSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-577">Ottiene il contenitore SQL con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-577">Gets the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-578">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-578">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-579">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-579">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-580">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-580">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-581">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-581">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_2'
    name: 'getSqlContainer(string, string, string, string, RequestOptionsBase, ServiceCallback<SqlContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-582">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-582">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-583">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-583">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-584">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-584">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-585">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-585">Cosmos DB container name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-586">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-586">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
          description: |
            <span data-ttu-id="e2bc7-587">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-587">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_1'
    name: 'getSqlContainer(string, string, string, string, ServiceCallback<SqlContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, callback: ServiceCallback<SqlContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-588">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-588">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-589">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-589">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-590">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-590">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-591">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-591">Cosmos DB container name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
          description: |
            <span data-ttu-id="e2bc7-592">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-592">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput'
    name: 'getSqlContainerThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-593">Ottiene le unità richiesta al secondo del contenitore SQL in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-593">Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-594">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-594">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-595">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-595">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-596">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-596">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-597">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-597">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_2'
    name: 'getSqlContainerThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-598">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-598">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-599">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-599">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-600">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-600">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-601">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-601">Cosmos DB container name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-602">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-602">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-603">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-603">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_1'
    name: 'getSqlContainerThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-604">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-604">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-605">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-605">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-606">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-606">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-607">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-607">Cosmos DB container name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-608">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-608">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase'
    name: 'getSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-609">Ottiene il database SQL con un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-609">Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-610">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-610">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-611">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-611">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-612">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-612">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_2'
    name: 'getSqlDatabase(string, string, string, RequestOptionsBase, ServiceCallback<SqlDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-613">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-613">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-614">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-614">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-615">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-615">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-616">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-616">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
          description: |
            <span data-ttu-id="e2bc7-617">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-617">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_1'
    name: 'getSqlDatabase(string, string, string, ServiceCallback<SqlDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<SqlDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-618">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-618">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-619">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-619">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-620">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-620">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
          description: |
            <span data-ttu-id="e2bc7-621">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-621">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput'
    name: 'getSqlDatabaseThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-622">Ottiene le unità richiesta al secondo del database SQL con un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-622">Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-623">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-623">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-624">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-624">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-625">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-625">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_2'
    name: 'getSqlDatabaseThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-626">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-626">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-627">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-627">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-628">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-628">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-629">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-629">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-630">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-630">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_1'
    name: 'getSqlDatabaseThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-631">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-631">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-632">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-632">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-633">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-633">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-634">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-634">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable'
    name: 'getTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-635">Ottiene le tabelle in un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-635">Gets the Tables under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-636">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-636">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-637">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-637">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-638">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-638">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable_2'
    name: 'getTable(string, string, string, RequestOptionsBase, ServiceCallback<Table>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<Table>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-639">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-639">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-640">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-640">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-641">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-641">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-642">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-642">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Table>
          description: |
            <span data-ttu-id="e2bc7-643">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-643">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable_1'
    name: 'getTable(string, string, string, ServiceCallback<Table>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, callback: ServiceCallback<Table>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-644">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-644">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-645">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-645">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-646">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-646">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Table>
          description: |
            <span data-ttu-id="e2bc7-647">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-647">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput'
    name: 'getTableThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-648">Ottiene le unità richiesta al secondo della tabella in un account di database Azure Cosmos DB esistente con il nome fornito.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-648">Gets the RUs per second of the Table under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getTableThroughput(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-649">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-649">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-650">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-650">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-651">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-651">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_2'
    name: 'getTableThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTableThroughput(resourceGroupName: string, accountName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-652">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-652">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-653">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-653">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-654">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-654">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-655">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-655">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-656">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-656">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_1'
    name: 'getTableThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTableThroughput(resourceGroupName: string, accountName: string, tableName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-657">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-657">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-658">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-658">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-659">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-659">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="e2bc7-660">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-660">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-661">Elenca tutti gli account di database di Azure Cosmos DB disponibili nella sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-661">Lists all the Azure Cosmos DB database accounts available under the subscription.</span></span>
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-662">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-662">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="e2bc7-663">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-663">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
    name: list(ServiceCallback<DatabaseAccountsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="e2bc7-664">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-664">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-665">Elenca tutti gli account di database di Azure Cosmos DB disponibili nel gruppo di risorse specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-665">Lists all the Azure Cosmos DB database accounts available under the given resource group.</span></span>
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-666">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-666">Name of an Azure resource group.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
    name: 'listByResourceGroup(string, RequestOptionsBase, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-667">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-667">Name of an Azure resource group.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-668">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-668">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="e2bc7-669">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-669">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-670">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-670">Name of an Azure resource group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="e2bc7-671">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-671">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces'
    name: 'listCassandraKeyspaces(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-672">Elenca lo spazi di Cassandra in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-672">Lists the Cassandra keyspaces under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-673">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-673">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-674">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-674">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_2'
    name: 'listCassandraKeyspaces(string, string, RequestOptionsBase, ServiceCallback<CassandraKeyspaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraKeyspaceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-675">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-675">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-676">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-676">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-677">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-677">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
          description: |
            <span data-ttu-id="e2bc7-678">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-678">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_1'
    name: 'listCassandraKeyspaces(string, string, ServiceCallback<CassandraKeyspaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, callback: ServiceCallback<CassandraKeyspaceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-679">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-679">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-680">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-680">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
          description: |
            <span data-ttu-id="e2bc7-681">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-681">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables'
    name: 'listCassandraTables(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-682">Sono elencati nella tabella di Cassandra in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-682">Lists the Cassandra table under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-683">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-683">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-684">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-684">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-685">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-685">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_2'
    name: 'listCassandraTables(string, string, string, RequestOptionsBase, ServiceCallback<CassandraTableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraTableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-686">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-686">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-687">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-687">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-688">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-688">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-689">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-689">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
          description: |
            <span data-ttu-id="e2bc7-690">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-690">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_1'
    name: 'listCassandraTables(string, string, string, ServiceCallback<CassandraTableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<CassandraTableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-691">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-691">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-692">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-692">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-693">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-693">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
          description: |
            <span data-ttu-id="e2bc7-694">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-694">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
    name: 'listConnectionStrings(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-695">Elenca le stringhe di connessione per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-695">Lists the connection strings for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-696">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-696">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-697">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-697">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
    name: 'listConnectionStrings(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-698">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-698">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-699">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-699">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-700">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-700">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
          description: |
            <span data-ttu-id="e2bc7-701">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-701">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
    name: 'listConnectionStrings(string, string, ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-702">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-702">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-703">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-703">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
          description: |
            <span data-ttu-id="e2bc7-704">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-704">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases'
    name: 'listGremlinDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-705">Elenca i database Gremlin con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-705">Lists the Gremlin databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-706">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-706">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-707">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-707">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_2'
    name: 'listGremlinDatabases(string, string, RequestOptionsBase, ServiceCallback<GremlinDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-708">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-708">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-709">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-709">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-710">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-710">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
          description: |
            <span data-ttu-id="e2bc7-711">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-711">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_1'
    name: 'listGremlinDatabases(string, string, ServiceCallback<GremlinDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<GremlinDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-712">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-712">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-713">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-713">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
          description: |
            <span data-ttu-id="e2bc7-714">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-714">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs'
    name: 'listGremlinGraphs(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-715">Elenca il Gremlin graph con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-715">Lists the Gremlin graph under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-716">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-716">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-717">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-717">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-718">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-718">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_2'
    name: 'listGremlinGraphs(string, string, string, RequestOptionsBase, ServiceCallback<GremlinGraphListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinGraphListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-719">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-719">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-720">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-720">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-721">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-721">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-722">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-722">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
          description: |
            <span data-ttu-id="e2bc7-723">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-723">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_1'
    name: 'listGremlinGraphs(string, string, string, ServiceCallback<GremlinGraphListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<GremlinGraphListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-724">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-724">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-725">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-725">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-726">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-726">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
          description: |
            <span data-ttu-id="e2bc7-727">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-727">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
    name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-728">Elenca le chiavi di accesso per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-728">Lists the access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-729">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-729">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-730">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-730">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
    name: 'listKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-731">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-731">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-732">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-732">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-733">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-733">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
          description: |
            <span data-ttu-id="e2bc7-734">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-734">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
    name: 'listKeys(string, string, ServiceCallback<DatabaseAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-735">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-735">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-736">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-736">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
          description: |
            <span data-ttu-id="e2bc7-737">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-737">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
    name: 'listMetricDefinitions(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-738">Recupera le definizioni delle metriche per l'account del database specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-738">Retrieves metric definitions for the given database account.</span></span>
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-739">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-739">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-740">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-740">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
    name: 'listMetricDefinitions(string, string, RequestOptionsBase, ServiceCallback<MetricDefinitionsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<MetricDefinitionsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-741">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-741">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-742">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-742">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-743">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-743">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
          description: |
            <span data-ttu-id="e2bc7-744">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-744">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
    name: 'listMetricDefinitions(string, string, ServiceCallback<MetricDefinitionsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, callback: ServiceCallback<MetricDefinitionsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-745">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-745">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-746">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-746">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
          description: |
            <span data-ttu-id="e2bc7-747">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-747">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
    name: 'listMetrics(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-748">Recupera le metriche in base al filtro specificato per l'account del database specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-748">Retrieves the metrics determined by the given filter for the given database account.</span></span>
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-749">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-749">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-750">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-750">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="e2bc7-751">Un''espressione di filtro OData che descrive un subset delle metriche da restituire.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-751">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="e2bc7-752">I parametri che possono essere filtrati sono name.value (nome della metrica, può avere un o di più nomi), startTime, endTime e timeGrain.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-752">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="e2bc7-753">L''operatore supportato è uguale a</span><span class="sxs-lookup"><span data-stu-id="e2bc7-753">The supported operator is eq.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
    name: 'listMetrics(string, string, string, RequestOptionsBase, ServiceCallback<MetricListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, options: RequestOptionsBase, callback: ServiceCallback<MetricListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-754">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-754">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-755">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-755">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="e2bc7-756">Un''espressione di filtro OData che descrive un subset delle metriche da restituire.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-756">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="e2bc7-757">I parametri che possono essere filtrati sono name.value (nome della metrica, può avere un o di più nomi), startTime, endTime e timeGrain.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-757">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="e2bc7-758">L''operatore supportato è uguale a</span><span class="sxs-lookup"><span data-stu-id="e2bc7-758">The supported operator is eq.</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-759">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-759">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
          description: |
            <span data-ttu-id="e2bc7-760">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-760">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
    name: 'listMetrics(string, string, string, ServiceCallback<MetricListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, callback: ServiceCallback<MetricListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-761">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-761">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-762">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-762">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="e2bc7-763">Un''espressione di filtro OData che descrive un subset delle metriche da restituire.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-763">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="e2bc7-764">I parametri che possono essere filtrati sono name.value (nome della metrica, può avere un o di più nomi), startTime, endTime e timeGrain.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-764">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="e2bc7-765">L''operatore supportato è uguale a</span><span class="sxs-lookup"><span data-stu-id="e2bc7-765">The supported operator is eq.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
          description: |
            <span data-ttu-id="e2bc7-766">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-766">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections'
    name: 'listMongoDBCollections(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-767">Elenca la raccolta MongoDB con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-767">Lists the MongoDB collection under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-768">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-768">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-769">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-769">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-770">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-770">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_2'
    name: 'listMongoDBCollections(string, string, string, RequestOptionsBase, ServiceCallback<MongoDBCollectionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBCollectionListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-771">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-771">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-772">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-772">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-773">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-773">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-774">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-774">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
          description: |
            <span data-ttu-id="e2bc7-775">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-775">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_1'
    name: 'listMongoDBCollections(string, string, string, ServiceCallback<MongoDBCollectionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<MongoDBCollectionListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-776">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-776">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-777">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-777">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-778">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-778">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
          description: |
            <span data-ttu-id="e2bc7-779">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-779">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases'
    name: 'listMongoDBDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-780">Elenca i database di MongoDB in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-780">Lists the MongoDB databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-781">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-781">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-782">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-782">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_2'
    name: 'listMongoDBDatabases(string, string, RequestOptionsBase, ServiceCallback<MongoDBDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-783">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-783">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-784">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-784">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-785">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-785">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
          description: |
            <span data-ttu-id="e2bc7-786">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-786">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_1'
    name: 'listMongoDBDatabases(string, string, ServiceCallback<MongoDBDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<MongoDBDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-787">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-787">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-788">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-788">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
          description: |
            <span data-ttu-id="e2bc7-789">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-789">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
    name: 'listReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-790">Elenca le chiavi di accesso in lettura per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-790">Lists the read-only access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-791">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-791">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-792">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-792">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
    name: 'listReadOnlyKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-793">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-793">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-794">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-794">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-795">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-795">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="e2bc7-796">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-796">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
    name: 'listReadOnlyKeys(string, string, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-797">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-797">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-798">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-798">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="e2bc7-799">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-799">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers'
    name: 'listSqlContainers(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-800">Elenca il contenitore SQL con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-800">Lists the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-801">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-801">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-802">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-802">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-803">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-803">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_2'
    name: 'listSqlContainers(string, string, string, RequestOptionsBase, ServiceCallback<SqlContainerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlContainerListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-804">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-804">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-805">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-805">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-806">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-806">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-807">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-807">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
          description: |
            <span data-ttu-id="e2bc7-808">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-808">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_1'
    name: 'listSqlContainers(string, string, string, ServiceCallback<SqlContainerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<SqlContainerListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-809">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-809">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-810">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-810">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-811">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-811">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
          description: |
            <span data-ttu-id="e2bc7-812">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-812">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases'
    name: 'listSqlDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-813">Elenca i database SQL con un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-813">Lists the SQL databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-814">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-814">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-815">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-815">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_2'
    name: 'listSqlDatabases(string, string, RequestOptionsBase, ServiceCallback<SqlDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-816">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-816">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-817">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-817">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-818">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-818">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
          description: |
            <span data-ttu-id="e2bc7-819">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-819">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_1'
    name: 'listSqlDatabases(string, string, ServiceCallback<SqlDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<SqlDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-820">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-820">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-821">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-821">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
          description: |
            <span data-ttu-id="e2bc7-822">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-822">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables'
    name: 'listTables(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-823">Elenca le tabelle in un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-823">Lists the Tables under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-824">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-824">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-825">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-825">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables_2'
    name: 'listTables(string, string, RequestOptionsBase, ServiceCallback<TableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<TableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-826">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-826">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-827">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-827">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e2bc7-828">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-828">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableListResult>
          description: |
            <span data-ttu-id="e2bc7-829">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-829">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables_1'
    name: 'listTables(string, string, ServiceCallback<TableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, callback: ServiceCallback<TableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-830">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-830">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-831">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-831">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableListResult>
          description: |
            <span data-ttu-id="e2bc7-832">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-832">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
    name: 'listUsages(string, string, DatabaseAccountsListUsagesOptionalParams, ServiceCallback<UsagesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, options: DatabaseAccountsListUsagesOptionalParams, callback: ServiceCallback<UsagesResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-833">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-833">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-834">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-834">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
          description: <span data-ttu-id="e2bc7-835">I parametri facoltativi</span><span class="sxs-lookup"><span data-stu-id="e2bc7-835">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
          description: |
            <span data-ttu-id="e2bc7-836">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-836">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
    name: 'listUsages(string, string, Models.DatabaseAccountsListUsagesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-837">Recupera gli utilizzi (dati più recenti) per l'account del database specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-837">Retrieves the usages (most recent data) for the given database account.</span></span>
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, options?: Models.DatabaseAccountsListUsagesOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-838">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-838">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-839">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-839">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - Models.DatabaseAccountsListUsagesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
    name: 'listUsages(string, string, ServiceCallback<UsagesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, callback: ServiceCallback<UsagesResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-840">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-840">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-841">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-841">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
          description: |
            <span data-ttu-id="e2bc7-842">Il callback</span><span class="sxs-lookup"><span data-stu-id="e2bc7-842">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
    name: 'offlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-843">Account del database non in linea l'area specificata per Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-843">Offline the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function offlineRegion(resourceGroupName: string, accountName: string, regionParameterForOffline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-844">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-844">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-845">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-845">Cosmos DB database account name.</span></span>
        - id: regionParameterForOffline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="e2bc7-846">Area di COSMOS DB non in linea per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-846">Cosmos DB region to offline for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
    name: 'onlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-847">Account del database online l'area specificata per Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-847">Online the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function onlineRegion(resourceGroupName: string, accountName: string, regionParameterForOnline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-848">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-848">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-849">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-849">Cosmos DB database account name.</span></span>
        - id: regionParameterForOnline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="e2bc7-850">Area di COSMOS DB da online per l'account del database.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-850">Cosmos DB region to online for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.patch'
    name: 'patch(string, string, DatabaseAccountPatchParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-851">Corregge le proprietà di un account di database Azure Cosmos DB esistente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-851">Patches the properties of an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function patch(resourceGroupName: string, accountName: string, updateParameters: DatabaseAccountPatchParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-852">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-852">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-853">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-853">Cosmos DB database account name.</span></span>
        - id: updateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
          description: <span data-ttu-id="e2bc7-854">Il parametro tag patch per l'account del database corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-854">The tags parameter to patch for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsPatchResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
    name: 'regenerateKey(string, string, DatabaseAccountRegenerateKeyParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-855">Rigenera una chiave di accesso per l'account di database Azure Cosmos DB specificato.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-855">Regenerates an access key for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-856">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-856">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-857">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-857">Cosmos DB database account name.</span></span>
        - id: keyToRegenerate
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
          description: <span data-ttu-id="e2bc7-858">Il nome della chiave da rigenerare.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-858">The name of the key to regenerate.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraKeyspaceThroughput'
    name: 'updateCassandraKeyspaceThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-859">Aggiorna unità richiesta al secondo di un Keyspace Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-859">Update RUs per second of an Azure Cosmos DB Cassandra Keyspace</span></span>
    syntax:
      content: 'function updateCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-860">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-860">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-861">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-861">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-862">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-862">Cosmos DB keyspace name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-863">Le unità richiesta al secondo dei parametri a prevedere il Keyspace Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-863">The RUs per second of the parameters to provide for the current Cassandra Keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraTableThroughput'
    name: 'updateCassandraTableThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-864">Aggiorna unità richiesta al secondo di una tabella di Cassandra di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-864">Update RUs per second of an Azure Cosmos DB Cassandra table</span></span>
    syntax:
      content: 'function updateCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-865">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-865">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-866">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-866">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="e2bc7-867">Nome del keyspace COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-867">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-868">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-868">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-869">Le unità richiesta al secondo dei parametri per fornire per la tabella di Cassandra corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-869">The RUs per second of the parameters to provide for the current Cassandra table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinDatabaseThroughput'
    name: 'updateGremlinDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-870">Aggiorna unità richiesta al secondo di un database di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="e2bc7-870">Update RUs per second of an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function updateGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-871">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-871">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-872">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-872">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-873">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-873">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-874">Le unità richiesta al secondo dei parametri per fornire per il database corrente di Gremlin.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-874">The RUs per second of the parameters to provide for the current Gremlin database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinGraphThroughput'
    name: 'updateGremlinGraphThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-875">Aggiorna unità richiesta al secondo di un grafico di Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="e2bc7-875">Update RUs per second of an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function updateGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-876">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-876">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-877">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-877">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-878">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-878">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="e2bc7-879">Nome del grafico COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-879">Cosmos DB graph name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-880">Le unità richiesta al secondo dei parametri per fornire per il grafico di Gremlin corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-880">The RUs per second of the parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBCollectionThroughput'
    name: 'updateMongoDBCollectionThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-881">Aggiornare le unità richiesta al secondo di una raccolta di Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-881">Update the RUs per second of an Azure Cosmos DB MongoDB collection</span></span>
    syntax:
      content: 'function updateMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-882">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-882">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-883">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-883">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-884">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-884">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="e2bc7-885">Nome della raccolta di COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-885">Cosmos DB collection name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-886">Le unità richiesta al secondo dei parametri per fornire per la raccolta corrente di MongoDB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-886">The RUs per second of the parameters to provide for the current MongoDB collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBDatabaseThroughput'
    name: 'updateMongoDBDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-887">Aggiornare UR al secondo di un database di Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-887">Update RUs per second of the an Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function updateMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-888">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-888">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-889">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-889">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-890">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-890">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-891">Le unità richiesta al secondo dei parametri per fornire per il database MongoDB corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-891">The RUs per second of the parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlContainerThroughput'
    name: 'updateSqlContainerThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-892">Aggiorna unità richiesta al secondo di un contenitore di Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="e2bc7-892">Update RUs per second of an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function updateSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-893">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-893">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-894">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-894">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-895">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-895">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="e2bc7-896">Nome del contenitore COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-896">Cosmos DB container name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-897">I parametri da specificare per le unità richiesta al secondo del contenitore SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-897">The parameters to provide for the RUs per second of the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlDatabaseThroughput'
    name: 'updateSqlDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-898">Aggiorna unità richiesta al secondo di un database SQL di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-898">Update RUs per second of an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function updateSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-899">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-899">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-900">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-900">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="e2bc7-901">Nome del database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-901">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-902">I parametri da specificare per le unità richiesta al secondo del database SQL corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-902">The parameters to provide for the RUs per second of the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateTableThroughput'
    name: 'updateTableThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e2bc7-903">Aggiorna unità richiesta al secondo di una tabella di Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="e2bc7-903">Update RUs per second of an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function updateTableThroughput(resourceGroupName: string, accountName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e2bc7-904">Nome di un gruppo di risorse di Azure.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-904">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="e2bc7-905">Nome dell'account database COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-905">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="e2bc7-906">Nome della tabella COSMOS DB.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-906">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="e2bc7-907">I parametri da specificare per le unità richiesta al secondo della tabella corrente.</span><span class="sxs-lookup"><span data-stu-id="e2bc7-907">The parameters to provide for the RUs per second of the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
references:
  - uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
    name: CosmosDBManagementClientContext
    spec.typeScript:
      - name: CosmosDBManagementClientContext
        fullName: CosmosDBManagementClientContext
        uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
    name: DatabaseAccountCreateUpdateParameters
    spec.typeScript:
      - name: DatabaseAccountCreateUpdateParameters
        fullName: DatabaseAccountCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
    name: CassandraKeyspaceCreateUpdateParameters
    spec.typeScript:
      - name: CassandraKeyspaceCreateUpdateParameters
        fullName: CassandraKeyspaceCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
    name: CassandraTableCreateUpdateParameters
    spec.typeScript:
      - name: CassandraTableCreateUpdateParameters
        fullName: CassandraTableCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
    name: GremlinDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: GremlinDatabaseCreateUpdateParameters
        fullName: GremlinDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
    name: GremlinGraphCreateUpdateParameters
    spec.typeScript:
      - name: GremlinGraphCreateUpdateParameters
        fullName: GremlinGraphCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
    name: MongoDBCollectionCreateUpdateParameters
    spec.typeScript:
      - name: MongoDBCollectionCreateUpdateParameters
        fullName: MongoDBCollectionCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
    name: MongoDBDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: MongoDBDatabaseCreateUpdateParameters
        fullName: MongoDBDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
    name: SqlContainerCreateUpdateParameters
    spec.typeScript:
      - name: SqlContainerCreateUpdateParameters
        fullName: SqlContainerCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
    name: SqlDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: SqlDatabaseCreateUpdateParameters
        fullName: SqlDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.TableCreateUpdateParameters'
    name: TableCreateUpdateParameters
    spec.typeScript:
      - name: TableCreateUpdateParameters
        fullName: TableCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.TableCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.FailoverPolicies'
    name: FailoverPolicies
    spec.typeScript:
      - name: FailoverPolicies
        fullName: FailoverPolicies
        uid: '@azure/arm-cosmosdb.FailoverPolicies'
  - uid: '@azure/arm-cosmosdb.RegionForOnlineOffline'
    name: RegionForOnlineOffline
    spec.typeScript:
      - name: RegionForOnlineOffline
        fullName: RegionForOnlineOffline
        uid: '@azure/arm-cosmosdb.RegionForOnlineOffline'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
    name: DatabaseAccountPatchParameters
    spec.typeScript:
      - name: DatabaseAccountPatchParameters
        fullName: DatabaseAccountPatchParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
    name: DatabaseAccountRegenerateKeyParameters
    spec.typeScript:
      - name: DatabaseAccountRegenerateKeyParameters
        fullName: DatabaseAccountRegenerateKeyParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
  - uid: '@azure/arm-cosmosdb.ThroughputUpdateParameters'
    name: ThroughputUpdateParameters
    spec.typeScript:
      - name: ThroughputUpdateParameters
        fullName: ThroughputUpdateParameters
        uid: '@azure/arm-cosmosdb.ThroughputUpdateParameters'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
    name: DatabaseAccount>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccount
        fullName: DatabaseAccount
        uid: '@azure/arm-cosmosdb.DatabaseAccount'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
    name: CassandraKeyspace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraKeyspace
        fullName: CassandraKeyspace
        uid: '@azure/arm-cosmosdb.CassandraKeyspace'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.Throughput>
    name: Throughput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Throughput
        fullName: Throughput
        uid: '@azure/arm-cosmosdb.Throughput'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
    name: CassandraTable>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraTable
        fullName: CassandraTable
        uid: '@azure/arm-cosmosdb.CassandraTable'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
    name: GremlinDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinDatabase
        fullName: GremlinDatabase
        uid: '@azure/arm-cosmosdb.GremlinDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
    name: GremlinGraph>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinGraph
        fullName: GremlinGraph
        uid: '@azure/arm-cosmosdb.GremlinGraph'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
    name: MongoDBCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBCollection
        fullName: MongoDBCollection
        uid: '@azure/arm-cosmosdb.MongoDBCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
    name: MongoDBDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBDatabase
        fullName: MongoDBDatabase
        uid: '@azure/arm-cosmosdb.MongoDBDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
    name: DatabaseAccountListReadOnlyKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListReadOnlyKeysResult
        fullName: DatabaseAccountListReadOnlyKeysResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
    name: SqlContainer>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlContainer
        fullName: SqlContainer
        uid: '@azure/arm-cosmosdb.SqlContainer'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
    name: SqlDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlDatabase
        fullName: SqlDatabase
        uid: '@azure/arm-cosmosdb.SqlDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.Table>
    name: Table>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Table
        fullName: Table
        uid: '@azure/arm-cosmosdb.Table'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
    name: DatabaseAccountsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountsListResult
        fullName: DatabaseAccountsListResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountsListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
    name: CassandraKeyspaceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraKeyspaceListResult
        fullName: CassandraKeyspaceListResult
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
    name: CassandraTableListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraTableListResult
        fullName: CassandraTableListResult
        uid: '@azure/arm-cosmosdb.CassandraTableListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
    name: DatabaseAccountListConnectionStringsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListConnectionStringsResult
        fullName: DatabaseAccountListConnectionStringsResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
    name: GremlinDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinDatabaseListResult
        fullName: GremlinDatabaseListResult
        uid: '@azure/arm-cosmosdb.GremlinDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
    name: GremlinGraphListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinGraphListResult
        fullName: GremlinGraphListResult
        uid: '@azure/arm-cosmosdb.GremlinGraphListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
    name: DatabaseAccountListKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListKeysResult
        fullName: DatabaseAccountListKeysResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListKeysResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
    name: MetricDefinitionsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricDefinitionsListResult
        fullName: MetricDefinitionsListResult
        uid: '@azure/arm-cosmosdb.MetricDefinitionsListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
    name: MetricListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricListResult
        fullName: MetricListResult
        uid: '@azure/arm-cosmosdb.MetricListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
    name: MongoDBCollectionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBCollectionListResult
        fullName: MongoDBCollectionListResult
        uid: '@azure/arm-cosmosdb.MongoDBCollectionListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
    name: MongoDBDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBDatabaseListResult
        fullName: MongoDBDatabaseListResult
        uid: '@azure/arm-cosmosdb.MongoDBDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
    name: SqlContainerListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlContainerListResult
        fullName: SqlContainerListResult
        uid: '@azure/arm-cosmosdb.SqlContainerListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
    name: SqlDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlDatabaseListResult
        fullName: SqlDatabaseListResult
        uid: '@azure/arm-cosmosdb.SqlDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.TableListResult>
    name: TableListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TableListResult
        fullName: TableListResult
        uid: '@azure/arm-cosmosdb.TableListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
    name: UsagesResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UsagesResult
        fullName: UsagesResult
        uid: '@azure/arm-cosmosdb.UsagesResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
    name: DatabaseAccountsListUsagesOptionalParams
    spec.typeScript:
      - name: DatabaseAccountsListUsagesOptionalParams
        fullName: DatabaseAccountsListUsagesOptionalParams
        uid: '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'