### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-luis-authoring.Versions'
    name: Versions
    fullName: Versions
    children:
      - '@azure/cognitiveservices-luis-authoring.Versions.clone'
      - '@azure/cognitiveservices-luis-authoring.Versions.clone_1'
      - '@azure/cognitiveservices-luis-authoring.Versions.clone_2'
      - '@azure/cognitiveservices-luis-authoring.Versions.deleteMethod'
      - '@azure/cognitiveservices-luis-authoring.Versions.deleteMethod_2'
      - '@azure/cognitiveservices-luis-authoring.Versions.deleteMethod_1'
      - '@azure/cognitiveservices-luis-authoring.Versions.deleteUnlabelledUtterance'
      - '@azure/cognitiveservices-luis-authoring.Versions.deleteUnlabelledUtterance_2'
      - '@azure/cognitiveservices-luis-authoring.Versions.deleteUnlabelledUtterance_1'
      - '@azure/cognitiveservices-luis-authoring.Versions.exportMethod'
      - '@azure/cognitiveservices-luis-authoring.Versions.exportMethod_2'
      - '@azure/cognitiveservices-luis-authoring.Versions.exportMethod_1'
      - '@azure/cognitiveservices-luis-authoring.Versions.get'
      - '@azure/cognitiveservices-luis-authoring.Versions.get_2'
      - '@azure/cognitiveservices-luis-authoring.Versions.get_1'
      - '@azure/cognitiveservices-luis-authoring.Versions.importMethod'
      - '@azure/cognitiveservices-luis-authoring.Versions.importMethod_1'
      - '@azure/cognitiveservices-luis-authoring.Versions.importMethod_2'
      - '@azure/cognitiveservices-luis-authoring.Versions.list'
      - '@azure/cognitiveservices-luis-authoring.Versions.list_1'
      - '@azure/cognitiveservices-luis-authoring.Versions.list_2'
      - '@azure/cognitiveservices-luis-authoring.Versions.update'
      - '@azure/cognitiveservices-luis-authoring.Versions.update_2'
      - '@azure/cognitiveservices-luis-authoring.Versions.update_1'
      - '@azure/cognitiveservices-luis-authoring.Versions.constructor'
    langs:
      - typeScript
    type: class
    summary: Classe che rappresenta un versioni.
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.clone'
    name: 'clone(string, string, Models.VersionsCloneOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Crea una nuova versione usando lo snapshot corrente della versione dell'applicazione selezionata.
    syntax:
      content: 'function clone(appId: string, versionId: string, options?: Models.VersionsCloneOptionalParams)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: options
          type:
            - Models.VersionsCloneOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VersionsCloneResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.clone_1'
    name: 'clone(string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clone(appId: string, versionId: string, callback: ServiceCallback<string>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsCloneResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.clone_2'
    name: 'clone(string, string, VersionsCloneOptionalParams, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clone(appId: string, versionId: string, options: VersionsCloneOptionalParams, callback: ServiceCallback<string>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: options
          type:
            - '@azure/cognitiveservices-luis-authoring.VersionsCloneOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsCloneResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Elimina una versione dell'applicazione.
    syntax:
      content: 'function deleteMethod(appId: string, versionId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VersionsDeleteMethodResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(appId: string, versionId: string, options: RequestOptionsBase, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsDeleteMethodResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(appId: string, versionId: string, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsDeleteMethodResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.deleteUnlabelledUtterance'
    name: 'deleteUnlabelledUtterance(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Eliminare un sprovvisti utterance.
    syntax:
      content: 'function deleteUnlabelledUtterance(appId: string, versionId: string, utterance: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: utterance
          type:
            - string
          description: Testo utterance da eliminare.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VersionsDeleteUnlabelledUtteranceResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.deleteUnlabelledUtterance_2'
    name: 'deleteUnlabelledUtterance(string, string, string, RequestOptionsBase, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteUnlabelledUtterance(appId: string, versionId: string, utterance: string, options: RequestOptionsBase, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: utterance
          type:
            - string
          description: Testo utterance da eliminare.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsDeleteUnlabelledUtteranceResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.deleteUnlabelledUtterance_1'
    name: 'deleteUnlabelledUtterance(string, string, string, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteUnlabelledUtterance(appId: string, versionId: string, utterance: string, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: utterance
          type:
            - string
          description: Testo utterance da eliminare.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsDeleteUnlabelledUtteranceResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.exportMethod'
    name: 'exportMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Esporta un'applicazione di LUIS in formato JSON.
    syntax:
      content: 'function exportMethod(appId: string, versionId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VersionsExportMethodResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.exportMethod_2'
    name: 'exportMethod(string, string, RequestOptionsBase, ServiceCallback<LuisApp>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function exportMethod(appId: string, versionId: string, options: RequestOptionsBase, callback: ServiceCallback<LuisApp>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.LuisApp>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsExportMethodResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.exportMethod_1'
    name: 'exportMethod(string, string, ServiceCallback<LuisApp>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function exportMethod(appId: string, versionId: string, callback: ServiceCallback<LuisApp>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.LuisApp>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsExportMethodResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ottiene le informazioni sulla versione.
    syntax:
      content: 'function get(appId: string, versionId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VersionsGetResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<VersionInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(appId: string, versionId: string, options: RequestOptionsBase, callback: ServiceCallback<VersionInfo>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.VersionInfo>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsGetResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.get_1'
    name: 'get(string, string, ServiceCallback<VersionInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(appId: string, versionId: string, callback: ServiceCallback<VersionInfo>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.VersionInfo>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsGetResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.importMethod'
    name: 'importMethod(string, LuisApp, Models.VersionsImportMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Importa una nuova versione in un'applicazione LUIS.
    syntax:
      content: 'function importMethod(appId: string, luisApp: LuisApp, options?: Models.VersionsImportMethodOptionalParams)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: luisApp
          type:
            - '@azure/cognitiveservices-luis-authoring.LuisApp'
          description: Struttura dell'applicazione LUIS.
        - id: options
          type:
            - Models.VersionsImportMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VersionsImportMethodResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.importMethod_1'
    name: 'importMethod(string, LuisApp, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function importMethod(appId: string, luisApp: LuisApp, callback: ServiceCallback<string>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: luisApp
          type:
            - '@azure/cognitiveservices-luis-authoring.LuisApp'
          description: Struttura dell'applicazione LUIS.
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsImportMethodResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.importMethod_2'
    name: 'importMethod(string, LuisApp, VersionsImportMethodOptionalParams, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function importMethod(appId: string, luisApp: LuisApp, options: VersionsImportMethodOptionalParams, callback: ServiceCallback<string>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: luisApp
          type:
            - '@azure/cognitiveservices-luis-authoring.LuisApp'
          description: Struttura dell'applicazione LUIS.
        - id: options
          type:
            - '@azure/cognitiveservices-luis-authoring.VersionsImportMethodOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsImportMethodResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.list'
    name: 'list(string, Models.VersionsListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ottiene le informazioni di versioni dell'applicazione.
    syntax:
      content: 'function list(appId: string, options?: Models.VersionsListOptionalParams)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: options
          type:
            - Models.VersionsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VersionsListResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.list_1'
    name: 'list(string, ServiceCallback<VersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(appId: string, callback: ServiceCallback<VersionInfo[]>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-luis-authoring.VersionInfo[]>'
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsListResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.list_2'
    name: 'list(string, VersionsListOptionalParams, ServiceCallback<VersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(appId: string, options: VersionsListOptionalParams, callback: ServiceCallback<VersionInfo[]>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: options
          type:
            - '@azure/cognitiveservices-luis-authoring.VersionsListOptionalParams'
          description: I parametri facoltativi
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-luis-authoring.VersionInfo[]>'
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsListResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.update'
    name: 'update(string, string, TaskUpdateObject, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Aggiorna il nome o la descrizione della versione dell'applicazione.
    syntax:
      content: 'function update(appId: string, versionId: string, versionUpdateObject: TaskUpdateObject, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: versionUpdateObject
          type:
            - '@azure/cognitiveservices-luis-authoring.TaskUpdateObject'
          description: Un modello contenente il nome e descrizione dell'applicazione.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.VersionsUpdateResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.update_2'
    name: 'update(string, string, TaskUpdateObject, RequestOptionsBase, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(appId: string, versionId: string, versionUpdateObject: TaskUpdateObject, options: RequestOptionsBase, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: versionUpdateObject
          type:
            - '@azure/cognitiveservices-luis-authoring.TaskUpdateObject'
          description: Un modello contenente il nome e descrizione dell'applicazione.
        - id: options
          type:
            - RequestOptionsBase
          description: I parametri facoltativi
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsUpdateResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.update_1'
    name: 'update(string, string, TaskUpdateObject, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(appId: string, versionId: string, versionUpdateObject: TaskUpdateObject, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: appId
          type:
            - string
          description: ID dell'applicazione.
        - id: versionId
          type:
            - string
          description: L'ID versione.
        - id: versionUpdateObject
          type:
            - '@azure/cognitiveservices-luis-authoring.TaskUpdateObject'
          description: Un modello contenente il nome e descrizione dell'applicazione.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
          description: |
            Il callback
      return:
        type:
          - Promise<Models.VersionsUpdateResponse>
    package: '@azure/cognitiveservices-luis-authoring'
  - uid: '@azure/cognitiveservices-luis-authoring.Versions.constructor'
    name: Versions(LUISAuthoringClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creare una versione.
    syntax:
      content: 'new Versions(client: LUISAuthoringClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
          description: |
            Riferimento al client del servizio.
    package: '@azure/cognitiveservices-luis-authoring'
references:
  - uid: '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
    name: LUISAuthoringClientContext
    spec.typeScript:
      - name: LUISAuthoringClientContext
        fullName: LUISAuthoringClientContext
        uid: '@azure/cognitiveservices-luis-authoring.LUISAuthoringClientContext'
  - uid: '@azure/cognitiveservices-luis-authoring.VersionsCloneOptionalParams'
    name: VersionsCloneOptionalParams
    spec.typeScript:
      - name: VersionsCloneOptionalParams
        fullName: VersionsCloneOptionalParams
        uid: '@azure/cognitiveservices-luis-authoring.VersionsCloneOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-luis-authoring.OperationStatus>
    name: OperationStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatus
        fullName: OperationStatus
        uid: '@azure/cognitiveservices-luis-authoring.OperationStatus'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-luis-authoring.LuisApp>
    name: LuisApp>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LuisApp
        fullName: LuisApp
        uid: '@azure/cognitiveservices-luis-authoring.LuisApp'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-luis-authoring.VersionInfo>
    name: VersionInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VersionInfo
        fullName: VersionInfo
        uid: '@azure/cognitiveservices-luis-authoring.VersionInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-luis-authoring.LuisApp'
    name: LuisApp
    spec.typeScript:
      - name: LuisApp
        fullName: LuisApp
        uid: '@azure/cognitiveservices-luis-authoring.LuisApp'
  - uid: '@azure/cognitiveservices-luis-authoring.VersionsImportMethodOptionalParams'
    name: VersionsImportMethodOptionalParams
    spec.typeScript:
      - name: VersionsImportMethodOptionalParams
        fullName: VersionsImportMethodOptionalParams
        uid: '@azure/cognitiveservices-luis-authoring.VersionsImportMethodOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-luis-authoring.VersionInfo[]>'
    name: 'VersionInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VersionInfo
        fullName: VersionInfo
        uid: '@azure/cognitiveservices-luis-authoring.VersionInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-luis-authoring.VersionsListOptionalParams'
    name: VersionsListOptionalParams
    spec.typeScript:
      - name: VersionsListOptionalParams
        fullName: VersionsListOptionalParams
        uid: '@azure/cognitiveservices-luis-authoring.VersionsListOptionalParams'
  - uid: '@azure/cognitiveservices-luis-authoring.TaskUpdateObject'
    name: TaskUpdateObject
    spec.typeScript:
      - name: TaskUpdateObject
        fullName: TaskUpdateObject
        uid: '@azure/cognitiveservices-luis-authoring.TaskUpdateObject'