### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-features.OperationListResult'
    name: OperationListResult
    fullName: OperationListResult
    children:
      - '@azure/arm-features.OperationListResult.Array'
      - '@azure/arm-features.OperationListResult.concat'
      - '@azure/arm-features.OperationListResult.concat_1'
      - '@azure/arm-features.OperationListResult.copyWithin'
      - '@azure/arm-features.OperationListResult.entries'
      - '@azure/arm-features.OperationListResult.every'
      - '@azure/arm-features.OperationListResult.fill'
      - '@azure/arm-features.OperationListResult.filter_1'
      - '@azure/arm-features.OperationListResult.filter'
      - '@azure/arm-features.OperationListResult.find'
      - '@azure/arm-features.OperationListResult.find_1'
      - '@azure/arm-features.OperationListResult.findIndex'
      - '@azure/arm-features.OperationListResult.forEach'
      - '@azure/arm-features.OperationListResult.indexOf'
      - '@azure/arm-features.OperationListResult.join'
      - '@azure/arm-features.OperationListResult.keys'
      - '@azure/arm-features.OperationListResult.lastIndexOf'
      - '@azure/arm-features.OperationListResult.length'
      - '@azure/arm-features.OperationListResult.map'
      - '@azure/arm-features.OperationListResult.nextLink'
      - '@azure/arm-features.OperationListResult.pop'
      - '@azure/arm-features.OperationListResult.push'
      - '@azure/arm-features.OperationListResult.reduce'
      - '@azure/arm-features.OperationListResult.reduce_1'
      - '@azure/arm-features.OperationListResult.reduce_2'
      - '@azure/arm-features.OperationListResult.reduceRight'
      - '@azure/arm-features.OperationListResult.reduceRight_1'
      - '@azure/arm-features.OperationListResult.reduceRight_2'
      - '@azure/arm-features.OperationListResult.reverse'
      - '@azure/arm-features.OperationListResult.shift'
      - '@azure/arm-features.OperationListResult.slice'
      - '@azure/arm-features.OperationListResult.some'
      - '@azure/arm-features.OperationListResult.sort'
      - '@azure/arm-features.OperationListResult.splice_1'
      - '@azure/arm-features.OperationListResult.splice'
      - '@azure/arm-features.OperationListResult.toLocaleString'
      - '@azure/arm-features.OperationListResult.toString'
      - '@azure/arm-features.OperationListResult.unshift'
      - '@azure/arm-features.OperationListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-features.Operation>
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.concat'
    name: 'concat(ConcatArray<Operation>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-101">Combina due o più matrici.</span><span class="sxs-lookup"><span data-stu-id="4b449-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<Operation>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-features.Operation>[]'
          description: |
            <span data-ttu-id="4b449-102">Altri elementi da aggiungere alla fine della matrice1.</span><span class="sxs-lookup"><span data-stu-id="4b449-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-features.Operation[]'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-103">Combina due o più matrici.</span><span class="sxs-lookup"><span data-stu-id="4b449-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="4b449-104">Altri elementi da aggiungere alla fine della matrice1.</span><span class="sxs-lookup"><span data-stu-id="4b449-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-features.Operation[]'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-105">Restituisce questo oggetto dopo la copia di una sezione della matrice identificata dall''inizio e fine alla stessa matrice, iniziando in corrispondenza di destinazione di posizione</span><span class="sxs-lookup"><span data-stu-id="4b449-105">Returns the this object after copying a section of the array identified by start and end to the same array starting at position target</span></span>'
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: '<span data-ttu-id="4b449-106">Se destinazione è negativa, viene considerato lunghezza + dove length è la lunghezza della matrice di destinazione.</span><span class="sxs-lookup"><span data-stu-id="4b449-106">If target is negative, it is treated as length+target where length is the length of the array.</span></span>'
        - id: start
          type:
            - number
          description: '<span data-ttu-id="4b449-107">Se start è negativo, viene considerato start + length.</span><span class="sxs-lookup"><span data-stu-id="4b449-107">If start is negative, it is treated as length+start.</span></span> <span data-ttu-id="4b449-108">Se fine è negativa, viene considerato lunghezza + fine.</span><span class="sxs-lookup"><span data-stu-id="4b449-108">If end is negative, it is treated as length+end.</span></span>'
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="4b449-109">Se non specificato, lunghezza di questo oggetto viene usato come valore predefinito.</span><span class="sxs-lookup"><span data-stu-id="4b449-109">If not specified, length of the this object is used as its default value.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-110">Restituisce un oggetto iterabile, valore coppie di chiavi per ogni voce nella matrice</span><span class="sxs-lookup"><span data-stu-id="4b449-110">Returns an iterable of key, value pairs for every entry in the array</span></span>'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.every'
    name: 'every((value: Operation, index: number, array: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-111">Determina se tutti i membri della matrice soddisfano il test specificato.</span><span class="sxs-lookup"><span data-stu-id="4b449-111">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: Operation, index: number, array: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => boolean'
          description: '<span data-ttu-id="4b449-112">Una funzione che accetta fino a tre argomenti.</span><span class="sxs-lookup"><span data-stu-id="4b449-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="4b449-113">Di ogni metodo chiama la funzione callbackfn per ogni elemento matrice1 fino a quando il callbackfn restituisce false, o fino alla fine della matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-113">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="4b449-114">Un oggetto a cui la parola chiave this può fare riferimento nella funzione callbackfn.</span><span class="sxs-lookup"><span data-stu-id="4b449-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="4b449-115">Non è definito se thisArg viene omesso, viene usato come in questo valore.</span><span class="sxs-lookup"><span data-stu-id="4b449-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.fill'
    name: 'fill(Operation, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-116">Restituisce questo oggetto dopo averlo completato la sezione identificata da iniziare e terminano con valore</span><span class="sxs-lookup"><span data-stu-id="4b449-116">Returns the this object after filling the section identified by start and end with value</span></span>
    syntax:
      content: 'function fill(value: Operation, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-features.Operation'
          description: <span data-ttu-id="4b449-117">valore per riempire la sezione array con</span><span class="sxs-lookup"><span data-stu-id="4b449-117">value to fill array section with</span></span>
        - id: start
          type:
            - undefined | number
          description: '<span data-ttu-id="4b449-118">indice per iniziare a inserire nella matrice in corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="4b449-118">index to start filling the array at.</span></span> <span data-ttu-id="4b449-119">Se start è negativo, viene considerato lunghezza + start dove length è la lunghezza della matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-119">If start is negative, it is treated as length+start where length is the length of the array.</span></span>'
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="4b449-120">indice da interrompere la compilazione di matrice in corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="4b449-120">index to stop filling the array at.</span></span> <span data-ttu-id="4b449-121">Se fine è negativa, viene considerato lunghezza + fine.</span><span class="sxs-lookup"><span data-stu-id="4b449-121">If end is negative, it is treated as length+end.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.filter_1'
    name: 'filter((value: Operation, index: number, array: Operation[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-122">Restituisce gli elementi della matrice che soddisfa la condizione specificata in una funzione di callback.</span><span class="sxs-lookup"><span data-stu-id="4b449-122">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: Operation, index: number, array: Operation[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => any'
          description: <span data-ttu-id="4b449-123">Una funzione che accetta fino a tre argomenti.</span><span class="sxs-lookup"><span data-stu-id="4b449-123">A function that accepts up to three arguments.</span></span> <span data-ttu-id="4b449-124">Il metodo di filtro chiama la funzione callbackfn una sola volta per ogni elemento nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-124">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="4b449-125">Un oggetto a cui la parola chiave this può fare riferimento nella funzione callbackfn.</span><span class="sxs-lookup"><span data-stu-id="4b449-125">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="4b449-126">Non è definito se thisArg viene omesso, viene usato come in questo valore.</span><span class="sxs-lookup"><span data-stu-id="4b449-126">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-features.Operation[]'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.filter'
    name: 'filter((value: Operation, index: number, array: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-127">Restituisce gli elementi della matrice che soddisfa la condizione specificata in una funzione di callback.</span><span class="sxs-lookup"><span data-stu-id="4b449-127">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: Operation, index: number, array: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => boolean'
          description: <span data-ttu-id="4b449-128">Una funzione che accetta fino a tre argomenti.</span><span class="sxs-lookup"><span data-stu-id="4b449-128">A function that accepts up to three arguments.</span></span> <span data-ttu-id="4b449-129">Il metodo di filtro chiama la funzione callbackfn una sola volta per ogni elemento nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-129">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="4b449-130">Un oggetto a cui la parola chiave this può fare riferimento nella funzione callbackfn.</span><span class="sxs-lookup"><span data-stu-id="4b449-130">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="4b449-131">Non è definito se thisArg viene omesso, viene usato come in questo valore.</span><span class="sxs-lookup"><span data-stu-id="4b449-131">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.find'
    name: 'find((this: void, value: Operation, index: number, obj: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-132">Restituisce il valore del primo elemento nella matrice in cui predicato è true e non definito in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="4b449-132">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find<S>(predicate: (this: void, value: Operation, index: number, obj: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: Operation, index: number, obj: Operation[]) => boolean'
          description: '<span data-ttu-id="4b449-133">trovare il predicato chiamate una volta per ogni elemento della matrice, in ordine crescente, finché non ne trova uno in cui predicato restituisce true.</span><span class="sxs-lookup"><span data-stu-id="4b449-133">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="4b449-134">Se tale elemento viene trovato, find restituisce immediatamente il valore dell''elemento.</span><span class="sxs-lookup"><span data-stu-id="4b449-134">If such an element is found, find immediately returns that element value.</span></span> <span data-ttu-id="4b449-135">In caso contrario, find restituisce non definito.</span><span class="sxs-lookup"><span data-stu-id="4b449-135">Otherwise, find returns undefined.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="4b449-136">Se specificato, verrà usato come in questo valore per ogni chiamata del predicato.</span><span class="sxs-lookup"><span data-stu-id="4b449-136">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="4b449-137">Non è definito se non viene specificata, viene invece usato.</span><span class="sxs-lookup"><span data-stu-id="4b449-137">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.find_1'
    name: 'find((value: Operation, index: number, obj: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-138">Restituisce il valore del primo elemento nella matrice in cui predicato è true e non definito in caso contrario.</span><span class="sxs-lookup"><span data-stu-id="4b449-138">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find(predicate: (value: Operation, index: number, obj: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: Operation, index: number, obj: Operation[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-features.Operation | undefined'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.findIndex'
    name: 'findIndex((value: Operation, index: number, obj: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-139">Restituisce l''indice del primo elemento nella matrice in cui predicato è true e in caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="4b449-139">Returns the index of the first element in the array where predicate is true, and -1 otherwise.</span></span>'
    syntax:
      content: 'function findIndex(predicate: (value: Operation, index: number, obj: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: Operation, index: number, obj: Operation[]) => boolean'
          description: '<span data-ttu-id="4b449-140">trovare il predicato chiamate una volta per ogni elemento della matrice, in ordine crescente, finché non ne trova uno in cui predicato restituisce true.</span><span class="sxs-lookup"><span data-stu-id="4b449-140">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="4b449-141">Se tale elemento viene trovato, findIndex restituisce immediatamente tale indice di elemento.</span><span class="sxs-lookup"><span data-stu-id="4b449-141">If such an element is found, findIndex immediately returns that element index.</span></span> <span data-ttu-id="4b449-142">FindIndex in caso contrario, restituisce -1.</span><span class="sxs-lookup"><span data-stu-id="4b449-142">Otherwise, findIndex returns -1.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="4b449-143">Se specificato, verrà usato come in questo valore per ogni chiamata del predicato.</span><span class="sxs-lookup"><span data-stu-id="4b449-143">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="4b449-144">Non è definito se non viene specificata, viene invece usato.</span><span class="sxs-lookup"><span data-stu-id="4b449-144">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.forEach'
    name: 'forEach((value: Operation, index: number, array: Operation[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-145">Esegue l'azione specificata per ogni elemento nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-145">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: Operation, index: number, array: Operation[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => void'
          description: <span data-ttu-id="4b449-146">Una funzione che accetta fino a tre argomenti.</span><span class="sxs-lookup"><span data-stu-id="4b449-146">A function that accepts up to three arguments.</span></span> <span data-ttu-id="4b449-147">forEach chiama la funzione callbackfn una sola volta per ogni elemento nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-147">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="4b449-148">Un oggetto a cui la parola chiave this può fare riferimento nella funzione callbackfn.</span><span class="sxs-lookup"><span data-stu-id="4b449-148">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="4b449-149">Non è definito se thisArg viene omesso, viene usato come in questo valore.</span><span class="sxs-lookup"><span data-stu-id="4b449-149">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.indexOf'
    name: 'indexOf(Operation, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-150">Restituisce l'indice della prima occorrenza di un valore in una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-150">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: Operation, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-features.Operation'
          description: <span data-ttu-id="4b449-151">Valore da individuare nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-151">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="4b449-152">Indice della matrice in corrispondenza del quale iniziare la ricerca.</span><span class="sxs-lookup"><span data-stu-id="4b449-152">The array index at which to begin the search.</span></span> <span data-ttu-id="4b449-153">Se fromIndex viene omesso, la ricerca inizia in corrispondenza dell'indice 0.</span><span class="sxs-lookup"><span data-stu-id="4b449-153">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-154">Aggiunge gli elementi della matrice separati dalla stringa di separazione specificata.</span><span class="sxs-lookup"><span data-stu-id="4b449-154">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            <span data-ttu-id="4b449-155">Una stringa utilizzata per separare un elemento della matrice dall'elemento successivo nella stringa risultante.</span><span class="sxs-lookup"><span data-stu-id="4b449-155">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="4b449-156">Se omesso, gli elementi della matrice sono separati da una virgola.</span><span class="sxs-lookup"><span data-stu-id="4b449-156">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-157">Restituisce un oggetto iterabile delle chiavi nella matrice</span><span class="sxs-lookup"><span data-stu-id="4b449-157">Returns an iterable of keys in the array</span></span>
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.lastIndexOf'
    name: 'lastIndexOf(Operation, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-158">Restituisce l'indice dell'ultima occorrenza di un valore specificato in una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-158">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: Operation, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-features.Operation'
          description: <span data-ttu-id="4b449-159">Valore da individuare nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-159">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="4b449-160">Indice della matrice in corrispondenza del quale iniziare la ricerca.</span><span class="sxs-lookup"><span data-stu-id="4b449-160">The array index at which to begin the search.</span></span> <span data-ttu-id="4b449-161">Se fromIndex viene omesso, la ricerca inizia in corrispondenza dell'ultimo indice nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-161">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="4b449-162">Ottiene o imposta la lunghezza della matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-162">Gets or sets the length of the array.</span></span> <span data-ttu-id="4b449-163">Si tratta di un numero di uno rispetto all'elemento massimo definito in una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-163">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.map'
    name: 'map((value: Operation, index: number, array: Operation[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-164">Chiama una funzione di callback definita in ogni elemento della matrice e restituisce una matrice che contiene i risultati.</span><span class="sxs-lookup"><span data-stu-id="4b449-164">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: Operation, index: number, array: Operation[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => U'
          description: <span data-ttu-id="4b449-165">Una funzione che accetta fino a tre argomenti.</span><span class="sxs-lookup"><span data-stu-id="4b449-165">A function that accepts up to three arguments.</span></span> <span data-ttu-id="4b449-166">Il metodo map chiama la funzione callbackfn una sola volta per ogni elemento nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-166">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="4b449-167">Un oggetto a cui la parola chiave this può fare riferimento nella funzione callbackfn.</span><span class="sxs-lookup"><span data-stu-id="4b449-167">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="4b449-168">Non è definito se thisArg viene omesso, viene usato come in questo valore.</span><span class="sxs-lookup"><span data-stu-id="4b449-168">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-169">Rimuove l'ultimo elemento da una matrice e lo restituisce.</span><span class="sxs-lookup"><span data-stu-id="4b449-169">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-features.Operation | undefined'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.push'
    name: 'push(Operation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-170">Aggiunge nuovi elementi a una matrice e restituisce la nuova lunghezza della matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-170">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: Operation[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-features.Operation[]'
          description: |
            <span data-ttu-id="4b449-171">Nuovi elementi della matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-171">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.reduce'
    name: 'reduce((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-172">Chiama la funzione di callback specificati per tutti gli elementi in una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-172">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="4b449-173">Il valore restituito della funzione di callback è il risultato accumulato e viene fornito come argomento nella chiamata successiva alla funzione di callback.</span><span class="sxs-lookup"><span data-stu-id="4b449-173">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: <span data-ttu-id="4b449-174">Una funzione che accetta fino a quattro argomenti.</span><span class="sxs-lookup"><span data-stu-id="4b449-174">A function that accepts up to four arguments.</span></span> <span data-ttu-id="4b449-175">Metodo reduce chiama la funzione callbackfn una sola volta per ogni elemento nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-175">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-features.Operation'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.reduce_1'
    name: 'reduce((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-176">Chiama la funzione di callback specificati per tutti gli elementi in una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-176">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="4b449-177">Il valore restituito della funzione di callback è il risultato accumulato e viene fornito come argomento nella chiamata successiva alla funzione di callback.</span><span class="sxs-lookup"><span data-stu-id="4b449-177">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, initialValue: Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-features.Operation'
          description: ''
      return:
        type:
          - '@azure/arm-features.Operation'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-178">Chiama la funzione di callback specificati per tutti gli elementi in una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-178">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="4b449-179">Il valore restituito della funzione di callback è il risultato accumulato e viene fornito come argomento nella chiamata successiva alla funzione di callback.</span><span class="sxs-lookup"><span data-stu-id="4b449-179">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U'
          description: <span data-ttu-id="4b449-180">Una funzione che accetta fino a quattro argomenti.</span><span class="sxs-lookup"><span data-stu-id="4b449-180">A function that accepts up to four arguments.</span></span> <span data-ttu-id="4b449-181">Metodo reduce chiama la funzione callbackfn una sola volta per ogni elemento nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-181">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="4b449-182">Se viene specificato initialValue, utilizzato come valore iniziale per avviare l'accumulo.</span><span class="sxs-lookup"><span data-stu-id="4b449-182">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="4b449-183">La prima chiamata alla funzione callbackfn fornisce questo valore come argomento anziché un valore di matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-183">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.reduceRight'
    name: 'reduceRight((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-184">Chiama la funzione di callback specificati per tutti gli elementi in una matrice, in ordine decrescente.</span><span class="sxs-lookup"><span data-stu-id="4b449-184">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="4b449-185">Il valore restituito della funzione di callback è il risultato accumulato e viene fornito come argomento nella chiamata successiva alla funzione di callback.</span><span class="sxs-lookup"><span data-stu-id="4b449-185">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: <span data-ttu-id="4b449-186">Una funzione che accetta fino a quattro argomenti.</span><span class="sxs-lookup"><span data-stu-id="4b449-186">A function that accepts up to four arguments.</span></span> <span data-ttu-id="4b449-187">Metodo reduceRight chiama funzione callbackfn una sola volta per ogni elemento nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-187">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-features.Operation'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.reduceRight_1'
    name: 'reduceRight((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-188">Chiama la funzione di callback specificati per tutti gli elementi in una matrice, in ordine decrescente.</span><span class="sxs-lookup"><span data-stu-id="4b449-188">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="4b449-189">Il valore restituito della funzione di callback è il risultato accumulato e viene fornito come argomento nella chiamata successiva alla funzione di callback.</span><span class="sxs-lookup"><span data-stu-id="4b449-189">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, initialValue: Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-features.Operation'
          description: ''
      return:
        type:
          - '@azure/arm-features.Operation'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-190">Chiama la funzione di callback specificati per tutti gli elementi in una matrice, in ordine decrescente.</span><span class="sxs-lookup"><span data-stu-id="4b449-190">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="4b449-191">Il valore restituito della funzione di callback è il risultato accumulato e viene fornito come argomento nella chiamata successiva alla funzione di callback.</span><span class="sxs-lookup"><span data-stu-id="4b449-191">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U'
          description: <span data-ttu-id="4b449-192">Una funzione che accetta fino a quattro argomenti.</span><span class="sxs-lookup"><span data-stu-id="4b449-192">A function that accepts up to four arguments.</span></span> <span data-ttu-id="4b449-193">Metodo reduceRight chiama funzione callbackfn una sola volta per ogni elemento nella matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-193">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="4b449-194">Se viene specificato initialValue, utilizzato come valore iniziale per avviare l'accumulo.</span><span class="sxs-lookup"><span data-stu-id="4b449-194">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="4b449-195">La prima chiamata alla funzione callbackfn fornisce questo valore come argomento anziché un valore di matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-195">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-196">Inverte gli elementi in una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-196">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-features.Operation[]'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-197">Rimuove il primo elemento da una matrice e lo restituisce.</span><span class="sxs-lookup"><span data-stu-id="4b449-197">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-features.Operation | undefined'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-198">Restituisce una sezione di una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-198">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: <span data-ttu-id="4b449-199">Inizio della parte specificata della matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-199">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="4b449-200">Fine della parte specificata della matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-200">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-features.Operation[]'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.some'
    name: 'some((value: Operation, index: number, array: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-201">Determina se la funzione di callback specificata restituisce true per qualsiasi elemento della matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-201">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: Operation, index: number, array: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => boolean'
          description: '<span data-ttu-id="4b449-202">Una funzione che accetta fino a tre argomenti.</span><span class="sxs-lookup"><span data-stu-id="4b449-202">A function that accepts up to three arguments.</span></span> <span data-ttu-id="4b449-203">Alcuni metodo chiama la funzione callbackfn per ogni elemento in matrice1 fino a quando il callbackfn restituisce true o fino alla fine della matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-203">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="4b449-204">Un oggetto a cui la parola chiave this può fare riferimento nella funzione callbackfn.</span><span class="sxs-lookup"><span data-stu-id="4b449-204">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="4b449-205">Non è definito se thisArg viene omesso, viene usato come in questo valore.</span><span class="sxs-lookup"><span data-stu-id="4b449-205">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.sort'
    name: 'sort(undefined | (a: Operation, b: Operation) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-206">Consente di ordinare una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-206">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: undefined | (a: Operation, b: Operation) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: Operation, b: Operation) => number'
          description: |
            <span data-ttu-id="4b449-207">Il nome della funzione utilizzato per determinare l'ordine degli elementi.</span><span class="sxs-lookup"><span data-stu-id="4b449-207">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="4b449-208">Se omesso, gli elementi vengono disposti nell'ordine dei caratteri ASCII crescente.</span><span class="sxs-lookup"><span data-stu-id="4b449-208">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.splice_1'
    name: 'splice(number, number, Operation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-209">Rimuove gli elementi da una matrice e, se necessario, lo inserisce nuovi elementi al loro posto, restituendo quelli eliminati.</span><span class="sxs-lookup"><span data-stu-id="4b449-209">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: Operation[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="4b449-210">Posizione a base zero nella matrice da cui iniziare la rimozione di elementi.</span><span class="sxs-lookup"><span data-stu-id="4b449-210">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="4b449-211">Il numero di elementi da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="4b449-211">The number of elements to remove.</span></span>
        - id: items
          type:
            - '@azure/arm-features.Operation[]'
          description: |
            <span data-ttu-id="4b449-212">Elementi da inserire nella matrice al posto di elementi eliminati.</span><span class="sxs-lookup"><span data-stu-id="4b449-212">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - '@azure/arm-features.Operation[]'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="4b449-213">Rimuove gli elementi da una matrice e, se necessario, lo inserisce nuovi elementi al loro posto, restituendo quelli eliminati.</span><span class="sxs-lookup"><span data-stu-id="4b449-213">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="4b449-214">Posizione a base zero nella matrice da cui iniziare la rimozione di elementi.</span><span class="sxs-lookup"><span data-stu-id="4b449-214">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - undefined | number
          description: |
            <span data-ttu-id="4b449-215">Il numero di elementi da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="4b449-215">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-features.Operation[]'
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-216">Restituisce una rappresentazione di stringa di una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-216">Returns a string representation of an array.</span></span> <span data-ttu-id="4b449-217">Gli elementi vengono convertiti in stringa utilizzando i relativi metodi toLocalString.</span><span class="sxs-lookup"><span data-stu-id="4b449-217">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-218">Restituisce una rappresentazione di stringa di una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-218">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.unshift'
    name: 'unshift(Operation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-219">Inserisce nuovi elementi all'inizio di una matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-219">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: Operation[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-features.Operation[]'
          description: |
            <span data-ttu-id="4b449-220">Elementi da inserire all'inizio della matrice.</span><span class="sxs-lookup"><span data-stu-id="4b449-220">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-features'
  - uid: '@azure/arm-features.OperationListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="4b449-221">Restituisce un oggetto iterabile di valori nella matrice</span><span class="sxs-lookup"><span data-stu-id="4b449-221">Returns an iterable of values in the array</span></span>
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-features.Operation>
    package: '@azure/arm-features'
references:
  - uid: Array<@azure/arm-features.Operation>
    name: Operation>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-features.Operation'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-features.Operation>[]'
    name: 'Operation>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-features.Operation'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-features.Operation[]'
    name: 'Operation[]'
    spec.typeScript:
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-features.Operation'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-features.Operation'
    name: Operation
    spec.typeScript:
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-features.Operation'
  - uid: '@azure/arm-features.Operation | undefined'
    name: Operation | undefined
    spec.typeScript:
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-features.Operation'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-features.Operation>
    name: Operation>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-features.Operation'
      - name: '>'
        fullName: '>'