### YamlMime:UniversalReference
ms.openlocfilehash: 4ebb32f87ada52fdc7366c00a14156400684884b
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/22/2018
ms.locfileid: "41686110"
items:
- uid: azure-event-processor-host.EventProcessorHost
  name: EventProcessorHost
  fullName: EventProcessorHost
  children:
  - azure-event-processor-host.EventProcessorHost.autoCheckpoint
  - azure-event-processor-host.EventProcessorHost.closed
  - azure-event-processor-host.EventProcessorHost.consumerGroup
  - azure-event-processor-host.EventProcessorHost.createFromAadTokenCredentials
  - azure-event-processor-host.EventProcessorHost.createFromConnectionString
  - azure-event-processor-host.EventProcessorHost.createHostName
  - azure-event-processor-host.EventProcessorHost.error
  - azure-event-processor-host.EventProcessorHost.constructor
  - azure-event-processor-host.EventProcessorHost.getHubRuntimeInformation
  - azure-event-processor-host.EventProcessorHost.getPartitionIds
  - azure-event-processor-host.EventProcessorHost.getPartitionInformation
  - azure-event-processor-host.EventProcessorHost.hostName
  - azure-event-processor-host.EventProcessorHost.message
  - azure-event-processor-host.EventProcessorHost.opened
  - azure-event-processor-host.EventProcessorHost.start
  - azure-event-processor-host.EventProcessorHost.stop
  langs:
  - typeScript
  type: class
  summary: Descrive l'Host processore di eventi per elaborare gli eventi da un hub eventi.
  extends:
    name: EventEmitter
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.autoCheckpoint
  name: autoCheckpoint
  fullName: autoCheckpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: "{boolean} autoCheckpoint automaticamente checkpoint l'offset per conto del cliente. Il valore predefinito: `true`."
  syntax:
    content: 'autoCheckpoint: boolean'
    return:
      type:
      - boolean
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.closed
  name: closed
  fullName: closed
  children: []
  langs:
  - typeScript
  type: property
  summary: "Chiuso: Attivata ogni volta che una partizione perde il lease e deve interrompere la ricezione o quando l'host è stato arrestato. Il PartitionContext e il motivo di chiusura viene passato al listener di eventi."
  syntax:
    content: 'static closed: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.consumerGroup
  name: consumerGroup
  fullName: consumerGroup
  children: []
  langs:
  - typeScript
  type: property
  summary: Fornisce il consumer nome del gruppo per l'host processore di eventi.
  syntax:
    content: 'consumerGroup: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.createFromAadTokenCredentials
  name: createFromAadTokenCredentials
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un nuovo host per elaborare gli eventi da un Hub eventi.
  syntax:
    content: 'static function createFromAadTokenCredentials(hostName: string, storageConnectionString: string, namespace: string, eventHubPath: string, credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, options?: EventProcessorOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nome dell'host del processore. DEVE ESSERE UNIVOCO.

        Fortemente consigliabile includere un prefisso con un guid o un Guid per garantire l'univocità. È possibile usare `EventProcessorHost.createHostName("your-prefix")`; Valore predefinito: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Stringa di connessione all'account di archiviazione di Azure usato per i lease e creazione di checkpoint. Esempio DefaultEndpointsProtocol = https; AccountName = < account-name >; AccountKey = < account-key >; EndpointSuffix=core.windows.net
    - id: namespace
      type:
      - string
      description: >-
        Nome di dominio completo per gli hub eventi.

        Esempio: "{your-sb-namespace}. amp;#42;.ServiceBus.Windows.NET"
    - id: eventHubPath
      type:
      - string
      description: Nome dell'hub eventi.
    - id: credentials
      type:
      - ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials
      description: 'Le credenziali del Token di AAD. Può essere uno dei seguenti: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials.'
    - id: options
      type:
      - azure-event-processor-host.EventProcessorOptions
      description: ''
      optional: true
    return:
      type:
      - azure-event-processor-host.EventProcessorHost
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.createFromConnectionString
  name: createFromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un nuovo host per elaborare gli eventi da un Hub eventi.
  syntax:
    content: 'static function createFromConnectionString(hostName: string, storageConnectionString: string, eventHubConnectionString: string, options?: ConnectionStringBasedOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nome dell'host del processore. DEVE ESSERE UNIVOCO.

        Fortemente consigliabile includere un prefisso con un guid o un Guid per garantire l'univocità. È possibile usare `EventProcessorHost.createHostName("your-prefix")`; Valore predefinito: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Stringa di connessione all'account di archiviazione di Azure usato per i lease e creazione di checkpoint. Esempio DefaultEndpointsProtocol = https; AccountName = < account-name >; AccountKey = < account-key >; EndpointSuffix=core.windows.net
    - id: eventHubConnectionString
      type:
      - string
      description: >-
        Stringa di connessione per l'Hub eventi ricevere da.

        Esempio: ' Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/; SharedAccessKeyName = my-SA-name; SharedAccessKey = my-SA-key'
    - id: options
      type:
      - azure-event-processor-host.ConnectionStringBasedOptions
      description: ''
      optional: true
    return:
      type:
      - azure-event-processor-host.EventProcessorHost
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.createHostName
  name: createHostName
  children: []
  type: method
  langs:
  - typeScript
  summary: Metodo pratico per la generazione del nome host univoco.
  syntax:
    content: 'static function createHostName(prefix?: string)'
    parameters:
    - id: prefix
      type:
      - string
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.error
  name: error
  fullName: error
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Errore: Generato quando si verifica un errore in un ricevitore specificato. Il listener di eventi viene passato il EventHubsError o un oggetto di errore generico.'
  syntax:
    content: 'static error: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.constructor
  name: EventProcessorHost
  children: []
  type: constructor
  langs:
  - typeScript
  summary: Crea un nuovo host per elaborare gli eventi da un Hub eventi.
  syntax:
    content: 'new EventProcessorHost(hostName: string, storageConnectionString: string, eventHubClient: EventHubClient, options?: EventProcessorOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nome dell'host del processore. DEVE ESSERE UNIVOCO.

        Fortemente consigliabile includere un prefisso con un guid o un Guid per garantire l'univocità. È possibile usare `EventProcessorHost.createHostName("your-prefix")`; Valore predefinito: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Stringa di connessione all'account di archiviazione di Azure usato per i lease e creazione di checkpoint. Esempio DefaultEndpointsProtocol = https; AccountName = < account-name >; AccountKey = < account-key >; EndpointSuffix=core.windows.net
    - id: eventHubClient
      type:
      - EventHubClient
      description: Il client di hub eventi
    - id: options
      type:
      - azure-event-processor-host.EventProcessorOptions
      description: ''
      optional: true
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.getHubRuntimeInformation
  name: getHubRuntimeInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: Fornisce le informazioni di runtime di hub eventi.
  syntax:
    content: function getHubRuntimeInformation()
    parameters: []
    return:
      type:
      - Promise<EventHubRuntimeInformation>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.getPartitionIds
  name: getPartitionIds
  children: []
  type: method
  langs:
  - typeScript
  summary: Fornisce una matrice di partitionIds.
  syntax:
    content: function getPartitionIds()
    parameters: []
    return:
      type:
      - Promise<string[]>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.getPartitionInformation
  name: getPartitionInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: Vengono fornite informazioni sulla partizione specificata.
  syntax:
    content: 'function getPartitionInformation(partitionId: string | number)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: >
        ID di partizione per la partizione in cui sono richieste informazioni.
    return:
      type:
      - Promise<EventHubPartitionRuntimeInformation>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.hostName
  name: hostName
  fullName: hostName
  children: []
  langs:
  - typeScript
  type: property
  summary: Fornisce il nome host per l'host processore di eventi.
  syntax:
    content: 'hostName: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.message
  name: message
  fullName: message
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Messaggio: Attivata ogni volta che un messaggio proviene da una determinata partizione. Il PartitionContext ed EventData viene passato al listener di eventi.'
  syntax:
    content: 'static message: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.opened
  name: opened
  fullName: opened
  children: []
  langs:
  - typeScript
  type: property
  summary: 'Aperto: Attivata ogni volta che una partizione Ottiene il lease. Il PartitionContext viene passato al listener di eventi.'
  syntax:
    content: 'static opened: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.start
  name: start
  children: []
  type: method
  langs:
  - typeScript
  summary: Avvia l'host processore di eventi, il recupero dell'elenco di partizioni, filtrarli (facoltativamente) e il tentativo di recuperare i lease su set (filtrato). Per ogni lease ha esito positivo, ottenere i dettagli del BLOB e avviare un ricevitore nel punto in cui è stata interrotta in precedenza.
  syntax:
    content: 'function start(options?: StartEPHOptions)'
    parameters:
    - id: options
      type:
      - azure-event-processor-host.StartEPHOptions
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorHost.stop
  name: stop
  children: []
  type: method
  langs:
  - typeScript
  summary: Arresta EventProcessorHost dall'elaborazione di messaggi.
  syntax:
    content: function stop()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-processor-host
references:
- uid: azure-event-processor-host.EventProcessorOptions
  spec.typeScript:
  - name: EventProcessorOptions
    fullName: EventProcessorOptions
    uid: azure-event-processor-host.EventProcessorOptions
- uid: azure-event-processor-host.StartEPHOptions
  spec.typeScript:
  - name: StartEPHOptions
    fullName: StartEPHOptions
    uid: azure-event-processor-host.StartEPHOptions
- uid: azure-event-processor-host.EventProcessorHost
  spec.typeScript:
  - name: EventProcessorHost
    fullName: EventProcessorHost
    uid: azure-event-processor-host.EventProcessorHost
- uid: azure-event-processor-host.ConnectionStringBasedOptions
  spec.typeScript:
  - name: ConnectionStringBasedOptions
    fullName: ConnectionStringBasedOptions
    uid: azure-event-processor-host.ConnectionStringBasedOptions
