### YamlMime:UniversalReference
ms.openlocfilehash: 9ece7f239c8a58526776105855360371d51195db
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/22/2018
ms.locfileid: "41694129"
items:
- uid: azure-event-processor-host.PartitionContext
  name: PartitionContext
  fullName: PartitionContext
  children:
  - azure-event-processor-host.PartitionContext.checkpoint
  - azure-event-processor-host.PartitionContext.lease
  - azure-event-processor-host.PartitionContext.constructor
  - azure-event-processor-host.PartitionContext.partitionId
  - azure-event-processor-host.PartitionContext.setCheckpointInfo
  - azure-event-processor-host.PartitionContext.updateCheckpointDataFromEventData
  - azure-event-processor-host.PartitionContext.updateCheckpointInfoFromLease
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="c1195-101">Descrive il contesto di partizione.</span><span class="sxs-lookup"><span data-stu-id="c1195-101">Describes the Partition Context.</span></span>
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.checkpoint
  name: checkpoint
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c1195-102">Archivia i dati di checkpoint nell'oggetto blob appropriato, presupponendo che il lease viene mantenuto (in caso contrario, Rifiuta).</span><span class="sxs-lookup"><span data-stu-id="c1195-102">Stores the checkpoint data into the appropriate blob, assuming the lease is held (otherwise, rejects).</span></span>

    <span data-ttu-id="c1195-103">I dati del checkpoint sono strutturati come un payload JSON (ad esempio): `{ "PartitionId":"0","Owner":"ephtest","Token":"48e209e3-55f0-41b8-a8dd-d9c09ff6c35a",

    "Epoch":1,"Offset":"","SequenceNumber":0}`.</span><span class="sxs-lookup"><span data-stu-id="c1195-103">The checkpoint data is structured as a JSON payload (example): `{ "PartitionId":"0","Owner":"ephtest","Token":"48e209e3-55f0-41b8-a8dd-d9c09ff6c35a",

    "Epoch":1,"Offset":"","SequenceNumber":0}`.</span></span> <span data-ttu-id="c1195-104">Il formato e la distinzione tra maiuscole e delle chiavi nell'oggetto è sincronizzato con il sdk .net di hub eventi.</span><span class="sxs-lookup"><span data-stu-id="c1195-104">The format and the casing of keys in the object is in sync with the .net sdk of EventHubs.</span></span>
  syntax:
    content: function checkpoint()
    parameters: []
    return:
      type:
      - Promise<azure-event-processor-host.CheckpointInfo | void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.lease
  name: lease
  fullName: lease
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="c1195-105">proprietario {stringa} il nome del proprietario.</span><span class="sxs-lookup"><span data-stu-id="c1195-105">{string} owner The name of the owner.</span></span>
  syntax:
    content: 'lease: BlobLease'
    return:
      type:
      - azure-event-processor-host.BlobLease
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.constructor
  name: PartitionContext
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="c1195-106">Crea un nuovo PartitionContext.</span><span class="sxs-lookup"><span data-stu-id="c1195-106">Creates a new PartitionContext.</span></span>
  syntax:
    content: 'new PartitionContext(partitionId: string, owner: string, lease: BlobLease)'
    parameters:
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="c1195-107">L'id di partizione dell'hub eventi.</span><span class="sxs-lookup"><span data-stu-id="c1195-107">The eventhub partition id.</span></span>
    - id: owner
      type:
      - string
      description: <span data-ttu-id="c1195-108">Il nome del proprietario.</span><span class="sxs-lookup"><span data-stu-id="c1195-108">The name of the owner.</span></span>
    - id: lease
      type:
      - azure-event-processor-host.BlobLease
      description: >
        <span data-ttu-id="c1195-109">Oggetto lease.</span><span class="sxs-lookup"><span data-stu-id="c1195-109">The lease object.</span></span>
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.partitionId
  name: partitionId
  fullName: partitionId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="c1195-110">partitionId {stringa} l'id di partizione dell'hub eventi.</span><span class="sxs-lookup"><span data-stu-id="c1195-110">{string} partitionId The eventhub partition id.</span></span>
  syntax:
    content: 'partitionId: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.setCheckpointInfo
  name: setCheckpointInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c1195-111">Imposta le informazioni di checkpoint.</span><span class="sxs-lookup"><span data-stu-id="c1195-111">Sets the checkpoint info.</span></span>
  syntax:
    content: 'function setCheckpointInfo(owner: string, token: string, epoch: number, offset: string, sequenceNumber: number)'
    parameters:
    - id: owner
      type:
      - string
      description: <span data-ttu-id="c1195-112">Nome del proprietario.</span><span class="sxs-lookup"><span data-stu-id="c1195-112">Name of the owner.</span></span>
    - id: token
      type:
      - string
      description: <span data-ttu-id="c1195-113">La stringa del token.</span><span class="sxs-lookup"><span data-stu-id="c1195-113">The token string.</span></span>
    - id: epoch
      type:
      - number
      description: <span data-ttu-id="c1195-114">Il valore epoch.</span><span class="sxs-lookup"><span data-stu-id="c1195-114">The epoch value.</span></span>
    - id: offset
      type:
      - string
      description: <span data-ttu-id="c1195-115">L'offset del messaggio nel flusso di eventi.</span><span class="sxs-lookup"><span data-stu-id="c1195-115">The offset of the message in the event stream.</span></span>
    - id: sequenceNumber
      type:
      - number
      description: >
        <span data-ttu-id="c1195-116">Il numero di sequnce del messaggio nel flusso di eventi</span><span class="sxs-lookup"><span data-stu-id="c1195-116">The sequnce number of the message in the event stream</span></span>
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.updateCheckpointDataFromEventData
  name: updateCheckpointDataFromEventData
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="c1195-117">Aggiorna i dati dal messaggio, che deve disporre di un campo di annotazioni contenente un elemento, ad esempio: "x-opt-sequence-number":6,"x-opt-offset":"480","x-opt-enqueued-time":"2015-12-18T17:26:49.331Z"</span><span class="sxs-lookup"><span data-stu-id="c1195-117">Updates data from the message, which should have an annotations field containing something like: "x-opt-sequence-number":6,"x-opt-offset":"480","x-opt-enqueued-time":"2015-12-18T17:26:49.331Z"</span></span>'
  syntax:
    content: 'function updateCheckpointDataFromEventData(eventData: EventData)'
    parameters:
    - id: eventData
      type:
      - EventData
      description: >
        <span data-ttu-id="c1195-118">I dati dell'evento ricevuti dal EventHubReceiver.</span><span class="sxs-lookup"><span data-stu-id="c1195-118">The event data received from the EventHubReceiver.</span></span>
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.updateCheckpointInfoFromLease
  name: updateCheckpointInfoFromLease
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c1195-119">Aggiorna i dati del checkpoint dal lease di proprietà.</span><span class="sxs-lookup"><span data-stu-id="c1195-119">Updates the checkpoint data from the owned lease.</span></span>
  syntax:
    content: function updateCheckpointInfoFromLease()
    parameters: []
    return:
      type:
      - Promise<azure-event-processor-host.CheckpointInfo>
  package: azure-event-processor-host
references:
- uid: azure-event-processor-host.BlobLease
  spec.typeScript:
  - name: BlobLease
    fullName: BlobLease
    uid: azure-event-processor-host.BlobLease
- uid: Promise<azure-event-processor-host.CheckpointInfo | void>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: azure-event-processor-host.CheckpointInfo
  - name: " | void>"
    fullName: " | void>"
- uid: Promise<azure-event-processor-host.CheckpointInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: azure-event-processor-host.CheckpointInfo
  - name: '>'
    fullName: '>'
