### YamlMime:UniversalReference
ms.openlocfilehash: c702e67d64be4873078bac93c0c0de9d4873f99f
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/22/2018
ms.locfileid: "41693919"
items:
- uid: azure-iothub.Registry
  name: Registry
  fullName: Registry
  children:
  - azure-iothub.Registry.addConfiguration
  - azure-iothub.Registry.addDevices
  - azure-iothub.Registry.addModule
  - azure-iothub.Registry.applyConfigurationContentOnDevice
  - azure-iothub.Registry.BulkDeviceIdentityCallback
  - azure-iothub.Registry.BulkRegistryOperationType
  - azure-iothub.Registry.cancelJob
  - azure-iothub.Registry.create
  - azure-iothub.Registry.createQuery
  - azure-iothub.Registry.delete
  - azure-iothub.Registry.DeviceCallback
  - azure-iothub.Registry.exportDevicesToBlob
  - azure-iothub.Registry.fromConnectionString
  - azure-iothub.Registry.fromSharedAccessSignature
  - azure-iothub.Registry.get
  - azure-iothub.Registry.getConfiguration
  - azure-iothub.Registry.getConfigurations
  - azure-iothub.Registry.getJob
  - azure-iothub.Registry.getModule
  - azure-iothub.Registry.getModulesOnDevice
  - azure-iothub.Registry.getModuleTwin
  - azure-iothub.Registry.getRegistryStatistics
  - azure-iothub.Registry.getTwin
  - azure-iothub.Registry.importDevicesFromBlob
  - azure-iothub.Registry.JobCallback
  - azure-iothub.Registry.JobStatus
  - azure-iothub.Registry.list
  - azure-iothub.Registry.listJobs
  - azure-iothub.Registry.removeConfiguration
  - azure-iothub.Registry.removeDevices
  - azure-iothub.Registry.removeModule
  - azure-iothub.Registry.removeModule_1
  - azure-iothub.Registry.ResponseCallback
  - azure-iothub.Registry.update
  - azure-iothub.Registry.updateConfiguration
  - azure-iothub.Registry.updateConfiguration_1
  - azure-iothub.Registry.updateDevices
  - azure-iothub.Registry.updateModule
  - azure-iothub.Registry.updateModule_1
  - azure-iothub.Registry.updateModuleTwin
  - azure-iothub.Registry.updateTwin
  langs:
  - typeScript
  type: class
  summary: >
    La classe del Registro di sistema fornisce accesso al servizio di identità dispositivo dell'IoT Hub.

    Gli utenti di SDK devono creare un'istanza di questa classe con uno dei metodi factory: [fromConnectionString](xref:azure-iothub.Registry.fromConnectionString) oppure [fromSharedAccessSignature](xref:azure-iothub.Registry.fromSharedAccessSignature).

    Il protocollo usato per operazioni del registro delle identità dispositivo è HTTPS.
  package: azure-iothub
- uid: azure-iothub.Registry.addConfiguration
  name: addConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere una configurazione a un hub IoT.
  syntax:
    content: 'function addConfiguration(configuration: Configuration, done: Registry.ResponseCallback)'
    parameters:
    - id: configuration
      type:
      - azure-iothub.Configuration
      description: "Un oggetto di tipo. modulo: azure-iothub. Configurazione da aggiungere all'hub"
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), il corpo della risposta e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.addDevices
  name: addDevices
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiunge una matrice di dispositivi.
  syntax:
    content: 'function addDevices(devices: DeviceDescription[], done: Registry.BulkDeviceIdentityCallback)'
    parameters:
    - id: devices
      type:
      - azure-iothub.Registry.DeviceDescription[]
      description: Una matrice di oggetti che deve includere un `deviceId` proprietà il cui valore è un identificatore di dispositivo valido.
    - id: done
      type:
      - azure-iothub.Registry.BulkDeviceIdentityCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), un BulkRegistryOperationResult e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.addModule
  name: addModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere il modulo specificato nel Registro di sistema.
  syntax:
    content: 'function addModule(module: Module, done: Registry.ResponseCallback)'
    parameters:
    - id: module
      type:
      - azure-iothub.Module
      description: Oggetto del modulo da aggiungere al Registro di sistema.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), il corpo della risposta e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.applyConfigurationContentOnDevice
  name: applyConfigurationContentOnDevice
  children: []
  type: method
  langs:
  - typeScript
  summary: Applicare la configurazione specificata in un dispositivo in un IoT Hub
  syntax:
    content: 'function applyConfigurationContentOnDevice(deviceId: string, content: ConfigurationContent, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ID del dispositivo per applicare la configurazione di
    - id: content
      type:
      - azure-iothub.ConfigurationContent
      description: La configurazione da applicare
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), il corpo della risposta e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.BulkDeviceIdentityCallback
  name: BulkDeviceIdentityCallback
  fullName: BulkDeviceIdentityCallback
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Registry.BulkRegistryOperationType
  name: BulkRegistryOperationType
  fullName: BulkRegistryOperationType
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n\"BulkRegistryOperationType\" è un alias del tipo. Fa riferimento a \"Crea\", \"Update\", \"UpdateIfMatchETag\", \"Delete\" e \"DeleteIfMatchETag\"."
  package: azure-iothub
- uid: azure-iothub.Registry.cancelJob
  name: cancelJob
  children: []
  type: method
  langs:
  - typeScript
  summary: Annullare un processo di importazione/esportazione bulk.
  syntax:
    content: 'function cancelJob(jobId: string, done: Registry.JobCallback)'
    parameters:
    - id: jobId
      type:
      - string
      description: L'identificatore del processo per cui l'utente desidera ottenere informazioni sullo stato.
    - id: done
      type:
      - azure-iothub.Registry.JobCallback
      description: >
        Funzione da chiamare con due argomenti: un oggetto di errore se si è verificato un errore, (null in caso contrario) e lo stato del processo il cui identificatore è stato passato come argomento (annullato).
  package: azure-iothub
- uid: azure-iothub.Registry.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea una nuova identità del dispositivo in un hub IoT.
  syntax:
    content: 'function create(deviceInfo: DeviceDescription, done: Registry.DeviceCallback)'
    parameters:
    - id: deviceInfo
      type:
      - azure-iothub.Registry.DeviceDescription
      description: L'oggetto deve includere un `deviceId` proprietà con un identificatore di dispositivo valido.
    - id: done
      type:
      - azure-iothub.Registry.DeviceCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), un [dispositivo](xref:azure-iothub.Device) oggetto che rappresenta l'identità del dispositivo creato e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.createQuery
  name: createQuery
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea una query che può essere eseguita nell'istanza dell'IoT Hub per trovare informazioni sui dispositivi o processi.
  syntax:
    content: 'function createQuery(sqlQuery: string, pageSize?: number)'
    parameters:
    - id: sqlQuery
      type:
      - string
      description: La query scritta sotto forma di stringa SQL.
    - id: pageSize
      type:
      - number
      description: >
        Il numero desiderato di risultati per pagina (facoltativo. predefinito: 1000, max: 10000).
      optional: true
    return:
      type:
      - azure-iothub.Query
  package: azure-iothub
- uid: azure-iothub.Registry.delete
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: Rimuove un'identità dispositivo esistente da un hub IoT.
  syntax:
    content: 'function delete(deviceId: string, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L'identificatore di un'identità dispositivo esistente.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), un argomento null sempre (per coerenza con altri metodi) e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.DeviceCallback
  name: DeviceCallback
  fullName: DeviceCallback
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Registry.exportDevicesToBlob
  name: exportDevicesToBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: Esportare dispositivi a un blob in un processo di blocco.
  syntax:
    content: 'function exportDevicesToBlob(outputBlobContainerUri: string, excludeKeys: boolean, done: Registry.JobCallback)'
    parameters:
    - id: outputBlobContainerUri
      type:
      - string
      description: L'URI a un contenitore in cui verrà creato un blob con i log del processo di esportazione.
    - id: excludeKeys
      type:
      - boolean
      description: Valore booleano che indica se le chiavi di sicurezza devono essere esclusi dai dati esportati.
    - id: done
      type:
      - azure-iothub.Registry.JobCallback
      description: >
        Funzione da chiamare quando il processo è stato creato, con due argomenti: un errore dell'oggetto se un si è verificato un errore, (null in caso contrario) e lo stato del processo che può essere utilizzato per tenere traccia dello stato dei dispositivi di esportazione.
  package: azure-iothub
- uid: azure-iothub.Registry.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: Costruisce un oggetto del Registro di sistema dalla stringa di connessione specificata.
  syntax:
    content: 'static function fromConnectionString(value: string)'
    parameters:
    - id: value
      type:
      - string
      description: Una stringa di connessione che incapsula l'oggetto appropriato (leggere e/o scrittura) le autorizzazioni del Registro di sistema.
    return:
      type:
      - azure-iothub.Registry
  package: azure-iothub
- uid: azure-iothub.Registry.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: Costruisce un oggetto del Registro di sistema dalla firma di accesso condiviso specificata.
  syntax:
    content: 'static function fromSharedAccessSignature(value: string)'
    parameters:
    - id: value
      type:
      - string
      description: Una firma di accesso condiviso che incapsula l'oggetto appropriato (leggere e/o scrittura) le autorizzazioni del Registro di sistema.
    return:
      type:
      - azure-iothub.Registry
  package: azure-iothub
- uid: azure-iothub.Registry.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Richiede informazioni su un'identità dispositivo esistente in un hub IoT.
  syntax:
    content: 'function get(deviceId: string, done: Registry.DeviceCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L'identificatore di un'identità dispositivo esistente.
    - id: done
      type:
      - azure-iothub.Registry.DeviceCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), un [dispositivo](xref:azure-iothub.Device) oggetto che rappresenta l'identità del dispositivo creato e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.getConfiguration
  name: getConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottenere una configurazione singola da un IoT Hub
  syntax:
    content: 'function getConfiguration(configurationId: string, done: (err: Error, configuration?: Configuration, response?: any) => void)'
    parameters:
    - id: configurationId
      type:
      - string
      description: L'ID della configurazione all'utente da recuperare
    - id: done
      type:
      - '(err: Error, configuration?: Configuration, response?: any) => void'
      description: >
        Il callback che verrà chiamato con un oggetto di errore o un modulo: azure-iothub. Oggetto di configurazione con i dettagli di configurazione.
  package: azure-iothub
- uid: azure-iothub.Registry.getConfigurations
  name: getConfigurations
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottenere tutte le configurazioni in un IoT Hub
  syntax:
    content: 'function getConfigurations(done: (err: Error, configurations?: Configuration[], response?: any) => void)'
    parameters:
    - id: done
      type:
      - '(err: Error, configurations?: Configuration[], response?: any) => void'
      description: >
        Il callback che verrà chiamato con un errore dell'oggetto o una matrice di modulo: azure-iothub. Oggetti di configurazione per tutte le configurazioni.
  package: azure-iothub
- uid: azure-iothub.Registry.getJob
  name: getJob
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottenere lo stato di un processo di importazione/esportazione di massa.
  syntax:
    content: 'function getJob(jobId: string, done: Registry.JobCallback)'
    parameters:
    - id: jobId
      type:
      - string
      description: L'identificatore del processo per cui l'utente desidera ottenere informazioni sullo stato.
    - id: done
      type:
      - azure-iothub.Registry.JobCallback
      description: >
        Funzione da chiamare con due argomenti: un oggetto di errore se si è verificato un errore, (null in caso contrario) e lo stato del processo il cui identificatore è stato passato come argomento.
  package: azure-iothub
- uid: azure-iothub.Registry.getModule
  name: getModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottenere un singolo modulo da un dispositivo in un IoT Hub
  syntax:
    content: 'function getModule(deviceId: string, moduleId: string, done: (err: Error, module?: Module, response?: any) => void)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ID dispositivo proprietario del modulo.
    - id: moduleId
      type:
      - string
      description: ID del modulo da recuperare
    - id: done
      type:
      - '(err: Error, module?: Module, response?: any) => void'
      description: >
        Il callback che verrà chiamato con un oggetto di errore o di modulo: azure-iothub. Oggetto del modulo per il modulo di richiesto
  package: azure-iothub
- uid: azure-iothub.Registry.getModulesOnDevice
  name: getModulesOnDevice
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottenere un elenco di tutti i moduli in un dispositivo dell'IoT Hub
  syntax:
    content: 'function getModulesOnDevice(deviceId: string, done: (err: Error, modules?: Module[], response?: any) => void)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ID del dispositivo per che otteniamo moduli
    - id: done
      type:
      - '(err: Error, modules?: Module[], response?: any) => void'
      description: >
        Il callback che verrà chiamato con un errore dell'oggetto o una matrice di modulo: azure-iothub. Oggetti del modulo per tutti i moduli.
  package: azure-iothub
- uid: azure-iothub.Registry.getModuleTwin
  name: getModuleTwin
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene il modulo gemello del modulo con l'identificatore del modulo specificato.
  syntax:
    content: 'function getModuleTwin(deviceId: string, moduleId: string, done: (err: Error, twin?: Twin, response?: any) => void)'
    parameters:
    - id: deviceId
      type:
      - string
      description: Identificatore del dispositivo.
    - id: moduleId
      type:
      - string
      description: L'identificatore del modulo.
    - id: done
      type:
      - '(err: Error, twin?: Twin, response?: any) => void'
      description: Callback che verrà chiamato con un oggetto di errore o l'istanza del modulo gemello.
  package: azure-iothub
- uid: azure-iothub.Registry.getRegistryStatistics
  name: getRegistryStatistics
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene le statistiche sui dispositivi nel registro delle identità dei dispositivi.
  syntax:
    content: 'function getRegistryStatistics(done: Callback<RegistryStatistics>)'
    parameters:
    - id: done
      type:
      - Callback<azure-iothub.Registry.RegistryStatistics>
      description: >
        Callback che verrà chiamato con un errore dell'oggetto o le statistiche del Registro di sistema di dispositivo.
  package: azure-iothub
- uid: azure-iothub.Registry.getTwin
  name: getTwin
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottiene il dispositivo gemello del dispositivo con l'identificatore di dispositivo specificato.
  syntax:
    content: 'function getTwin(deviceId: string, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: Identificatore del dispositivo.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        Callback che verrà chiamato con un oggetto di errore o l'istanza del dispositivo gemello.
  package: azure-iothub
- uid: azure-iothub.Registry.importDevicesFromBlob
  name: importDevicesFromBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: Importa i dispositivi da un blob nel processo di blocco.
  syntax:
    content: 'function importDevicesFromBlob(inputBlobContainerUri: string, outputBlobContainerUri: string, done: Registry.JobCallback)'
    parameters:
    - id: inputBlobContainerUri
      type:
      - string
      description: L'URI a un contenitore con un blob denominato 'Devices. txt' contenente un elenco di dispositivi da importare.
    - id: outputBlobContainerUri
      type:
      - string
      description: L'URI a un contenitore in cui verrà creato un blob con i log del processo di importazione.
    - id: done
      type:
      - azure-iothub.Registry.JobCallback
      description: >
        Funzione da chiamare quando il processo è stato creato, con due argomenti: un errore dell'oggetto se un si è verificato un errore, (null in caso contrario) e lo stato del processo che può essere utilizzato per tenere traccia dello stato dei dispositivi importare.
  package: azure-iothub
- uid: azure-iothub.Registry.JobCallback
  name: JobCallback
  fullName: JobCallback
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Registry.JobStatus
  name: JobStatus
  fullName: JobStatus
  children: []
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-iothub
- uid: azure-iothub.Registry.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Richiede informazioni sulle identità dispositivo 1000 prima in un hub IoT.
  syntax:
    content: 'function list(done: Callback<Device[]>)'
    parameters:
    - id: done
      type:
      - Callback<azure-iothub.Device[]>
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), una matrice di [dispositivo](xref:azure-iothub.Device) gli oggetti che rappresentano le identità di dispositivo elencati e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.listJobs
  name: listJobs
  children: []
  type: method
  langs:
  - typeScript
  summary: Elencare i processi di importazione/esportazione ultimo (incluso quello attivo, se presente).
  syntax:
    content: 'function listJobs(done: Callback<any>)'
    parameters:
    - id: done
      type:
      - Callback<any>
      description: >
        Funzione da chiamare con due argomenti: un oggetto di errore se si è verificato un errore, (null in caso contrario) e l'elenco dei processi passati come argomento.
  package: azure-iothub
- uid: azure-iothub.Registry.removeConfiguration
  name: removeConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: Rimuovere una configurazione con l'ID specificato da un IoT Hub
  syntax:
    content: 'function removeConfiguration(configurationId: string, done: Registry.ResponseCallback)'
    parameters:
    - id: configurationId
      type:
      - string
      description: ID della configurazione da rimuovere
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), il corpo della risposta e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.removeDevices
  name: removeDevices
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiorna una matrice di dispositivi.
  syntax:
    content: 'function removeDevices(devices: DeviceDescription[], forceRemove: boolean, done: Registry.BulkDeviceIdentityCallback)'
    parameters:
    - id: devices
      type:
      - azure-iothub.Registry.DeviceDescription[]
      description: Una matrice di oggetti che deve includere un `deviceId` proprietà il cui valore è un identificatore di dispositivo valido.
    - id: forceRemove
      type:
      - boolean
      description: Se `forceRemove` è true, il dispositivo verrà rimosso indipendentemente dal fatto un etag.  In caso contrario, i valori eTag devono corrispondere.
    - id: done
      type:
      - azure-iothub.Registry.BulkDeviceIdentityCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), un BulkRegistryOperationResult e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.removeModule
  name: removeModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Rimuovere il modulo specificato dal Registro di sistema
  syntax:
    content: 'function removeModule(module: Module, done: Registry.ResponseCallback)'
    parameters:
    - id: module
      type:
      - azure-iothub.Module
      description: ''
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), il corpo della risposta e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.removeModule_1
  name: removeModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Rimuovere il modulo specificato dal Registro di sistema
  syntax:
    content: 'function removeModule(deviceId: string, moduleId: string, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: ''
  package: azure-iothub
- uid: azure-iothub.Registry.ResponseCallback
  name: ResponseCallback
  fullName: ResponseCallback
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Registry.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiorna un'identità di dispositivo esistente in un hub IoT con le informazioni sul dispositivo specificato.
  syntax:
    content: 'function update(deviceInfo: DeviceDescription, done: Registry.DeviceCallback)'
    parameters:
    - id: deviceInfo
      type:
      - azure-iothub.Registry.DeviceDescription
      description: Un oggetto che deve includere un `deviceId` proprietà il cui valore è un identificatore di dispositivo valido.
    - id: done
      type:
      - azure-iothub.Registry.DeviceCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), un [dispositivo](xref:azure-iothub.Device) oggetto che rappresenta l'identità del dispositivo aggiornato e un oggetto di risposta specifiche del trasporto utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.updateConfiguration
  name: updateConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornare una configurazione in un hub IoT
  syntax:
    content: 'function updateConfiguration(configuration: Configuration, done: Registry.ResponseCallback)'
    parameters:
    - id: configuration
      type:
      - azure-iothub.Configuration
      description: "Un oggetto di tipo. modulo: azure-iothub. Configurazione da aggiungere all'hub"
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), il corpo della risposta e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.updateConfiguration_1
  name: updateConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornare una configurazione in un hub IoT
  syntax:
    content: 'function updateConfiguration(configuration: Configuration, forceUpdate: boolean, done: Registry.ResponseCallback)'
    parameters:
    - id: configuration
      type:
      - azure-iothub.Configuration
      description: ''
    - id: forceUpdate
      type:
      - boolean
      description: ''
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: ''
  package: azure-iothub
- uid: azure-iothub.Registry.updateDevices
  name: updateDevices
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiorna una matrice di dispositivi.
  syntax:
    content: 'function updateDevices(devices: DeviceDescription[], forceUpdate: boolean, done?: Registry.BulkDeviceIdentityCallback)'
    parameters:
    - id: devices
      type:
      - azure-iothub.Registry.DeviceDescription[]
      description: Una matrice di oggetti che deve includere un `deviceId` proprietà il cui valore è un identificatore di dispositivo valido.
    - id: forceUpdate
      type:
      - boolean
      description: Se `forceUpdate` è true, il dispositivo verrà aggiornato indipendentemente dal fatto un etag.  In caso contrario, i valori eTag devono corrispondere.
    - id: done
      type:
      - azure-iothub.Registry.BulkDeviceIdentityCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), un BulkRegistryOperationResult e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Registry.updateModule
  name: updateModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornare l'oggetto modulo specificato nel Registro di sistema
  syntax:
    content: 'function updateModule(module: Module, done: Registry.ResponseCallback)'
    parameters:
    - id: module
      type:
      - azure-iothub.Module
      description: Oggetto del modulo da aggiornare.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con tre argomenti: un oggetto di errore (può essere null), il corpo della risposta e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
  package: azure-iothub
- uid: azure-iothub.Registry.updateModule_1
  name: updateModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornare l'oggetto modulo specificato nel Registro di sistema
  syntax:
    content: 'function updateModule(module: Module, forceUpdate: boolean, done: Registry.ResponseCallback)'
    parameters:
    - id: module
      type:
      - azure-iothub.Module
      description: ''
    - id: forceUpdate
      type:
      - boolean
      description: ''
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: ''
  package: azure-iothub
- uid: azure-iothub.Registry.updateModuleTwin
  name: updateModuleTwin
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiorna il dispositivo gemello di un modulo specifico con la patch specificata.
  syntax:
    content: 'function updateModuleTwin(deviceId: string, moduleId: string, patch: any, etag: string, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: Identificatore del dispositivo.
    - id: moduleId
      type:
      - string
      description: L'identificatore del modulo
    - id: patch
      type:
      - any
      description: I tag per il modulo gemello con patch e le proprietà desiderate.
    - id: etag
      type:
      - string
      description: Il valore etag più recenti per questo modulo gemello o ' *' per forzare un aggiornamento anche se il dispositivo gemello del modulo è stato aggiornato dopo l'etag è stato ottenuto.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: Callback che verrà chiamato con un oggetto di errore o l'istanza del modulo gemello.
  package: azure-iothub
- uid: azure-iothub.Registry.updateTwin
  name: updateTwin
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiorna il dispositivo gemello di un dispositivo specifico con la patch specificata.
  syntax:
    content: 'function updateTwin(deviceId: string, patch: any, etag: string, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: Identificatore del dispositivo.
    - id: patch
      type:
      - any
      description: I tag per applicare patch del dispositivo gemello e proprietà desiderate.
    - id: etag
      type:
      - string
      description: Il valore etag più recenti per questo dispositivo gemello o ' *' per forzare un aggiornamento anche se il dispositivo gemello è stato aggiornato dopo l'etag è stato ottenuto.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        Callback che verrà chiamato con un oggetto di errore o l'istanza del dispositivo gemello.
  package: azure-iothub
references:
- uid: azure-iothub.Registry.DeviceRegistryOperationError[]
  spec.typeScript:
  - name: DeviceRegistryOperationError
    fullName: DeviceRegistryOperationError
    uid: azure-iothub.Registry.DeviceRegistryOperationError
  - name: '[]'
    fullName: '[]'
- uid: azure-iothub.Device.Capabilities
  spec.typeScript:
  - name: Capabilities
    fullName: Capabilities
    uid: azure-iothub.Device.Capabilities
- uid: azure-iothub.Configuration
  spec.typeScript:
  - name: Configuration
    fullName: Configuration
    uid: azure-iothub.Configuration
- uid: azure-iothub.Registry.ResponseCallback
  spec.typeScript:
  - name: ResponseCallback
    fullName: ResponseCallback
    uid: azure-iothub.Registry.ResponseCallback
- uid: azure-iothub.Registry.DeviceDescription[]
  spec.typeScript:
  - name: DeviceDescription
    fullName: DeviceDescription
    uid: azure-iothub.Registry.DeviceDescription
  - name: '[]'
    fullName: '[]'
- uid: azure-iothub.Registry.BulkDeviceIdentityCallback
  spec.typeScript:
  - name: BulkDeviceIdentityCallback
    fullName: BulkDeviceIdentityCallback
    uid: azure-iothub.Registry.BulkDeviceIdentityCallback
- uid: azure-iothub.Module
  spec.typeScript:
  - name: Module
    fullName: Module
    uid: azure-iothub.Module
- uid: azure-iothub.ConfigurationContent
  spec.typeScript:
  - name: ConfigurationContent
    fullName: ConfigurationContent
    uid: azure-iothub.ConfigurationContent
- uid: azure-iothub.Registry.JobCallback
  spec.typeScript:
  - name: JobCallback
    fullName: JobCallback
    uid: azure-iothub.Registry.JobCallback
- uid: azure-iothub.Registry.DeviceDescription
  spec.typeScript:
  - name: DeviceDescription
    fullName: DeviceDescription
    uid: azure-iothub.Registry.DeviceDescription
- uid: azure-iothub.Registry.DeviceCallback
  spec.typeScript:
  - name: DeviceCallback
    fullName: DeviceCallback
    uid: azure-iothub.Registry.DeviceCallback
- uid: azure-iothub.Query
  spec.typeScript:
  - name: Query
    fullName: Query
    uid: azure-iothub.Query
- uid: Callback<azure-iothub.Registry.RegistryStatistics>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: RegistryStatistics
    fullName: RegistryStatistics
    uid: azure-iothub.Registry.RegistryStatistics
  - name: '>'
    fullName: '>'
- uid: Callback<azure-iothub.Device[]>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: Device
    fullName: Device
    uid: azure-iothub.Device
  - name: '[]>'
    fullName: '[]>'
- uid: azure-iothub.Registry
  spec.typeScript:
  - name: Registry
    fullName: Registry
    uid: azure-iothub.Registry
