### YamlMime:UniversalReference
ms.openlocfilehash: 62975cd56b2bf89e7158907fce365b3a6cebdf51
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/12/2018
ms.locfileid: "40059093"
items:
- uid: azure-iothub.Client
  name: Client
  fullName: Client
  children:
  - azure-iothub.Client.Callback
  - azure-iothub.Client.close
  - azure-iothub.Client.fromConnectionString
  - azure-iothub.Client.fromSharedAccessSignature
  - azure-iothub.Client.getFeedbackReceiver
  - azure-iothub.Client.getFileNotificationReceiver
  - azure-iothub.Client.invokeDeviceMethod
  - azure-iothub.Client.invokeDeviceMethod_1
  - azure-iothub.Client.open
  - azure-iothub.Client.send
  - azure-iothub.Client.setRetryPolicy
  - azure-iothub.Client.TransportCtor
  langs:
  - typeScript
  type: class
  summary: >
    Il client del servizio IoT Hub viene usato per comunicare con i dispositivi attraverso un hub IoT di Azure.

    Consente all'utente SDK:
      - invio da dispositivo a cloud (noto anche come comandi) ai dispositivi: i comandi vengono accodati in IoT Hub e recapitati in modo asincrono solo quando il dispositivo è connesso. I comandi solo 50 possono essere inseriti nella coda per ogni dispositivo.
      - richiamare metodi diretti nei dispositivi (che funziona solo se il dispositivo è attualmente connesso: è una soluzione sincrona di comunicazione con il dispositivo)
      - ascolto dei messaggi di commenti e suggerimenti inviati dai dispositivi per i comandi precedenti.
      - essere in ascolto per le notifiche di caricamento di file dai dispositivi.
    Gli utenti devono creare nuovi <xref:azure-iothub.Client> chiamando uno dei metodi factory, istanze [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) oppure [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), per creare un Client del servizio IoT Hub.
  extends:
    name: EventEmitter
  package: azure-iothub
- uid: azure-iothub.Client.Callback
  name: Callback
  fullName: Callback<T>
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Client.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: Chiude la connessione a un hub IoT.
  syntax:
    content: 'function close(done?: Callback<Disconnected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Disconnected>
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà passato un argomento di oggetto di errore, che sarà null se l'operazione completata correttamente.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un client del servizio IoT Hub dalla stringa di connessione specificata utilizzando il trasporto predefinito (Amqp) o quella specificata nel secondo argomento.
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: connStr
      type:
      - string
      description: Una stringa di connessione che incapsula le autorizzazioni di "connessione di dispositivi" in un hub IoT.
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un client del servizio IoT Hub dalla firma di accesso condiviso specificata utilizzando il trasporto predefinito (Amqp) o quella specificata nel secondo argomento.
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: Una firma di accesso condiviso che incapsula le autorizzazioni "" connessione al servizio in un hub IoT.
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.getFeedbackReceiver
  name: getFeedbackReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: Restituisce un oggetto AmqpReceiver che genera eventi quando il client riceve nuovi messaggi di feedback.
  syntax:
    content: 'function getFeedbackReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con due argomenti: un oggetto di errore (può essere null) e un oggetto AmqpReceiver.
  package: azure-iothub
- uid: azure-iothub.Client.getFileNotificationReceiver
  name: getFileNotificationReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: Restituisce un oggetto AmqpReceiver che genera eventi quando le notifiche di caricamento file nuovi vengono ricevute dal client.
  syntax:
    content: 'function getFileNotificationReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con due argomenti: un oggetto di errore (può essere null) e un oggetto AmqpReceiver.
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Richiama un metodo su un determinato dispositivo o un modulo.
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L'identificatore di un'identità dispositivo esistente.
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: >
        Callback da chiamare con il risultato dell'esecuzione del metodo.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod_1
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Richiama un metodo su un determinato dispositivo o un modulo.
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, moduleId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: ''
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: Apre la connessione a un hub IoT.
  syntax:
    content: 'function open(done?: Callback<Connected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Connected>
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà passato un argomento di oggetto di errore, che sarà null se l'operazione completata correttamente.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.send
  name: send
  children: []
  type: method
  langs:
  - typeScript
  summary: Invia un messaggio a un dispositivo.
  syntax:
    content: 'function send(deviceId: string, message: Message | Message.BufferConvertible, done?: Callback<MessageEnqueued>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L'identificatore di un'identità dispositivo esistente.
    - id: message
      type:
      - Message | Message.BufferConvertible
      description: >-
        Corpo del messaggio da inviare al dispositivo.

        Se `message` non è di tipo [messaggio](xref:azure-iot-common.Message), verrà convertito.
    - id: done
      type:
      - azure-iothub.Client.Callback<MessageEnqueued>
      description: >
        La funzione da chiamare quando l'operazione è stata completata. `done` verrà chiamato con due argomenti: un oggetto di errore (può essere null) e un oggetto specifico del trasporto risposta utile per la registrazione e debug.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.setRetryPolicy
  name: setRetryPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Impostare i criteri usati dal client per ripetere le operazioni di rete.
  syntax:
    content: 'function setRetryPolicy(policy: RetryPolicy)'
    parameters:
    - id: policy
      type:
      - RetryPolicy
      description: >
        criteri utilizzati per ripetere le operazioni (ad es. apertura, invio e così via.).

        il SDK viene fornito con i criteri "predefiniti" 2: ExponentialBackoffWithJitter (impostazione predefinita) e NoRetry (annullare qualsiasi forma di ripetizione dei tentativi). L'utente può passare anche il proprio oggetto, purché implementi 2 metodi:-shouldRetry(err: Error): booleano: indica se un'operazione deve essere ritentata in base al tipo di errore - nextRetryTimeout (retryCount: numero, limitata: valore booleano): numero: restituisce il tempo di attesa (in millisecondi) prima di ritentare in base al numero di tentativi (retryCount) e il fatto che l'errore è un errore di limitazione delle richieste o non passati.
  package: azure-iothub
- uid: azure-iothub.Client.TransportCtor
  name: TransportCtor
  fullName: TransportCtor
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
references:
- uid: azure-iothub.Client.Callback<MessageAbandoned>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageAbandoned>
    fullName: <MessageAbandoned>
- uid: azure-iothub.Client.Callback<MessageCompleted>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageCompleted>
    fullName: <MessageCompleted>
- uid: azure-iothub.Client.Callback<MessageRejected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageRejected>
    fullName: <MessageRejected>
- uid: azure-iothub.Client.Callback<Connected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Connected>
    fullName: <Connected>
- uid: azure-iothub.Client.Callback<Disconnected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Disconnected>
    fullName: <Disconnected>
- uid: azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <
    fullName: <
  - name: ServiceReceiver
    fullName: ServiceReceiver
    uid: azure-iothub.Client.ServiceReceiver
  - name: '>'
    fullName: '>'
- uid: azure-iothub.Client.Callback<MessageEnqueued>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageEnqueued>
    fullName: <MessageEnqueued>
- uid: azure-iothub.DeviceMethodParams
  spec.typeScript:
  - name: DeviceMethodParams
    fullName: DeviceMethodParams
    uid: azure-iothub.DeviceMethodParams
- uid: azure-iothub.Client.Callback<any>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <any>
    fullName: <any>
- uid: azure-iothub.Client.TransportCtor
  spec.typeScript:
  - name: TransportCtor
    fullName: TransportCtor
    uid: azure-iothub.Client.TransportCtor
- uid: azure-iothub.Client
  spec.typeScript:
  - name: Client
    fullName: Client
    uid: azure-iothub.Client
