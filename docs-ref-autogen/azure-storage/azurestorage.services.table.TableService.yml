### YamlMime:UniversalReference
items:
  - uid: azure-storage.azurestorage.services.table.TableService
    name: TableService
    fullName: TableService
    children:
      - azure-storage.azurestorage.services.table.TableService.BatchResponse
      - azure-storage.azurestorage.services.table.TableService.BatchResult
      - azure-storage.azurestorage.services.table.TableService.createTable_1
      - azure-storage.azurestorage.services.table.TableService.createTable
      - azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
      - azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
      - azure-storage.azurestorage.services.table.TableService.defaultClientRequestTimeoutInMs
      - azure-storage.azurestorage.services.table.TableService.defaultLocationMode
      - azure-storage.azurestorage.services.table.TableService.defaultMaximumExecutionTimeInMs
      - azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
      - azure-storage.azurestorage.services.table.TableService.defaultTimeoutIntervalInMs
      - azure-storage.azurestorage.services.table.TableService.deleteEntity_1
      - azure-storage.azurestorage.services.table.TableService.deleteEntity
      - azure-storage.azurestorage.services.table.TableService.deleteTable_1
      - azure-storage.azurestorage.services.table.TableService.deleteTable
      - azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
      - azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
      - azure-storage.azurestorage.services.table.TableService.doesTableExist_1
      - azure-storage.azurestorage.services.table.TableService.doesTableExist
      - azure-storage.azurestorage.services.table.TableService.enableGlobalHttpAgent
      - azure-storage.azurestorage.services.table.TableService.EntityMetadata
      - azure-storage.azurestorage.services.table.TableService.EntityProperty
      - azure-storage.azurestorage.services.table.TableService.executeBatch_1
      - azure-storage.azurestorage.services.table.TableService.executeBatch
      - azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
      - azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
      - azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
      - azure-storage.azurestorage.services.table.TableService.getServiceProperties
      - azure-storage.azurestorage.services.table.TableService.getServiceStats_1
      - azure-storage.azurestorage.services.table.TableService.getServiceStats
      - azure-storage.azurestorage.services.table.TableService.getTableAcl_1
      - azure-storage.azurestorage.services.table.TableService.getTableAcl
      - azure-storage.azurestorage.services.table.TableService.GetTableAclResult
      - azure-storage.azurestorage.services.table.TableService.getUrl
      - azure-storage.azurestorage.services.table.TableService.insertEntity_2
      - azure-storage.azurestorage.services.table.TableService.insertEntity
      - azure-storage.azurestorage.services.table.TableService.insertEntity_1
      - azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
      - azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
      - azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
      - azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
      - azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
      - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
      - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
      - azure-storage.azurestorage.services.table.TableService.ListTablesResponse
      - azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
      - azure-storage.azurestorage.services.table.TableService.listTablesSegmented
      - azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
      - azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
      - azure-storage.azurestorage.services.table.TableService.logger
      - azure-storage.azurestorage.services.table.TableService.mergeEntity_1
      - azure-storage.azurestorage.services.table.TableService.mergeEntity
      - azure-storage.azurestorage.services.table.TableService.PropertyResolver
      - azure-storage.azurestorage.services.table.TableService.proxy
      - azure-storage.azurestorage.services.table.TableService.queryEntities_1
      - azure-storage.azurestorage.services.table.TableService.queryEntities
      - azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
      - azure-storage.azurestorage.services.table.TableService.replaceEntity_1
      - azure-storage.azurestorage.services.table.TableService.replaceEntity
      - azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
      - azure-storage.azurestorage.services.table.TableService.retrieveEntity
      - azure-storage.azurestorage.services.table.TableService.setProxy
      - azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
      - azure-storage.azurestorage.services.table.TableService.setServiceProperties
      - azure-storage.azurestorage.services.table.TableService.setTableAcl_1
      - azure-storage.azurestorage.services.table.TableService.setTableAcl
      - azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
      - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
      - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
      - azure-storage.azurestorage.services.table.TableService.TableResult
      - azure-storage.azurestorage.services.table.TableService.constructor
      - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
      - azure-storage.azurestorage.services.table.TableService.useNagleAlgorithm
      - azure-storage.azurestorage.services.table.TableService.withFilter
    langs:
      - typeScript
    type: module
    summary: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.createTable_1
    name: 'createTable(string, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Crea una nuova tabella all'interno di un account di archiviazione.
    syntax:
      content: 'function createTable(table: string, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sulle tabelle nuove.
                                                                                `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.createTable
    name: 'createTable(string, RequestOptions, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Crea una nuova tabella all'interno di un account di archiviazione.
    syntax:
      content: 'function createTable(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sulle tabelle nuove.
                                                                                `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
    name: 'createTableIfNotExists(string, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Crea una nuova tabella all'interno di un account di archiviazione se non esiste.
    syntax:
      content: 'function createTableIfNotExists(table: string, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            `error` conterrà informazioni se si verifica un errore; `result` saranno `true` se è stata creata nella tabella, false in caso contrario `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
    name: 'createTableIfNotExists(string, RequestOptions, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Crea una nuova tabella all'interno di un account di archiviazione se non esiste.
    syntax:
      content: 'function createTableIfNotExists(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            `error` conterrà informazioni se si verifica un errore; `result` saranno `true` se è stata creata nella tabella, false in caso contrario `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.defaultClientRequestTimeoutInMs
    name: defaultClientRequestTimeoutInMs
    fullName: defaultClientRequestTimeoutInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Il timeout predefinito delle richieste client, in millisecondi, da utilizzare per la richiesta.'
    syntax:
      content: 'defaultClientRequestTimeoutInMs: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.defaultLocationMode
    name: defaultLocationMode
    fullName: defaultLocationMode
    children: []
    langs:
      - typeScript
    type: property
    summary: La modalità percorso predefinita per le richieste effettuate tramite il servizio.
    syntax:
      content: 'defaultLocationMode: LocationMode'
      return:
        type:
          - azure-storage.azurestorage.common.util.storageutilities.LocationMode
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.defaultMaximumExecutionTimeInMs
    name: defaultMaximumExecutionTimeInMs
    fullName: defaultMaximumExecutionTimeInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Tempo di esecuzione massimo predefinito tra tutti i tentativi potenziali, per le richieste effettuate tramite il servizio.'
    syntax:
      content: 'defaultMaximumExecutionTimeInMs: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
    name: defaultPayloadFormat
    fullName: defaultPayloadFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'defaultPayloadFormat: string'
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.defaultTimeoutIntervalInMs
    name: defaultTimeoutIntervalInMs
    fullName: defaultTimeoutIntervalInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: 'L''impostazione predefinita intervallo di timeout, espresso in millisecondi, da usare per la richiesta effettuata tramite il servizio.'
    syntax:
      content: 'defaultTimeoutIntervalInMs: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteEntity_1
    name: 'deleteEntity(string, T, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Elimina un''entità all''interno di una tabella. Per eliminare in modo condizionale in base a etag, set di entità [''.metadata''] [''etag''].'
    syntax:
      content: 'function deleteEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResponse)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` conterrà informazioni se si verifica un errore; `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteEntity
    name: 'deleteEntity(string, T, RequestOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Elimina un''entità all''interno di una tabella. Per eliminare in modo condizionale in base a etag, set di entità [''.metadata''] [''etag''].'
    syntax:
      content: 'function deleteEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResponse)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` conterrà informazioni se si verifica un errore; `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTable_1
    name: 'deleteTable(string, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Elimina una tabella da un account di archiviazione.
    syntax:
      content: 'function deleteTable(table: string, callback: ErrorOrResponse)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` conterrà informazioni se si verifica un errore; `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTable
    name: 'deleteTable(string, RequestOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Elimina una tabella da un account di archiviazione.
    syntax:
      content: 'function deleteTable(table: string, options: RequestOptions, callback: ErrorOrResponse)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` conterrà informazioni se si verifica un errore; `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
    name: 'deleteTableIfExists(string, ErrorOrResult<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Elimina una tabella da un account di archiviazione, se presente.'
    syntax:
      content: 'function deleteTableIfExists(table: string, callback: ErrorOrResult<boolean>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<boolean>
          description: |
            `error` conterrà informazioni se si verifica un errore; `result` saranno `true` se nella tabella è stata eliminata, false in caso contrario `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
    name: 'deleteTableIfExists(string, RequestOptions, ErrorOrResult<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Elimina una tabella da un account di archiviazione, se presente.'
    syntax:
      content: 'function deleteTableIfExists(table: string, options: RequestOptions, callback: ErrorOrResult<boolean>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<boolean>
          description: |
            `error` conterrà informazioni se si verifica un errore; `result` saranno `true` se nella tabella è stata eliminata, false in caso contrario `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.doesTableExist_1
    name: 'doesTableExist(string, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Verifica se esiste una tabella nel servizio.
    syntax:
      content: 'function doesTableExist(table: string, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà true se la tabella esiste, o false se la tabella non esiste.
                                                                                `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.doesTableExist
    name: 'doesTableExist(string, RequestOptions, ErrorOrResult<TableResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Verifica se esiste una tabella nel servizio.
    syntax:
      content: 'function doesTableExist(table: string, options: RequestOptions, callback: ErrorOrResult<TableResult>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà true se la tabella esiste, o false se la tabella non esiste.
                                                                                `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.enableGlobalHttpAgent
    name: enableGlobalHttpAgent
    fullName: enableGlobalHttpAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Determina se l''agente globale HTTP (s) è abilitato; true per usare l''agente globale HTTP (s). in caso contrario, false per utilizzare HTTP (s). Agent({keepAlive:true}).'
    syntax:
      content: 'enableGlobalHttpAgent: boolean'
      return:
        type:
          - boolean
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.executeBatch_1
    name: 'executeBatch(string, TableBatch, ErrorOrResult<BatchResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Esegue le operazioni nel batch.
    syntax:
      content: 'function executeBatch(table: string, batch: TableBatch, callback: ErrorOrResult<BatchResult[]>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: batch
          type:
            - azure-storage.azurestorage.services.table.TableBatch
          description: Il batch di tabella per l'esecuzione.
        - id: callback
          type:
            - 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>'
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le risposte per ogni operazione eseguita in batch. `result.entity` conterrà le informazioni sulle entità per ogni operazione eseguita.
                                                                                        `result.response` conterrà la risposta per ogni operazione eseguita.
                                                                                        `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.executeBatch
    name: 'executeBatch(string, TableBatch, TableEntityRequestOptions, ErrorOrResult<BatchResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Esegue le operazioni nel batch.
    syntax:
      content: 'function executeBatch(table: string, batch: TableBatch, options: TableEntityRequestOptions, callback: ErrorOrResult<BatchResult[]>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: batch
          type:
            - azure-storage.azurestorage.services.table.TableBatch
          description: Il batch di tabella per l'esecuzione.
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
          description: ''
        - id: callback
          type:
            - 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>'
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le risposte per ogni operazione eseguita in batch. `result.entity` conterrà le informazioni sulle entità per ogni operazione eseguita.
                                                                                        `result.response` conterrà la risposta per ogni operazione eseguita.
                                                                                        `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
    name: 'generateSharedAccessSignature(string, TableSharedAccessPolicy)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Recupera un token di firma di accesso condiviso.
    syntax:
      content: 'function generateSharedAccessSignature(table: string, sharedAccessPolicy: TableSharedAccessPolicy)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: sharedAccessPolicy
          type:
            - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
          description: Criteri di accesso condiviso.
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
    name: 'generateSharedAccessSignatureWithVersion(string, TableSharedAccessPolicy, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Recupera un token di firma di accesso condiviso.
    syntax:
      content: 'function generateSharedAccessSignatureWithVersion(table: string, sharedAccessPolicy: TableSharedAccessPolicy, sasVersion: string)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: sharedAccessPolicy
          type:
            - azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
          description: Criteri di accesso condiviso.
        - id: sasVersion
          type:
            - string
          description: ''
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
    name: getServiceProperties(ErrorOrResult<ServiceProperties>)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Ottiene le proprietà del servizio tabelle di un account di archiviazione, tra cui Analitica di archiviazione di Azure.'
    syntax:
      content: 'function getServiceProperties(callback: ErrorOrResult<ServiceProperties>)'
      parameters:
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le proprietà.
                                                                                    `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties
    name: 'getServiceProperties(RequestOptions, ErrorOrResult<ServiceProperties>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Ottiene le proprietà del servizio tabelle di un account di archiviazione, tra cui Analitica di archiviazione di Azure.'
    syntax:
      content: 'function getServiceProperties(options: RequestOptions, callback: ErrorOrResult<ServiceProperties>)'
      parameters:
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le proprietà.
                                                                                    `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceStats_1
    name: getServiceStats(ErrorOrResult<ServiceStats>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Ottiene le statistiche del servizio per il servizio tabelle di un account di archiviazione.
    syntax:
      content: 'function getServiceStats(callback: ErrorOrResult<ServiceStats>)'
      parameters:
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le proprietà.
                                                                                    `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceStats
    name: 'getServiceStats(RequestOptions, ErrorOrResult<ServiceStats>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ottiene le statistiche del servizio per il servizio tabelle di un account di archiviazione.
    syntax:
      content: 'function getServiceStats(options: RequestOptions, callback: ErrorOrResult<ServiceStats>)'
      parameters:
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le proprietà.
                                                                                    `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getTableAcl_1
    name: 'getTableAcl(string, ErrorOrResult<GetTableAclResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ottiene l'ACL della tabella.
    syntax:
      content: 'function getTableAcl(table: string, callback: ErrorOrResult<GetTableAclResult>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni di ACL per la tabella.
                                                                                     `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getTableAcl
    name: 'getTableAcl(string, RequestOptions, ErrorOrResult<GetTableAclResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Ottiene l'ACL della tabella.
    syntax:
      content: 'function getTableAcl(table: string, options: RequestOptions, callback: ErrorOrResult<GetTableAclResult>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni di ACL per la tabella.
                                                                                     `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.getUrl
    name: 'getUrl(string, string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUrl(table: string, sasToken?: string, primary?: boolean)'
      parameters:
        - id: table
          type:
            - string
          description: ''
        - id: sasToken
          type:
            - string
          description: ''
          optional: true
        - id: primary
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity_2
    name: 'insertEntity(string, T, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inserisce una nuova entità in una tabella.
    syntax:
      content: 'function insertEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
                                                                                        `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity
    name: 'insertEntity(string, T, InsertEntityRequestOptions, ErrorOrResult<T | EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inserisce una nuova entità in una tabella.
    syntax:
      content: 'function insertEntity<T>(table: string, entityDescriptor: T, options: InsertEntityRequestOptions, callback: ErrorOrResult<T | EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
                                                                                        `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity_1
    name: 'insertEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inserisce una nuova entità in una tabella.
    syntax:
      content: 'function insertEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
                                                                                        `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
    name: 'insertOrMergeEntity(string, T, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inserisce o aggiorna un'entità all'interno di una tabella esistente unendovi nuovi valori delle proprietà dell'entità.
    syntax:
      content: 'function insertOrMergeEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
                                                                                `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
    name: 'insertOrMergeEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inserisce o aggiorna un'entità all'interno di una tabella esistente unendovi nuovi valori delle proprietà dell'entità.
    syntax:
      content: 'function insertOrMergeEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
                                                                                `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
    name: 'insertOrReplaceEntity(string, T, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inserisce o aggiorna una nuova entità in una tabella.
    syntax:
      content: 'function insertOrReplaceEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
                                                                                `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
    name: 'insertOrReplaceEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inserisce o aggiorna una nuova entità in una tabella.
    syntax:
      content: 'function insertOrReplaceEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
                                                                                `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
    name: 'listTablesSegmented(ListTablesContinuationToken, ErrorOrResult<ListTablesResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Elenca un segmento contenente una raccolta di elementi della tabella nell'account specificato.
    syntax:
      content: 'function listTablesSegmented(currentToken: ListTablesContinuationToken, callback: ErrorOrResult<ListTablesResponse>)'
      parameters:
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
          description: Un token di continuazione restituito da un'operazione elenco precedente. Usare 'null' o 'undefined' Se si tratta della prima operazione.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà `entries` e `continuationToken`.
                                                                                          `entries`  fornisce un elenco di tabelle e le `continuationToken` viene usato per l'operazione elenco successiva.
                                                                                          `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented
    name: 'listTablesSegmented(ListTablesContinuationToken, ListTablesRequestOptions, ErrorOrResult<ListTablesResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Elenca un segmento contenente una raccolta di elementi della tabella nell'account specificato.
    syntax:
      content: 'function listTablesSegmented(currentToken: ListTablesContinuationToken, options: ListTablesRequestOptions, callback: ErrorOrResult<ListTablesResponse>)'
      parameters:
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
          description: Un token di continuazione restituito da un'operazione elenco precedente. Usare 'null' o 'undefined' Se si tratta della prima operazione.
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà `entries` e `continuationToken`.
                                                                                          `entries`  fornisce un elenco di tabelle e le `continuationToken` viene usato per l'operazione elenco successiva.
                                                                                          `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
    name: 'listTablesSegmentedWithPrefix(string, ListTablesContinuationToken, ErrorOrResult<ListTablesResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Elenca un segmento contenente una raccolta di elementi della tabella nell'account specificato.
    syntax:
      content: 'function listTablesSegmentedWithPrefix(prefix: string, currentToken: ListTablesContinuationToken, callback: ErrorOrResult<ListTablesResponse>)'
      parameters:
        - id: prefix
          type:
            - string
          description: Il prefisso del nome della tabella.
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
          description: Un token di continuazione restituito da un'operazione elenco precedente. Usare 'null' o 'undefined' Se si tratta della prima operazione.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà `entries` e `continuationToken`.
                                                                                          `entries`  fornisce un elenco di tabelle e le `continuationToken` viene usato per l'operazione elenco successiva.
                                                                                          `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
    name: 'listTablesSegmentedWithPrefix(string, ListTablesContinuationToken, ListTablesRequestOptions, ErrorOrResult<ListTablesResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Elenca un segmento contenente una raccolta di elementi della tabella nell'account specificato.
    syntax:
      content: 'function listTablesSegmentedWithPrefix(prefix: string, currentToken: ListTablesContinuationToken, options: ListTablesRequestOptions, callback: ErrorOrResult<ListTablesResponse>)'
      parameters:
        - id: prefix
          type:
            - string
          description: Il prefisso del nome della tabella.
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
          description: Un token di continuazione restituito da un'operazione elenco precedente. Usare 'null' o 'undefined' Se si tratta della prima operazione.
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà `entries` e `continuationToken`.
                                                                                          `entries`  fornisce un elenco di tabelle e le `continuationToken` viene usato per l'operazione elenco successiva.
                                                                                          `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.logger
    name: logger
    fullName: logger
    children: []
    langs:
      - typeScript
    type: property
    summary: L'oggetto di impostazioni di registrazione.
    syntax:
      content: 'logger: Logger'
      return:
        type:
          - azure-storage.azurestorage.common.diagnostics.logger.Logger
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.mergeEntity_1
    name: 'mergeEntity(string, T, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Aggiorna un''entità all''interno di una tabella esistente unendovi nuovi valori delle proprietà dell''entità. Per unire in modo condizionale in base alle etag, set di entità [''.metadata''] [''etag''].'
    syntax:
      content: 'function mergeEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
            risposta ' conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.mergeEntity
    name: 'mergeEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Aggiorna un''entità all''interno di una tabella esistente unendovi nuovi valori delle proprietà dell''entità. Per unire in modo condizionale in base alle etag, set di entità [''.metadata''] [''etag''].'
    syntax:
      content: 'function mergeEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
            risposta ' conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.proxy
    name: proxy
    fullName: proxy
    children: []
    langs:
      - typeScript
    type: property
    summary: L'oggetto proxy specificato dal chiamante.
    syntax:
      content: 'proxy: Proxy'
      return:
        type:
          - azure-storage.azurestorage.common.services.storageserviceclient.Proxy
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.queryEntities_1
    name: 'queryEntities(string, TableQuery, TableContinuationToken, ErrorOrResult<QueryEntitiesResult<T>>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Esegue una query dei dati in una tabella. Per recuperare una singola entità dalla chiave di partizione e chiave di riga, usare recuperare entità.'
    syntax:
      content: 'function queryEntities<T>(table: string, tableQuery: TableQuery, currentToken: TableContinuationToken, callback: ErrorOrResult<QueryEntitiesResult<T>>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: tableQuery
          type:
            - azure-storage.azurestorage.services.table.TableQuery
          description: 'Query da eseguire. Usare null, non definito o nuovi TableQuery() per ottenere tutte le entità nella tabella.'
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
          description: |-
            Un token di continuazione restituito da un'operazione elenco precedente.
            Usare 'null' o 'undefined' Se si tratta della prima operazione.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `entities` conterrà le entità restituite dalla query.
            Se più entità corrispondenti esiste e non può essere restituita, `queryResultContinuation` conterrà un token di continuazione che può essere utilizzato per recuperare il set di risultati successivo.
                                                                                             `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.queryEntities
    name: 'queryEntities(string, TableQuery, TableContinuationToken, TableEntityRequestOptions, ErrorOrResult<QueryEntitiesResult<T>>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Esegue una query dei dati in una tabella. Per recuperare una singola entità dalla chiave di partizione e chiave di riga, usare recuperare entità.'
    syntax:
      content: 'function queryEntities<T>(table: string, tableQuery: TableQuery, currentToken: TableContinuationToken, options: TableEntityRequestOptions, callback: ErrorOrResult<QueryEntitiesResult<T>>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: tableQuery
          type:
            - azure-storage.azurestorage.services.table.TableQuery
          description: 'Query da eseguire. Usare null, non definito o nuovi TableQuery() per ottenere tutte le entità nella tabella.'
        - id: currentToken
          type:
            - azure-storage.azurestorage.services.table.TableService.TableContinuationToken
          description: |-
            Un token di continuazione restituito da un'operazione elenco precedente.
            Usare 'null' o 'undefined' Se si tratta della prima operazione.
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `entities` conterrà le entità restituite dalla query.
            Se più entità corrispondenti esiste e non può essere restituita, `queryResultContinuation` conterrà un token di continuazione che può essere utilizzato per recuperare il set di risultati successivo.
                                                                                             `response` conterrà le informazioni correlate a questa operazione.

            La logica per la restituzione di tipi di entità può diventare complicata.  Ecco l'algoritmo utilizzato:
            ```
            var propertyType;

            if (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it
              propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);
            } else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.
              propertyType = propertyTypeFromService;
            } else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true
              if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.
                propertyType = 'Edm.String';
              } else if (javascript type is boolean) {
                propertyType = 'Edm.Boolean';
              }
            }

            if (propertyType) {
              // Set the property type on the property.
            } else {
              // Property gets no EdmType.
            }
            ```
            Note:

            * Il servizio fornisce solo un tipo se viene utilizzato JsonFullMetadata o JsonMinimalMetadata e se il tipo è Int64, Guid, Binary o data/ora.
            * Spiegazione di autoResolveProperties:
                * Stringa Ottiene risolta correttamente "Edm. String".
                * Int64, Guid, Binary e data/ora vengono risolti in "Edm. String".  Questo avviene solo se viene usato JsonNoMetadata (in caso contrario, il servizio fornirà propertyType in un passaggio precedente).
                * Valore booleano Ottiene risolta correttamente 'Boolean'.
                * Per l'oggetto viene restituito sia Int32 e Double, alcuna informazione sul tipo, anche in caso di autoResolveProperties = true.  Ciò è dovuto all'impossibilità di distinguere tra i due in alcuni casi.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.replaceEntity_1
    name: 'replaceEntity(string, T, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Sostituisce un''entità esistente in una tabella. Per sostituire in modo condizionale in base a etag, set di entità [''.metadata''] [''etag''].'
    syntax:
      content: 'function replaceEntity<T>(table: string, entityDescriptor: T, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
                                                                                `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.replaceEntity
    name: 'replaceEntity(string, T, RequestOptions, ErrorOrResult<EntityMetadata>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Sostituisce un''entità esistente in una tabella. Per sostituire in modo condizionale in base a etag, set di entità [''.metadata''] [''etag''].'
    syntax:
      content: 'function replaceEntity<T>(table: string, entityDescriptor: T, options: RequestOptions, callback: ErrorOrResult<EntityMetadata>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: entityDescriptor
          type:
            - T
          description: Il descrittore di entità.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni sull'entità.
                                                                                `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
    name: 'retrieveEntity(string, string, string, ErrorOrResult<T>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Recupera un'entità da una tabella.
    syntax:
      content: 'function retrieveEntity<T>(table: string, partitionKey: string, rowKey: string, callback: ErrorOrResult<T>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: partitionKey
          type:
            - string
          description: La chiave di partizione.
        - id: rowKey
          type:
            - string
          description: La chiave di riga.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<T>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` sarà l'entità corrisponda.
                                                                                        `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity
    name: 'retrieveEntity(string, string, string, TableEntityRequestOptions, ErrorOrResult<T>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Recupera un'entità da una tabella.
    syntax:
      content: 'function retrieveEntity<T>(table: string, partitionKey: string, rowKey: string, options: TableEntityRequestOptions, callback: ErrorOrResult<T>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: partitionKey
          type:
            - string
          description: La chiave di partizione.
        - id: rowKey
          type:
            - string
          description: La chiave di riga.
        - id: options
          type:
            - azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<T>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` sarà l'entità corrisponda.
                                                                                        `response` conterrà le informazioni correlate a questa operazione.

            La logica per la restituzione di tipi di entità può diventare complicata.  Ecco l'algoritmo utilizzato:
            ```
            var propertyType;

            if (propertyResovler) {                      // If the caller provides a propertyResolver in the options, use it
              propertyType = propertyResolver(partitionKey, rowKey, propertyName, propertyValue, propertyTypeFromService);
            } else if (propertyTypeFromService) {        // If the service provides us a property type, use it.  See below for an explanation of when this will and won't occur.
              propertyType = propertyTypeFromService;
            } else if (autoResolveProperties) {          // If options.autoResolveProperties is set to true
              if (javascript type is string) {           // See below for an explanation of how and why autoResolveProperties works as it does.
                propertyType = 'Edm.String';
              } else if (javascript type is boolean) {
                propertyType = 'Edm.Boolean';
              }
            }

            if (propertyType) {
              // Set the property type on the property.
            } else {
              // Property gets no EdmType.
            }
            ```
            Note:

            * Il servizio fornisce solo un tipo se viene utilizzato JsonFullMetadata o JsonMinimalMetadata e se il tipo è Int64, Guid, Binary o data/ora.
            * Spiegazione di autoResolveProperties:
                * Stringa Ottiene risolta correttamente "Edm. String".
                * Int64, Guid, Binary e data/ora vengono risolti in "Edm. String".  Questo avviene solo se viene usato JsonNoMetadata (in caso contrario, il servizio fornirà propertyType in un passaggio precedente).
                * Valore booleano Ottiene risolta correttamente 'Boolean'.
                * Per l'oggetto viene restituito sia Int32 e Double, alcuna informazione sul tipo, anche in caso di autoResolveProperties = true.  Ciò è dovuto all'impossibilità di distinguere tra i due in alcuni casi.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.setProxy
    name: setProxy(Proxy)
    children: []
    type: method
    langs:
      - typeScript
    summary: Imposta l'oggetto proxy specificato dal chiamante.
    syntax:
      content: 'function setProxy(proxy: Proxy)'
      parameters:
        - id: proxy
          type:
            - azure-storage.azurestorage.common.services.storageserviceclient.Proxy
          description: |
            proxy da utilizzare per il tunneling {host: porta nome host: porta numero proxyAuth: 'utente: password' per le intestazioni di autenticazione di base: {...} intestazioni per la chiave del server proxy: chiave per il proxy server ca: autorità di certificazione per certificato server proxy: certificato per il server proxy} Se null o non definito, Cancella proxy
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
    name: 'setServiceProperties(ServiceProperties, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Imposta le proprietà del servizio tabelle di un account di archiviazione, tra cui Analitica di archiviazione di Azure.
      È inoltre possibile utilizzare questa operazione per impostare la versione predefinita per tutte le richieste in ingresso che non è specificata una versione.
    syntax:
      content: 'function setServiceProperties(serviceProperties: ServiceProperties, callback: ErrorOrResponse)'
      parameters:
        - id: serviceProperties
          type:
            - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
          description: Le proprietà del servizio.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` conterrà informazioni se si verifica un errore; `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties
    name: 'setServiceProperties(ServiceProperties, RequestOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Imposta le proprietà del servizio tabelle di un account di archiviazione, tra cui Analitica di archiviazione di Azure.
      È inoltre possibile utilizzare questa operazione per impostare la versione predefinita per tutte le richieste in ingresso che non è specificata una versione.
    syntax:
      content: 'function setServiceProperties(serviceProperties: ServiceProperties, options: RequestOptions, callback: ErrorOrResponse)'
      parameters:
        - id: serviceProperties
          type:
            - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
          description: Le proprietà del servizio.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` conterrà informazioni se si verifica un errore; `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.setTableAcl_1
    name: 'setTableAcl(string, [key: string]: AccessPolicy, ErrorOrResult<Object>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Aggiorna ACL della tabella.
    syntax:
      content: 'function setTableAcl(table: string, signedIdentifiers: [key: string]: AccessPolicy, callback: ErrorOrResult<Object>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: signedIdentifiers
          type:
            - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
          description: Gli identificatori con segno. Gli identificatori firmati devono essere in una matrice.
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<Object>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni per la tabella.
                                                                                     `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.setTableAcl
    name: 'setTableAcl(string, [key: string]: AccessPolicy, RequestOptions, ErrorOrResult<Object>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Aggiorna ACL della tabella.
    syntax:
      content: 'function setTableAcl(table: string, signedIdentifiers: [key: string]: AccessPolicy, options: RequestOptions, callback: ErrorOrResult<Object>)'
      parameters:
        - id: table
          type:
            - string
          description: Il nome della tabella.
        - id: signedIdentifiers
          type:
            - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
          description: Gli identificatori con segno. Gli identificatori firmati devono essere in una matrice.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<Object>
          description: |
            `error` conterrà informazioni se si verifica un errore; in caso contrario `result` conterrà le informazioni per la tabella.
                                                                                     `response` conterrà le informazioni correlate a questa operazione.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.constructor
    name: 'TableService(string, string, StorageHost, boolean, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crea un nuovo oggetto StorageServiceClient.
    syntax:
      content: 'new TableService(storageAccount?: string, storageAccessKey?: string, host?: StorageHost, usePathStyleUri?: boolean, sasToken?: string)'
      parameters:
        - id: storageAccount
          type:
            - string
          description: L'account di archiviazione.
          optional: true
        - id: storageAccessKey
          type:
            - string
          description: La chiave di accesso di archiviazione.
          optional: true
        - id: host
          type:
            - azure-storage.azurestorage.StorageHost
          description: L'host del servizio.
          optional: true
        - id: usePathStyleUri
          type:
            - boolean
          description: Se che indica un valore booleano da utilizzare percorso URI di stile.
          optional: true
        - id: sasToken
          type:
            - string
          description: |
            Il token di firma di accesso condiviso.
          optional: true
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.useNagleAlgorithm
    name: useNagleAlgorithm
    fullName: useNagleAlgorithm
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Determina se l''algoritmo Nagle viene usato per le richieste effettuate tramite il servizio di Accodamento; true per usare l''algoritmo Nagle. in caso contrario, false. Il valore predefinito è False.'
    syntax:
      content: 'useNagleAlgorithm: boolean'
      return:
        type:
          - boolean
    package: azure-storage
  - uid: azure-storage.azurestorage.services.table.TableService.withFilter
    name: withFilter(IFilter)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Associare questa TableService un'operazione di filtraggio. Le operazioni di filtro possono includere la registrazione, la ripetizione automatica dei tentativi e così via. Operazioni di filtro sono oggetti che implementano un metodo con la firma: "handle di funzione (requestOptions, successivo)".

      Dopo avere eseguito la pre-elaborazione sulle opzioni della richiesta, il metodo deve chiamare "next" passando un callback con la firma seguente: firma:

          "function (returnObject, finalCallback, next)"

      In questo callback, e dopo l'elaborazione del returnObject (la risposta della richiesta al server), il callback deve richiamare "next", se questo esiste, per continuare a elaborare altri filtri oppure semplicemente richiamare finalCallback per concludere la chiamata al servizio.
    syntax:
      content: 'function withFilter(newFilter: IFilter)'
      parameters:
        - id: newFilter
          type:
            - azure-storage.azurestorage.common.filters.IFilter
          description: ''
      return:
        type:
          - azure-storage.azurestorage.services.table.TableService
    package: azure-storage
references:
  - uid: azure-storage.azurestorage.common.RequestOptions
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: azure-storage.azurestorage.common.RequestOptions
  - uid: azure-storage.azurestorage.common.filters.Next
    name: Next
    spec.typeScript:
      - name: Next
        fullName: Next
        uid: azure-storage.azurestorage.common.filters.Next
  - uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
    name: IRetryRequestOptions
    spec.typeScript:
      - name: IRetryRequestOptions
        fullName: IRetryRequestOptions
        uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
  - uid: azure-storage.azurestorage.common.filters.IFilter
    name: IFilter
    spec.typeScript:
      - name: IFilter
        fullName: IFilter
        uid: azure-storage.azurestorage.common.filters.IFilter
  - uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
    name: IRetryContext
    spec.typeScript:
      - name: IRetryContext
        fullName: IRetryContext
        uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
  - uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
    name: RetryPolicyFilter
    spec.typeScript:
      - name: RetryPolicyFilter
        fullName: RetryPolicyFilter
        uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
  - uid: azure-storage.Map<any>
    name: Map<any>
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-storage.Map
      - name: <any>
        fullName: <any>
  - uid: azure-storage.Map<string>
    name: Map<string>
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-storage.Map
      - name: <string>
        fullName: <string>
  - uid: azure-storage.azurestorage.common.http.webresource.WebResource
    name: WebResource
    spec.typeScript:
      - name: WebResource
        fullName: WebResource
        uid: azure-storage.azurestorage.common.http.webresource.WebResource
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
    name: ServiceProperties
    spec.typeScript:
      - name: ServiceProperties
        fullName: ServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
    name: DeleteRetentionPolicyProperties
    spec.typeScript:
      - name: DeleteRetentionPolicyProperties
        fullName: DeleteRetentionPolicyProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
    name: MetricsProperties
    spec.typeScript:
      - name: MetricsProperties
        fullName: MetricsProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
    name: LoggingProperties
    spec.typeScript:
      - name: LoggingProperties
        fullName: LoggingProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
    name: StaticWebsiteProperties
    spec.typeScript:
      - name: StaticWebsiteProperties
        fullName: StaticWebsiteProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
    name: RetentionPolicy
    spec.typeScript:
      - name: RetentionPolicy
        fullName: RetentionPolicy
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
  - uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
    name: StorageServiceClient
    spec.typeScript:
      - name: StorageServiceClient
        fullName: StorageServiceClient
        uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  - uid: azure-storage.azurestorage.StorageHost
    name: StorageHost
    spec.typeScript:
      - name: StorageHost
        fullName: StorageHost
        uid: azure-storage.azurestorage.StorageHost
  - uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
    name: LocationMode
    spec.typeScript:
      - name: LocationMode
        fullName: LocationMode
        uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
  - uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
    name: Logger
    spec.typeScript:
      - name: Logger
        fullName: Logger
        uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
  - uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
    name: Proxy
    spec.typeScript:
      - name: Proxy
        fullName: Proxy
        uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
  - uid: azure-storage.azurestorage.AccessConditions
    name: AccessConditions
    spec.typeScript:
      - name: AccessConditions
        fullName: AccessConditions
        uid: azure-storage.azurestorage.AccessConditions
  - uid: azure-storage.azurestorage.common.AccessPolicy
    name: AccessPolicy
    spec.typeScript:
      - name: AccessPolicy
        fullName: AccessPolicy
        uid: azure-storage.azurestorage.common.AccessPolicy
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
    name: LeaseRequestOptions
    spec.typeScript:
      - name: LeaseRequestOptions
        fullName: LeaseRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
    name: ConditionalRequestOption
    spec.typeScript:
      - name: ConditionalRequestOption
        fullName: ConditionalRequestOption
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.Block[]'
    name: 'Block[]'
    spec.typeScript:
      - name: Block
        fullName: Block
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
    name: ContainerOptions
    spec.typeScript:
      - name: ContainerOptions
        fullName: ContainerOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
    name: ContainerResult
    spec.typeScript:
      - name: ContainerResult
        fullName: ContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - uid: '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
    name: AccessPolicy
    spec.typeScript:
      - name: '[key: string]: '
        fullName: '[key: string]: '
      - name: AccessPolicy
        fullName: AccessPolicy
        uid: azure-storage.azurestorage.common.AccessPolicy
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
    name: BlobRequestOptions
    spec.typeScript:
      - name: BlobRequestOptions
        fullName: BlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  - uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    name: SpeedSummary
    spec.typeScript:
      - name: SpeedSummary
        fullName: SpeedSummary
        uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
    name: CreateBlobRequestOptions
    spec.typeScript:
      - name: CreateBlobRequestOptions
        fullName: CreateBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  - uid: azure-storage.azurestorage.common.ContinuationToken
    name: ContinuationToken
    spec.typeScript:
      - name: ContinuationToken
        fullName: ContinuationToken
        uid: azure-storage.azurestorage.common.ContinuationToken
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult[]'
    name: 'BlobDirectoryResult[]'
    spec.typeScript:
      - name: BlobDirectoryResult
        fullName: BlobDirectoryResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
    name: ListBlobsSegmentedRequestOptions
    spec.typeScript:
      - name: ListBlobsSegmentedRequestOptions
        fullName: ListBlobsSegmentedRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult[]'
    name: 'BlobResult[]'
    spec.typeScript:
      - name: BlobResult
        fullName: BlobResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult[]'
    name: 'ContainerResult[]'
    spec.typeScript:
      - name: ContainerResult
        fullName: ContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
      - name: '[]'
        fullName: '[]'
  - uid: string | azure-storage.azurestorage.StorageHost
    name: StorageHost
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: StorageHost
        fullName: StorageHost
        uid: azure-storage.azurestorage.StorageHost
  - uid: azure-storage.azurestorage.ErrorOrResponse
    name: ErrorOrResponse
    spec.typeScript:
      - name: ErrorOrResponse
        fullName: ErrorOrResponse
        uid: azure-storage.azurestorage.ErrorOrResponse
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
    name: LeaseResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: LeaseResult
        fullName: LeaseResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
    name: AcquireLeaseRequestOptions
    spec.typeScript:
      - name: AcquireLeaseRequestOptions
        fullName: AcquireLeaseRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
    name: AppendBlobRequestOptions
    spec.typeScript:
      - name: AppendBlobRequestOptions
        fullName: AppendBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
    name: BlobResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BlobResult
        fullName: BlobResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
    name: BreakLeaseRequestOptions
    spec.typeScript:
      - name: BreakLeaseRequestOptions
        fullName: BreakLeaseRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
    name: PutBlockListRequest
    spec.typeScript:
      - name: PutBlockListRequest
        fullName: PutBlockListRequest
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  - uid: azure-storage.azurestorage.ErrorOrResult<string>
    name: ErrorOrResult<string>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <string>
        fullName: <string>
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
    name: CreateBlockBlobRequestOptions
    spec.typeScript:
      - name: CreateBlockBlobRequestOptions
        fullName: CreateBlockBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
    name: CreateBlockRequestOptions
    spec.typeScript:
      - name: CreateBlockRequestOptions
        fullName: CreateBlockRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
    name: ContainerResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ContainerResult
        fullName: ContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
    name: CreateContainerOptions
    spec.typeScript:
      - name: CreateContainerOptions
        fullName: CreateContainerOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
    name: CreatePageBlobOptions
    spec.typeScript:
      - name: CreatePageBlobOptions
        fullName: CreatePageBlobOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
    name: GetBlobRequestOptions
    spec.typeScript:
      - name: GetBlobRequestOptions
        fullName: GetBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
    name: DeleteBlobRequestOptions
    spec.typeScript:
      - name: DeleteBlobRequestOptions
        fullName: DeleteBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<boolean>
    name: ErrorOrResult<boolean>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <boolean>
        fullName: <boolean>
  - uid: azure-storage.azurestorage.common.SharedAccessPolicy
    name: SharedAccessPolicy
    spec.typeScript:
      - name: SharedAccessPolicy
        fullName: SharedAccessPolicy
        uid: azure-storage.azurestorage.common.SharedAccessPolicy
  - uid: azure-storage.azurestorage.common.ContentSettingsHeaders
    name: ContentSettingsHeaders
    spec.typeScript:
      - name: ContentSettingsHeaders
        fullName: ContentSettingsHeaders
        uid: azure-storage.azurestorage.common.ContentSettingsHeaders
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
    name: AccountProperties>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: AccountProperties
        fullName: AccountProperties
        uid: azure-storage.azurestorage.common.models.AccountProperties
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
    name: BlobToText
    spec.typeScript:
      - name: BlobToText
        fullName: BlobToText
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
    name: ContainerAclResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ContainerAclResult
        fullName: ContainerAclResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
      - name: '>'
        fullName: '>'
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>'
    name: 'RangeDiff[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: RangeDiff
        fullName: RangeDiff
        uid: azure-storage.azurestorage.common.RangeDiff
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
    name: BlobServiceProperties>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BlobServiceProperties
        fullName: BlobServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
    name: ServiceStats>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ServiceStats
        fullName: ServiceStats
        uid: azure-storage.azurestorage.common.models.ServiceStats
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult>
    name: ListBlobDirectoriesResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListBlobDirectoriesResult
        fullName: ListBlobDirectoriesResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
    name: ListBlobPrefixesSegmentedRequestOptions
    spec.typeScript:
      - name: ListBlobPrefixesSegmentedRequestOptions
        fullName: ListBlobPrefixesSegmentedRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
    name: ListBlobsResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListBlobsResult
        fullName: ListBlobsResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
    name: BlockListResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BlockListResult
        fullName: BlockListResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
    name: ListContainerOptions
    spec.typeScript:
      - name: ListContainerOptions
        fullName: ListContainerOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
    name: ListContainerResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListContainerResult
        fullName: ListContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
      - name: '>'
        fullName: '>'
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>'
    name: 'Range[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: Range
        fullName: Range
        uid: azure-storage.azurestorage.common.Range
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
    name: SetBlobPropertiesRequestOptions
    spec.typeScript:
      - name: SetBlobPropertiesRequestOptions
        fullName: SetBlobPropertiesRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
    name: ContainerAclOptions
    spec.typeScript:
      - name: ContainerAclOptions
        fullName: ContainerAclOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
    name: BlobServiceProperties
    spec.typeScript:
      - name: BlobServiceProperties
        fullName: BlobServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
    name: CopyBlobRequestOptions
    spec.typeScript:
      - name: CopyBlobRequestOptions
        fullName: CopyBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
    name: BlobService
    spec.typeScript:
      - name: BlobService
        fullName: BlobService
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  - uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
    name: FileServiceOptions
    spec.typeScript:
      - name: FileServiceOptions
        fullName: FileServiceOptions
        uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
  - uid: 'azure-storage.azurestorage.services.file.FileService.ShareResult[]'
    name: 'ShareResult[]'
    spec.typeScript:
      - name: ShareResult
        fullName: ShareResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.file.FileService.ShareResult
    name: ShareResult
    spec.typeScript:
      - name: ShareResult
        fullName: ShareResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - uid: azure-storage.Map<azure-storage.azurestorage.common.AccessPolicy>
    name: AccessPolicy>
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-storage.Map
      - name: <
        fullName: <
      - name: AccessPolicy
        fullName: AccessPolicy
        uid: azure-storage.azurestorage.common.AccessPolicy
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
    name: FileResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: FileResult
        fullName: FileResult
        uid: azure-storage.azurestorage.services.file.FileService.FileResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
    name: CreateDirectoryRequestOptions
    spec.typeScript:
      - name: CreateDirectoryRequestOptions
        fullName: CreateDirectoryRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
    name: DirectoryResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: DirectoryResult
        fullName: DirectoryResult
        uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
    name: CreateFileRequestOptions
    spec.typeScript:
      - name: CreateFileRequestOptions
        fullName: CreateFileRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
    name: CreateRangeRequestOptions
    spec.typeScript:
      - name: CreateRangeRequestOptions
        fullName: CreateRangeRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
    name: GetFileRequestOptions
    spec.typeScript:
      - name: GetFileRequestOptions
        fullName: GetFileRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
    name: CreateShareRequestOptions
    spec.typeScript:
      - name: CreateShareRequestOptions
        fullName: CreateShareRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
    name: ShareResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ShareResult
        fullName: ShareResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
    name: DeleteShareOptions
    spec.typeScript:
      - name: DeleteShareOptions
        fullName: DeleteShareOptions
        uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
  - uid: azure-storage.azurestorage.services.file.FileService.FileToText
    name: FileToText
    spec.typeScript:
      - name: FileToText
        fullName: FileToText
        uid: azure-storage.azurestorage.services.file.FileService.FileToText
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
    name: ServiceProperties>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ServiceProperties
        fullName: ServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
    name: ShareAclResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ShareAclResult
        fullName: ShareAclResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
    name: ListRequestOptions
    spec.typeScript:
      - name: ListRequestOptions
        fullName: ListRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
    name: ListFilesAndDirectoriesResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListFilesAndDirectoriesResult
        fullName: ListFilesAndDirectoriesResult
        uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
    name: ListRangeRequestOptions
    spec.typeScript:
      - name: ListRangeRequestOptions
        fullName: ListRangeRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
    name: ListShareRequestOptions
    spec.typeScript:
      - name: ListShareRequestOptions
        fullName: ListShareRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
    name: ListSharesResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListSharesResult
        fullName: ListSharesResult
        uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
    name: SetFilePropertiesRequestOptions
    spec.typeScript:
      - name: SetFilePropertiesRequestOptions
        fullName: SetFilePropertiesRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
    name: ShareProperties
    spec.typeScript:
      - name: ShareProperties
        fullName: ShareProperties
        uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
  - uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
    name: CopyFileRequestOptions
    spec.typeScript:
      - name: CopyFileRequestOptions
        fullName: CopyFileRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService
    name: FileService
    spec.typeScript:
      - name: FileService
        fullName: FileService
        uid: azure-storage.azurestorage.services.file.FileService
  - uid: 'azure-storage.azurestorage.services.queue.QueueService.QueueResult[]'
    name: 'QueueResult[]'
    spec.typeScript:
      - name: QueueResult
        fullName: QueueResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
    name: QueueMessageEncoder
    spec.typeScript:
      - name: QueueMessageEncoder
        fullName: QueueMessageEncoder
        uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
  - uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
    name: CreateMessageRequestOptions
    spec.typeScript:
      - name: CreateMessageRequestOptions
        fullName: CreateMessageRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
    name: QueueMessageResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueueMessageResult
        fullName: QueueMessageResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
    name: CreateQueueRequestOptions
    spec.typeScript:
      - name: CreateQueueRequestOptions
        fullName: CreateQueueRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
    name: QueueResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueueResult
        fullName: QueueResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
    name: GetMessageRequestOptions
    spec.typeScript:
      - name: GetMessageRequestOptions
        fullName: GetMessageRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
  - uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
    name: GetMessagesRequestOptions
    spec.typeScript:
      - name: GetMessagesRequestOptions
        fullName: GetMessagesRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>'
    name: 'QueueMessageResult[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueueMessageResult
        fullName: QueueMessageResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
    name: ListQueuesRequestOptions
    spec.typeScript:
      - name: ListQueuesRequestOptions
        fullName: ListQueuesRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
    name: ListQueueResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListQueueResult
        fullName: ListQueueResult
        uid: azure-storage.azurestorage.services.queue.QueueService.ListQueueResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
    name: PeekMessagesRequestOptions
    spec.typeScript:
      - name: PeekMessagesRequestOptions
        fullName: PeekMessagesRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
  - uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
    name: UpdateMessageRequestOptions
    spec.typeScript:
      - name: UpdateMessageRequestOptions
        fullName: UpdateMessageRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
  - uid: azure-storage.azurestorage.services.queue.QueueService
    name: QueueService
    spec.typeScript:
      - name: QueueService
        fullName: QueueService
        uid: azure-storage.azurestorage.services.queue.QueueService
  - uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
    name: BatchResponse
    spec.typeScript:
      - name: BatchResponse
        fullName: BatchResponse
        uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
  - uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
    name: TableEntityRequestOptions
    spec.typeScript:
      - name: TableEntityRequestOptions
        fullName: TableEntityRequestOptions
        uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  - uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
    name: PropertyResolver
    spec.typeScript:
      - name: PropertyResolver
        fullName: PropertyResolver
        uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
  - uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
    name: ListTablesContinuationToken
    spec.typeScript:
      - name: ListTablesContinuationToken
        fullName: ListTablesContinuationToken
        uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  - uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
    name: TableContinuationToken
    spec.typeScript:
      - name: TableContinuationToken
        fullName: TableContinuationToken
        uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  - uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
    name: TableAccessPolicy
    spec.typeScript:
      - name: TableAccessPolicy
        fullName: TableAccessPolicy
        uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
    name: TableResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: TableResult
        fullName: TableResult
        uid: azure-storage.azurestorage.services.table.TableService.TableResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableBatch
    name: TableBatch
    spec.typeScript:
      - name: TableBatch
        fullName: TableBatch
        uid: azure-storage.azurestorage.services.table.TableBatch
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>'
    name: 'BatchResult[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BatchResult
        fullName: BatchResult
        uid: azure-storage.azurestorage.services.table.TableService.BatchResult
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
    name: TableSharedAccessPolicy
    spec.typeScript:
      - name: TableSharedAccessPolicy
        fullName: TableSharedAccessPolicy
        uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
    name: GetTableAclResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: GetTableAclResult
        fullName: GetTableAclResult
        uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
    name: InsertEntityRequestOptions
    spec.typeScript:
      - name: InsertEntityRequestOptions
        fullName: InsertEntityRequestOptions
        uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
    name: EntityMetadata>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: '<T | '
        fullName: '<T | '
      - name: EntityMetadata
        fullName: EntityMetadata
        uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
    name: EntityMetadata>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: EntityMetadata
        fullName: EntityMetadata
        uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
    name: ListTablesRequestOptions
    spec.typeScript:
      - name: ListTablesRequestOptions
        fullName: ListTablesRequestOptions
        uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
    name: ListTablesResponse>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListTablesResponse
        fullName: ListTablesResponse
        uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableQuery
    name: TableQuery
    spec.typeScript:
      - name: TableQuery
        fullName: TableQuery
        uid: azure-storage.azurestorage.services.table.TableQuery
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
    name: QueryEntitiesResult<T>>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueryEntitiesResult
        fullName: QueryEntitiesResult
        uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
      - name: <T>>
        fullName: <T>>
  - uid: azure-storage.azurestorage.ErrorOrResult<T>
    name: ErrorOrResult<T>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <T>
        fullName: <T>
  - uid: azure-storage.azurestorage.ErrorOrResult<Object>
    name: ErrorOrResult<Object>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <Object>
        fullName: <Object>
  - uid: azure-storage.azurestorage.services.table.TableService
    name: TableService
    spec.typeScript:
      - name: TableService
        fullName: TableService
        uid: azure-storage.azurestorage.services.table.TableService
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Buffer>
    name: EntityProperty<Buffer>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <Buffer>
        fullName: <Buffer>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<boolean>
    name: EntityProperty<boolean>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <boolean>
        fullName: <boolean>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Date>
    name: EntityProperty<Date>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <Date>
        fullName: <Date>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<number>
    name: EntityProperty<number>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <number>
        fullName: <number>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<any>
    name: EntityProperty<any>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <any>
        fullName: <any>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<string>
    name: EntityProperty<string>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <string>
        fullName: <string>
  - uid: 'azure-storage.azurestorage.services.table.TableOperation[]'
    name: 'TableOperation[]'
    spec.typeScript:
      - name: TableOperation
        fullName: TableOperation
        uid: azure-storage.azurestorage.services.table.TableOperation
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.table.TableOperation
    name: TableOperation
    spec.typeScript:
      - name: TableOperation
        fullName: TableOperation
        uid: azure-storage.azurestorage.services.table.TableOperation
  - uid: azure-storage.azurestorage.StorageError | Error
    name: StorageError | Error
    spec.typeScript:
      - name: StorageError
        fullName: StorageError
        uid: azure-storage.azurestorage.StorageError
      - name: ' | Error'
        fullName: ' | Error'
  - uid: azure-storage.azurestorage.ServiceResponse
    name: ServiceResponse
    spec.typeScript:
      - name: ServiceResponse
        fullName: ServiceResponse
        uid: azure-storage.azurestorage.ServiceResponse
  - uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
    name: TokenCredential
    spec.typeScript:
      - name: TokenCredential
        fullName: TokenCredential
        uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
  - uid: azure-storage.azurestorage.services.table.TableService.BatchResult
    name: BatchResult
  - uid: azure-storage.azurestorage.services.table.TableService.createTable_1
    name: createTable_1
  - uid: azure-storage.azurestorage.services.table.TableService.createTable
    name: createTable
  - uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists_1
    name: createTableIfNotExists_1
  - uid: azure-storage.azurestorage.services.table.TableService.createTableIfNotExists
    name: createTableIfNotExists
  - uid: azure-storage.azurestorage.services.table.TableService.defaultClientRequestTimeoutInMs
    name: defaultClientRequestTimeoutInMs
  - uid: azure-storage.azurestorage.services.table.TableService.defaultLocationMode
    name: defaultLocationMode
  - uid: azure-storage.azurestorage.services.table.TableService.defaultMaximumExecutionTimeInMs
    name: defaultMaximumExecutionTimeInMs
  - uid: azure-storage.azurestorage.services.table.TableService.defaultPayloadFormat
    name: defaultPayloadFormat
  - uid: azure-storage.azurestorage.services.table.TableService.defaultTimeoutIntervalInMs
    name: defaultTimeoutIntervalInMs
  - uid: azure-storage.azurestorage.services.table.TableService.deleteEntity_1
    name: deleteEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.deleteEntity
    name: deleteEntity
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTable_1
    name: deleteTable_1
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTable
    name: deleteTable
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists_1
    name: deleteTableIfExists_1
  - uid: azure-storage.azurestorage.services.table.TableService.deleteTableIfExists
    name: deleteTableIfExists
  - uid: azure-storage.azurestorage.services.table.TableService.doesTableExist_1
    name: doesTableExist_1
  - uid: azure-storage.azurestorage.services.table.TableService.doesTableExist
    name: doesTableExist
  - uid: azure-storage.azurestorage.services.table.TableService.enableGlobalHttpAgent
    name: enableGlobalHttpAgent
  - uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
    name: EntityMetadata
  - uid: azure-storage.azurestorage.services.table.TableService.EntityProperty
    name: EntityProperty
  - uid: azure-storage.azurestorage.services.table.TableService.executeBatch_1
    name: executeBatch_1
  - uid: azure-storage.azurestorage.services.table.TableService.executeBatch
    name: executeBatch
  - uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignature
    name: generateSharedAccessSignature
  - uid: azure-storage.azurestorage.services.table.TableService.generateSharedAccessSignatureWithVersion
    name: generateSharedAccessSignatureWithVersion
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties_1
    name: getServiceProperties_1
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceProperties
    name: getServiceProperties
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceStats_1
    name: getServiceStats_1
  - uid: azure-storage.azurestorage.services.table.TableService.getServiceStats
    name: getServiceStats
  - uid: azure-storage.azurestorage.services.table.TableService.getTableAcl_1
    name: getTableAcl_1
  - uid: azure-storage.azurestorage.services.table.TableService.getTableAcl
    name: getTableAcl
  - uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
    name: GetTableAclResult
  - uid: azure-storage.azurestorage.services.table.TableService.getUrl
    name: getUrl
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity_2
    name: insertEntity_2
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity
    name: insertEntity
  - uid: azure-storage.azurestorage.services.table.TableService.insertEntity_1
    name: insertEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity_1
    name: insertOrMergeEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrMergeEntity
    name: insertOrMergeEntity
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity_1
    name: insertOrReplaceEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.insertOrReplaceEntity
    name: insertOrReplaceEntity
  - uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
    name: ListTablesResponse
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented_1
    name: listTablesSegmented_1
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmented
    name: listTablesSegmented
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix_1
    name: listTablesSegmentedWithPrefix_1
  - uid: azure-storage.azurestorage.services.table.TableService.listTablesSegmentedWithPrefix
    name: listTablesSegmentedWithPrefix
  - uid: azure-storage.azurestorage.services.table.TableService.logger
    name: logger
  - uid: azure-storage.azurestorage.services.table.TableService.mergeEntity_1
    name: mergeEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.mergeEntity
    name: mergeEntity
  - uid: azure-storage.azurestorage.services.table.TableService.proxy
    name: proxy
  - uid: azure-storage.azurestorage.services.table.TableService.queryEntities_1
    name: queryEntities_1
  - uid: azure-storage.azurestorage.services.table.TableService.queryEntities
    name: queryEntities
  - uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
    name: QueryEntitiesResult
  - uid: azure-storage.azurestorage.services.table.TableService.replaceEntity_1
    name: replaceEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.replaceEntity
    name: replaceEntity
  - uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity_1
    name: retrieveEntity_1
  - uid: azure-storage.azurestorage.services.table.TableService.retrieveEntity
    name: retrieveEntity
  - uid: azure-storage.azurestorage.services.table.TableService.setProxy
    name: setProxy
  - uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties_1
    name: setServiceProperties_1
  - uid: azure-storage.azurestorage.services.table.TableService.setServiceProperties
    name: setServiceProperties
  - uid: azure-storage.azurestorage.services.table.TableService.setTableAcl_1
    name: setTableAcl_1
  - uid: azure-storage.azurestorage.services.table.TableService.setTableAcl
    name: setTableAcl
  - uid: azure-storage.azurestorage.services.table.TableService.TableResult
    name: TableResult
  - uid: azure-storage.azurestorage.services.table.TableService.constructor
    name: constructor
  - uid: azure-storage.azurestorage.services.table.TableService.useNagleAlgorithm
    name: useNagleAlgorithm
  - uid: azure-storage.azurestorage.services.table.TableService.withFilter
    name: withFilter