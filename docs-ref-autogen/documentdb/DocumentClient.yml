### YamlMime:UniversalReference
ms.openlocfilehash: 99d34b9f67f4793f59a448d80cf88796f9b44ae1
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/13/2018
ms.locfileid: "40056622"
items:
- uid: documentdb.DocumentClient
  id: documentdb.DocumentClient
  name: DocumentClient
  summary: >-
    Fornisce una rappresentazione logica sul lato client dell'account del database Azure Cosmos DB.

    Il client viene usato per configurare ed eseguire le richieste nel servizio di database Azure Cosmos DB.
  fullName: documentdb.DocumentClient
  type: Class
  children:
  - documentdb.DocumentClient.#ctor
  - documentdb.DocumentClient#getWriteEndpoint
  - documentdb.DocumentClient#getReadEndpoint
  - documentdb.DocumentClient#createDatabase
  - documentdb.DocumentClient#createCollection
  - documentdb.DocumentClient#createDocument
  - documentdb.DocumentClient#createAttachment
  - documentdb.DocumentClient#createUser
  - documentdb.DocumentClient#createPermission
  - documentdb.DocumentClient#createTrigger
  - documentdb.DocumentClient#createUserDefinedFunction
  - documentdb.DocumentClient#createStoredProcedure
  - documentdb.DocumentClient#createAttachmentAndUploadMedia
  - documentdb.DocumentClient#readDatabase
  - documentdb.DocumentClient#readCollection
  - documentdb.DocumentClient#readDocument
  - documentdb.DocumentClient#readAttachment
  - documentdb.DocumentClient#readUser
  - documentdb.DocumentClient#readPermission
  - documentdb.DocumentClient#readTrigger
  - documentdb.DocumentClient#readUserDefinedFunction
  - documentdb.DocumentClient#readStoredProcedure
  - documentdb.DocumentClient#readConflict
  - documentdb.DocumentClient#readDatabases
  - documentdb.DocumentClient#readCollections
  - documentdb.DocumentClient#readDocuments
  - documentdb.DocumentClient#readPartitionKeyRanges
  - documentdb.DocumentClient#readAttachments
  - documentdb.DocumentClient#readUsers
  - documentdb.DocumentClient#readPermissions
  - documentdb.DocumentClient#readTriggers
  - documentdb.DocumentClient#readUserDefinedFunctions
  - documentdb.DocumentClient#readStoredProcedures
  - documentdb.DocumentClient#readConflicts
  - documentdb.DocumentClient#queryDatabases
  - documentdb.DocumentClient#queryCollections
  - documentdb.DocumentClient#queryDocuments
  - documentdb.DocumentClient#queryPartitionKeyRanges
  - documentdb.DocumentClient#queryAttachments
  - documentdb.DocumentClient#queryUsers
  - documentdb.DocumentClient#queryPermissions
  - documentdb.DocumentClient#queryTriggers
  - documentdb.DocumentClient#queryUserDefinedFunctions
  - documentdb.DocumentClient#queryStoredProcedures
  - documentdb.DocumentClient#queryConflicts
  - documentdb.DocumentClient#deleteDatabase
  - documentdb.DocumentClient#deleteCollection
  - documentdb.DocumentClient#deleteDocument
  - documentdb.DocumentClient#deleteAttachment
  - documentdb.DocumentClient#deleteUser
  - documentdb.DocumentClient#deletePermission
  - documentdb.DocumentClient#deleteTrigger
  - documentdb.DocumentClient#deleteUserDefinedFunction
  - documentdb.DocumentClient#deleteStoredProcedure
  - documentdb.DocumentClient#deleteConflict
  - documentdb.DocumentClient#replaceCollection
  - documentdb.DocumentClient#replaceDocument
  - documentdb.DocumentClient#replaceAttachment
  - documentdb.DocumentClient#replaceUser
  - documentdb.DocumentClient#replacePermission
  - documentdb.DocumentClient#replaceTrigger
  - documentdb.DocumentClient#replaceUserDefinedFunction
  - documentdb.DocumentClient#replaceStoredProcedure
  - documentdb.DocumentClient#upsertDocument
  - documentdb.DocumentClient#upsertAttachment
  - documentdb.DocumentClient#upsertUser
  - documentdb.DocumentClient#upsertPermission
  - documentdb.DocumentClient#upsertTrigger
  - documentdb.DocumentClient#upsertUserDefinedFunction
  - documentdb.DocumentClient#upsertStoredProcedure
  - documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  - documentdb.DocumentClient#readMedia
  - documentdb.DocumentClient#updateMedia
  - documentdb.DocumentClient#executeStoredProcedure
  - documentdb.DocumentClient#replaceOffer
  - documentdb.DocumentClient#readOffer
  - documentdb.DocumentClient#readOffers
  - documentdb.DocumentClient#queryOffers
  - documentdb.DocumentClient#getDatabaseAccount
  - documentdb.DocumentClient#getSessionToken
  langs:
  - js
- id: documentdb.DocumentClient.#ctor
  uid: documentdb.DocumentClient.#ctor
  parent: documentdb.DocumentClient
  name: DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  fullName: documentdb.DocumentClient.DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  summary: >-
    Fornisce una rappresentazione logica sul lato client dell'account del database Azure Cosmos DB.

    Il client viene usato per configurare ed eseguire le richieste nel servizio di database Azure Cosmos DB.
  type: Constructor
  syntax:
    parameters:
    - id: urlConnection
      type:
      - string
      description: L'endpoint di servizio da usare per creare il client.
    - id: auth
      type:
      - object
      description: Oggetto che viene usato per autenticare le richieste e deve contiene una delle opzioni
    - id: auth.masterKey
      type:
      - string
      description: La chiave master di autorizzazione da usare per creare il client.
      optional: true
    - id: auth.resourceTokens
      type:
      - Object
      description: Oggetto che contiene i token delle risorse. Le chiavi per l'oggetto sono ID di risorsa e i valori sono i token di risorsa.
      optional: true
    - id: auth.permissionFeed
      type:
      - Array
      description: Matrice di <xref:Permission> oggetti.
      optional: true
    - id: connectionPolicy
      type:
      - object
      description: Un'istanza di <xref:ConnectionPolicy> classe. Questo parametro è facoltativo e connectionPolicy predefinita verrà utilizzato se viene omesso.
      optional: true
    - id: consistencyLevel
      type:
      - string
      description: Parametro facoltativo che rappresenta il livello di coerenza. Può accettare qualsiasi valore da <xref:ConsistencyLevel>.
      optional: true
    content: new DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  langs:
  - js
- uid: documentdb.DocumentClient#getWriteEndpoint
  id: documentdb.DocumentClient#getWriteEndpoint
  parent: documentdb.DocumentClient
  name: getWriteEndpoint(callback)
  summary: Ottiene l'endpoint di scrittura corrente per un account di database con replica geografica.
  fullName: documentdb.DocumentClient.getWriteEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: La funzione di callback che accetta endpoint(string) come argomento.
    content: function getWriteEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getReadEndpoint
  id: documentdb.DocumentClient#getReadEndpoint
  parent: documentdb.DocumentClient
  name: getReadEndpoint(callback)
  summary: Ottiene il curent endpoint per un account di database con replica geografica di lettura.
  fullName: documentdb.DocumentClient.getReadEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: La funzione di callback che accetta endpoint(string) come argomento.
    content: function getReadEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDatabase
  id: documentdb.DocumentClient#createDatabase
  parent: documentdb.DocumentClient
  name: createDatabase(body, options, callback)
  summary: >-
    Inviare una richiesta per la creazione di un database.

    <p>
     Un database consente di gestire utenti, autorizzazioni e un set di raccolte.  <br>
     Ogni Account di Database di Azure Cosmos DB è in grado di supportare più database indipendenti denominati, con il database in corso il contenitore logico per i dati. <br>
     Ogni Database è costituito da una o più raccolte, ognuna delle quali contiene a sua volta uno o più documenti. Poiché i database sono una risorsa amministrativa, chiave Master del servizio saranno necessari per poter accedere e completare correttamente tutte le attività utilizzando le API di utente. <br>
    </p>
  fullName: documentdb.DocumentClient.createDatabase(body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: body
      type:
      - Object
      description: Un oggetto json che rappresenta il database da creare.
    - id: body.id
      type:
      - string
      description: L'id del database.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function createDatabase(body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createCollection
  id: documentdb.DocumentClient#createCollection
  parent: documentdb.DocumentClient
  name: createCollection(databaseLink, body, options, callback)
  summary: >-
    Crea una raccolta.

    <p>

    Una raccolta è denominato contenitore logico per i documenti. <br>

    Un database può contenere zero o più raccolte denominate e ogni raccolta è costituita da zero o più documenti JSON. <br>

    Sia privo di schema, i documenti in una raccolta non sono necessario condividere la stessa struttura o i campi. <br>

    Poiché le raccolte sono risorse dell'applicazione, può essere autorizzati tramite la chiave master o le chiavi di risorsa. <br>

    </p>
  fullName: documentdb.DocumentClient.createCollection(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Il collegamento automatico del database.
    - id: body
      type:
      - object
      description: Rappresenta il corpo della raccolta.
    - id: body.id
      type:
      - string
      description: L'id della raccolta.
    - id: body.indexingPolicy
      type:
      - documentdb.IndexingPolicy
      description: I criteri di indicizzazione associato alla raccolta.
    - id: body.defaultTtl
      type:
      - number
      description: La durata predefinita in secondi per i documenti in una raccolta.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function createCollection(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDocument
  id: documentdb.DocumentClient#createDocument
  parent: documentdb.DocumentClient
  name: createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    Creare un documento.

    <p>

    Vi è alcuno schema di set per i documenti JSON. Possono contenere un numero qualsiasi di proprietà personalizzate, nonché un elenco facoltativo di allegati. <br>

    Un documento è una risorsa di applicazione e possa essere autorizzato tramite la chiave master o le chiavi di risorsa

    </p>
  fullName: documentdb.DocumentClient.createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Il collegamento di raccolta o il collegamento del database se si usa un resolver di partizioni
    - id: body
      type:
      - object
      description: Rappresenta il corpo del documento. Può contenere qualsiasi numero di proprietà definite dall'utente.
    - id: body.id
      type:
      - string
      description: L'id del documento, deve essere univoco per ogni documento.
      optional: true
    - id: body.ttl
      type:
      - number
      description: La durata in secondi del documento.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: Disabilita la generazione automatica di id. Se manca l'id nel corpo e questa opzione è true, verrà restituito un errore.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachment
  id: documentdb.DocumentClient#createAttachment
  parent: documentdb.DocumentClient
  name: createAttachment(documentLink, body, options, callback)
  summary: >-
    Creare un allegato per l'oggetto documento.

    <p>

    Ogni documento può contenere zero o più allegati. Gli allegati possono essere di qualsiasi tipo MIME - testo, immagini, dati binari. <br>

    Questi vengono archiviati esternamente in archiviazione Blob di Azure. Gli allegati vengono eliminati automaticamente quando il documento padre viene eliminato.

    </P>
  fullName: documentdb.DocumentClient.createAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Il collegamento automatico del documento.
    - id: body
      type:
      - Object
      description: I metadati di definisce il supporto degli allegati, ad esempio media, contentType. Può includere tutte le altre proprietà come parte di metadati.
    - id: body.contentType
      type:
      - string
      description: ContentType MIME dell'allegato.
    - id: body.media
      type:
      - string
      description: Collegamento multimediale associato il contenuto dell'allegato.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function createAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUser
  id: documentdb.DocumentClient#createUser
  parent: documentdb.DocumentClient
  name: createUser(databaseLink, body, options, callback)
  summary: Creare un utente del database.
  fullName: documentdb.DocumentClient.createUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Il collegamento automatico del database.
    - id: body
      type:
      - object
      description: Rappresenta il corpo dell'utente.
    - id: body.id
      type:
      - string
      description: L'id dell'utente.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function createUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createPermission
  id: documentdb.DocumentClient#createPermission
  parent: documentdb.DocumentClient
  name: createPermission(userLink, body, options, callback)
  summary: >-
    Creare un'autorizzazione.

    <p> Un'autorizzazione rappresenta una per ogni utente l'autorizzazione per accedere a una risorsa specifica, ad esempio, raccolta o documento.  </p>
  fullName: documentdb.DocumentClient.createPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Il collegamento automatico dell'utente.
    - id: body
      type:
      - object
      description: Rappresenta il corpo dell'autorizzazione.
    - id: body.id
      type:
      - string
      description: L'id dell'autorizzazione
    - id: body.permissionMode
      type:
      - string
      description: La modalità di autorizzazione, che deve essere un valore di <xref:documentdb.PermissionMode>
    - id: body.resource
      type:
      - string
      description: Il collegamento della risorsa che verrà applicata l'autorizzazione a.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function createPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createTrigger
  id: documentdb.DocumentClient#createTrigger
  parent: documentdb.DocumentClient
  name: createTrigger(collectionLink, trigger, options, callback)
  summary: >-
    Creare un trigger.

    <p>

    Azure Cosmos DB supporta pre e post-trigger definiti in JavaScript, per essere eseguito su Crea, Aggiorna ed Elimina. <br>

    Per altre informazioni, vedere la documentazione dell'API JavaScript lato server.

    </p>
  fullName: documentdb.DocumentClient.createTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: trigger
      type:
      - object
      description: Rappresenta il corpo del trigger.
    - id: trigger.id
      type:
      - string
      description: L'id del trigger.
    - id: trigger.triggerType
      type:
      - string
      description: Il tipo di trigger, deve essere uno dei valori di <xref:documentdb.TriggerType>.
    - id: trigger.triggerOperation
      type:
      - string
      description: L'operazione di trigger, deve essere uno dei valori di <xref:documentdb.TriggerOperation>.
    - id: trigger.serverScript
      type:
      - function
      description: Il corpo del trigger, può essere passata come sotto forma di stringa troppo.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function createTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUserDefinedFunction
  id: documentdb.DocumentClient#createUserDefinedFunction
  parent: documentdb.DocumentClient
  name: createUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    Creare un UserDefinedFunction.

    <p>

    Azure Cosmos DB supporta funzioni UDF di JavaScript che possono essere usati all'interno di query, stored procedure e trigger. <br>

    Per altre informazioni, vedere la documentazione dell'API JavaScript lato server.

    </p>
  fullName: documentdb.DocumentClient.createUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: udf
      type:
      - object
      description: Rappresenta il corpo di userDefinedFunction.
    - id: udf.id
      type:
      - string
      description: L'id della udf.
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: Il tipo di funzione definita dall'utente, deve essere uno dei valori di <xref:documentdb.UserDefinedFunctionType>
    - id: udf.serverScript
      type:
      - function
      description: Rappresenta il corpo di funzione definita dall'utente, può essere passata come sotto forma di stringa troppo.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function createUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createStoredProcedure
  id: documentdb.DocumentClient#createStoredProcedure
  parent: documentdb.DocumentClient
  name: createStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    Creare una stored procedure.

    <p>

    Azure Cosmos DB consente alle stored procedure da eseguire nel livello di archiviazione, direttamente in una raccolta di documenti. Lo script <br>

    viene eseguito in transazioni ACID nella partizione di risorsa di archiviazione primaria della raccolta specificata. Per altri dettagli, <br>

    vedere la documentazione dell'API JavaScript lato server.

    </p>
  fullName: documentdb.DocumentClient.createStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: sproc
      type:
      - object
      description: Rappresenta il corpo della stored procedure.
    - id: sproc.id
      type:
      - string
      description: L'id della stored procedure.
    - id: sproc.serverScript
      type:
      - function
      description: Il corpo della stored procedure, può essere passata come sotto forma di stringa troppo.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function createStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachmentAndUploadMedia
  id: documentdb.DocumentClient#createAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: Creare un allegato per l'oggetto documento.
  fullName: documentdb.DocumentClient.createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Il collegamento automatico del documento.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: flusso che rappresenta il supporto stesso che deve essere caricato.
    - id: options
      type:
      - documentdb.MediaOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabase
  id: documentdb.DocumentClient#readDatabase
  parent: documentdb.DocumentClient
  name: readDatabase(databaseLink, options, callback)
  summary: Legge un database.
  fullName: documentdb.DocumentClient.readDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Il collegamento automatico del database.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollection
  id: documentdb.DocumentClient#readCollection
  parent: documentdb.DocumentClient
  name: readCollection(collectionLink, options, callback)
  summary: Legge una raccolta.
  fullName: documentdb.DocumentClient.readCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocument
  id: documentdb.DocumentClient#readDocument
  parent: documentdb.DocumentClient
  name: readDocument(documentLink, options, callback)
  summary: Legge un documento.
  fullName: documentdb.DocumentClient.readDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Il collegamento automatico del documento.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachment
  id: documentdb.DocumentClient#readAttachment
  parent: documentdb.DocumentClient
  name: readAttachment(attachmentLink, options, callback)
  summary: Legge un oggetto allegato.
  fullName: documentdb.DocumentClient.readAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Il collegamento self link dell'allegato.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUser
  id: documentdb.DocumentClient#readUser
  parent: documentdb.DocumentClient
  name: readUser(userLink, options, callback)
  summary: Legge un utente.
  fullName: documentdb.DocumentClient.readUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Il collegamento automatico dell'utente.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermission
  id: documentdb.DocumentClient#readPermission
  parent: documentdb.DocumentClient
  name: readPermission(permissionLink, options, callback)
  summary: Legge un'autorizzazione.
  fullName: documentdb.DocumentClient.readPermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Il collegamento self link dell'autorizzazione.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readPermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readTrigger
  id: documentdb.DocumentClient#readTrigger
  parent: documentdb.DocumentClient
  name: readTrigger(triggerLink, options, callback)
  summary: Legge un oggetto trigger.
  fullName: documentdb.DocumentClient.readTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Il collegamento automatico del trigger.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunction
  id: documentdb.DocumentClient#readUserDefinedFunction
  parent: documentdb.DocumentClient
  name: readUserDefinedFunction(udfLink, options, callback)
  summary: Legge un oggetto funzione definita dall'utente.
  fullName: documentdb.DocumentClient.readUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Il collegamento automatico dell'utente, funzione definita dal.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedure
  id: documentdb.DocumentClient#readStoredProcedure
  parent: documentdb.DocumentClient
  name: readStoredProcedure(sprocLink, options, callback)
  summary: Legge un oggetto StoredProcedure.
  fullName: documentdb.DocumentClient.readStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Il collegamento self link della stored procedure.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflict
  id: documentdb.DocumentClient#readConflict
  parent: documentdb.DocumentClient
  name: readConflict(conflictLink, options, callback)
  summary: Legge un conflitto.
  fullName: documentdb.DocumentClient.readConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: Il collegamento automatico del conflitto.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabases
  id: documentdb.DocumentClient#readDatabases
  parent: documentdb.DocumentClient
  name: readDatabases(options)
  summary: Elenca tutti i database.
  fullName: documentdb.DocumentClient.readDatabases(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readDatabases(options)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollections
  id: documentdb.DocumentClient#readCollections
  parent: documentdb.DocumentClient
  name: readCollections(databaseLink, options)
  summary: Recupera tutte le raccolte nel database.
  fullName: documentdb.DocumentClient.readCollections(databaseLink, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Il collegamento automatico del database.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readCollections(databaseLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocuments
  id: documentdb.DocumentClient#readDocuments
  parent: documentdb.DocumentClient
  name: readDocuments(collectionLink, options)
  summary: Recupera tutti i documenti nella raccolta.
  fullName: documentdb.DocumentClient.readDocuments(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readDocuments(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readPartitionKeyRanges
  id: documentdb.DocumentClient#readPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: readPartitionKeyRanges(collectionLink, options)
  summary: Ottenere tutte le partizioni della chiave intervalli nella raccolta.
  fullName: documentdb.DocumentClient.readPartitionKeyRanges(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readPartitionKeyRanges(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachments
  id: documentdb.DocumentClient#readAttachments
  parent: documentdb.DocumentClient
  name: readAttachments(documentLink, options)
  summary: Ottenere tutti gli allegati per questo documento.
  fullName: documentdb.DocumentClient.readAttachments(documentLink, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Il collegamento automatico del documento.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readAttachments(documentLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUsers
  id: documentdb.DocumentClient#readUsers
  parent: documentdb.DocumentClient
  name: readUsers(databaseLink, feedOptions)
  summary: Ottenere tutti gli utenti in questo database.
  fullName: documentdb.DocumentClient.readUsers(databaseLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Il collegamento automatico del database.
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readUsers(databaseLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermissions
  id: documentdb.DocumentClient#readPermissions
  parent: documentdb.DocumentClient
  name: readPermissions(userLink, feedOptions)
  summary: Ottenere tutte le autorizzazioni per questo utente.
  fullName: documentdb.DocumentClient.readPermissions(userLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Il collegamento automatico dell'utente.
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readPermissions(userLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readTriggers
  id: documentdb.DocumentClient#readTriggers
  parent: documentdb.DocumentClient
  name: readTriggers(collectionLink, options)
  summary: Ottenere tutti i trigger di questa raccolta.
  fullName: documentdb.DocumentClient.readTriggers(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readTriggers(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunctions
  id: documentdb.DocumentClient#readUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: readUserDefinedFunctions(collectionLink, options)
  summary: Ottenere UserDefinedFunctions tutti in questa raccolta.
  fullName: documentdb.DocumentClient.readUserDefinedFunctions(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readUserDefinedFunctions(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedures
  id: documentdb.DocumentClient#readStoredProcedures
  parent: documentdb.DocumentClient
  name: readStoredProcedures(collectionLink, options)
  summary: Ottenere StoredProcedures tutti in questa raccolta.
  fullName: documentdb.DocumentClient.readStoredProcedures(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readStoredProcedures(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflicts
  id: documentdb.DocumentClient#readConflicts
  parent: documentdb.DocumentClient
  name: readConflicts(collectionLink, options)
  summary: Ottenere tutti i conflitti in questa raccolta.
  fullName: documentdb.DocumentClient.readConflicts(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di QueryIterator per gestire la lettura del feed."
    content: function readConflicts(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDatabases
  id: documentdb.DocumentClient#queryDatabases
  parent: documentdb.DocumentClient
  name: queryDatabases(query, options)
  summary: Elenca tutti i database che soddisfano una query.
  fullName: documentdb.DocumentClient.queryDatabases(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di QueryIterator per gestire la lettura del feed."
    content: function queryDatabases(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryCollections
  id: documentdb.DocumentClient#queryCollections
  parent: documentdb.DocumentClient
  name: queryCollections(databaseLink, query, options)
  summary: Le raccolte per il database di query.
  fullName: documentdb.DocumentClient.queryCollections(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Il collegamento automatico del database.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Rappresenta le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function queryCollections(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDocuments
  id: documentdb.DocumentClient#queryDocuments
  parent: documentdb.DocumentClient
  name: queryDocuments(documentsFeedOrDatabaseLink, query, options)
  summary: Query sui documenti della raccolta.
  fullName: documentdb.DocumentClient.queryDocuments(documentsFeedOrDatabaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Il collegamento di raccolta o il collegamento del database se si usa un resolver di partizioni
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Rappresenta le opzioni del feed.
      optional: true
    - id: options.partitionKey
      type:
      - object
      description: Chiave di partizione facoltativa da utilizzare con il resolver della partizione
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function queryDocuments(documentsFeedOrDatabaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPartitionKeyRanges
  id: documentdb.DocumentClient#queryPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: queryPartitionKeyRanges(databaseLink, query, options)
  summary: Eseguire una query gli intervalli di chiavi di partizione
  fullName: documentdb.DocumentClient.queryPartitionKeyRanges(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Il collegamento automatico del database.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Rappresenta le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function queryPartitionKeyRanges(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryAttachments
  id: documentdb.DocumentClient#queryAttachments
  parent: documentdb.DocumentClient
  name: queryAttachments(documentLink, query, options)
  summary: Eseguire una query gli allegati per il documento.
  fullName: documentdb.DocumentClient.queryAttachments(documentLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Il collegamento automatico del documento.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Rappresenta le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function queryAttachments(documentLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUsers
  id: documentdb.DocumentClient#queryUsers
  parent: documentdb.DocumentClient
  name: queryUsers(databaseLink, query, options)
  summary: Eseguire una query degli utenti per il database.
  fullName: documentdb.DocumentClient.queryUsers(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Il collegamento automatico del database.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Rappresenta le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function queryUsers(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPermissions
  id: documentdb.DocumentClient#queryPermissions
  parent: documentdb.DocumentClient
  name: queryPermissions(userLink, query, options)
  summary: Eseguire una query dell'autorizzazione per l'utente.
  fullName: documentdb.DocumentClient.queryPermissions(userLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Il collegamento automatico dell'utente.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Rappresenta le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function queryPermissions(userLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryTriggers
  id: documentdb.DocumentClient#queryTriggers
  parent: documentdb.DocumentClient
  name: queryTriggers(collectionLink, query, options)
  summary: I trigger per la raccolta di query.
  fullName: documentdb.DocumentClient.queryTriggers(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Rappresenta le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function queryTriggers(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUserDefinedFunctions
  id: documentdb.DocumentClient#queryUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: queryUserDefinedFunctions(collectionLink, query, options)
  summary: Query utente definite funzioni per la raccolta.
  fullName: documentdb.DocumentClient.queryUserDefinedFunctions(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Rappresenta le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function queryUserDefinedFunctions(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryStoredProcedures
  id: documentdb.DocumentClient#queryStoredProcedures
  parent: documentdb.DocumentClient
  name: queryStoredProcedures(collectionLink, query, options)
  summary: Eseguire una query di storedProcedures per la raccolta.
  fullName: documentdb.DocumentClient.queryStoredProcedures(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Rappresenta le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function queryStoredProcedures(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryConflicts
  id: documentdb.DocumentClient#queryConflicts
  parent: documentdb.DocumentClient
  name: queryConflicts(collectionLink, query, options)
  summary: I conflitti per la raccolta di query.
  fullName: documentdb.DocumentClient.queryConflicts(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Rappresenta le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function queryConflicts(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDatabase
  id: documentdb.DocumentClient#deleteDatabase
  parent: documentdb.DocumentClient
  name: deleteDatabase(databaseLink, options, callback)
  summary: Eliminare l'oggetto di database.
  fullName: documentdb.DocumentClient.deleteDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Il collegamento automatico del database.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function deleteDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteCollection
  id: documentdb.DocumentClient#deleteCollection
  parent: documentdb.DocumentClient
  name: deleteCollection(collectionLink, options, callback)
  summary: Eliminare l'oggetto raccolta.
  fullName: documentdb.DocumentClient.deleteCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function deleteCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDocument
  id: documentdb.DocumentClient#deleteDocument
  parent: documentdb.DocumentClient
  name: deleteDocument(documentLink, options, callback)
  summary: Eliminare l'oggetto documento.
  fullName: documentdb.DocumentClient.deleteDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Il collegamento automatico del documento.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function deleteDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteAttachment
  id: documentdb.DocumentClient#deleteAttachment
  parent: documentdb.DocumentClient
  name: deleteAttachment(attachmentLink, options, callback)
  summary: Eliminare l'oggetto allegato.
  fullName: documentdb.DocumentClient.deleteAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Il collegamento self link dell'allegato.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function deleteAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUser
  id: documentdb.DocumentClient#deleteUser
  parent: documentdb.DocumentClient
  name: deleteUser(userLink, options, callback)
  summary: Eliminare l'oggetto utente.
  fullName: documentdb.DocumentClient.deleteUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Il collegamento automatico dell'utente.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function deleteUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deletePermission
  id: documentdb.DocumentClient#deletePermission
  parent: documentdb.DocumentClient
  name: deletePermission(permissionLink, options, callback)
  summary: Eliminare l'oggetto di autorizzazione.
  fullName: documentdb.DocumentClient.deletePermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Il collegamento self link dell'autorizzazione.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function deletePermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteTrigger
  id: documentdb.DocumentClient#deleteTrigger
  parent: documentdb.DocumentClient
  name: deleteTrigger(triggerLink, options, callback)
  summary: Eliminare l'oggetto trigger.
  fullName: documentdb.DocumentClient.deleteTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Il collegamento automatico del trigger.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function deleteTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUserDefinedFunction
  id: documentdb.DocumentClient#deleteUserDefinedFunction
  parent: documentdb.DocumentClient
  name: deleteUserDefinedFunction(udfLink, options, callback)
  summary: Eliminare l'oggetto UserDefinedFunction.
  fullName: documentdb.DocumentClient.deleteUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Il collegamento automatico dell'utente, funzione definita dal.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function deleteUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteStoredProcedure
  id: documentdb.DocumentClient#deleteStoredProcedure
  parent: documentdb.DocumentClient
  name: deleteStoredProcedure(sprocLink, options, callback)
  summary: Eliminare l'oggetto StoredProcedure.
  fullName: documentdb.DocumentClient.deleteStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Il collegamento self link della stored procedure.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function deleteStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteConflict
  id: documentdb.DocumentClient#deleteConflict
  parent: documentdb.DocumentClient
  name: deleteConflict(conflictLink, options, callback)
  summary: Eliminare l'oggetto di conflitto.
  fullName: documentdb.DocumentClient.deleteConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: Il collegamento automatico del conflitto.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function deleteConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceCollection
  id: documentdb.DocumentClient#replaceCollection
  parent: documentdb.DocumentClient
  name: replaceCollection(collectionLink, collection, options, callback)
  summary: Sostituire la raccolta di documenti.
  fullName: documentdb.DocumentClient.replaceCollection(collectionLink, collection, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta di documenti.
    - id: collection
      type:
      - object
      description: Rappresenta il nuovo corpo raccolta documenti.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function replaceCollection(collectionLink, collection, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceDocument
  id: documentdb.DocumentClient#replaceDocument
  parent: documentdb.DocumentClient
  name: replaceDocument(documentLink, document, options, callback)
  summary: Sostituire l'oggetto documento.
  fullName: documentdb.DocumentClient.replaceDocument(documentLink, document, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Il collegamento automatico del documento.
    - id: document
      type:
      - object
      description: Rappresentano nuovo corpo del documento.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function replaceDocument(documentLink, document, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceAttachment
  id: documentdb.DocumentClient#replaceAttachment
  parent: documentdb.DocumentClient
  name: replaceAttachment(attachmentLink, attachment, options, callback)
  summary: Sostituire l'oggetto allegato.
  fullName: documentdb.DocumentClient.replaceAttachment(attachmentLink, attachment, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Il collegamento self link dell'allegato.
    - id: attachment
      type:
      - object
      description: Rappresenta il nuovo corpo allegato.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function replaceAttachment(attachmentLink, attachment, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUser
  id: documentdb.DocumentClient#replaceUser
  parent: documentdb.DocumentClient
  name: replaceUser(userLink, user, options, callback)
  summary: Sostituire l'oggetto utente.
  fullName: documentdb.DocumentClient.replaceUser(userLink, user, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Il collegamento automatico dell'utente.
    - id: user
      type:
      - object
      description: Rappresenta il nuovo corpo utente.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function replaceUser(userLink, user, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replacePermission
  id: documentdb.DocumentClient#replacePermission
  parent: documentdb.DocumentClient
  name: replacePermission(permissionLink, permission, options, callback)
  summary: Sostituire l'oggetto di autorizzazione.
  fullName: documentdb.DocumentClient.replacePermission(permissionLink, permission, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Il collegamento self link dell'autorizzazione.
    - id: permission
      type:
      - object
      description: Rappresenta il nuovo corpo dell'autorizzazione.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function replacePermission(permissionLink, permission, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceTrigger
  id: documentdb.DocumentClient#replaceTrigger
  parent: documentdb.DocumentClient
  name: replaceTrigger(triggerLink, trigger, options, callback)
  summary: Sostituire l'oggetto trigger.
  fullName: documentdb.DocumentClient.replaceTrigger(triggerLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Il collegamento automatico del trigger.
    - id: trigger
      type:
      - object
      description: Rappresenta il nuovo corpo del trigger.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function replaceTrigger(triggerLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUserDefinedFunction
  id: documentdb.DocumentClient#replaceUserDefinedFunction
  parent: documentdb.DocumentClient
  name: replaceUserDefinedFunction(udfLink, udf, options, callback)
  summary: Sostituire l'oggetto UserDefinedFunction.
  fullName: documentdb.DocumentClient.replaceUserDefinedFunction(udfLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Il collegamento automatico dell'utente, funzione definita dal.
    - id: udf
      type:
      - object
      description: Rappresenta il nuovo corpo di funzione definita dall'utente.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function replaceUserDefinedFunction(udfLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceStoredProcedure
  id: documentdb.DocumentClient#replaceStoredProcedure
  parent: documentdb.DocumentClient
  name: replaceStoredProcedure(sprocLink, sproc, options, callback)
  summary: Sostituire l'oggetto StoredProcedure.
  fullName: documentdb.DocumentClient.replaceStoredProcedure(sprocLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Il collegamento self link della stored procedure.
    - id: sproc
      type:
      - object
      description: Rappresenta il nuovo corpo della stored procedure.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function replaceStoredProcedure(sprocLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertDocument
  id: documentdb.DocumentClient#upsertDocument
  parent: documentdb.DocumentClient
  name: upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    Upsert per un documento.

    <p>

    Vi è alcuno schema di set per i documenti JSON. Possono contenere un numero qualsiasi di proprietà personalizzate, nonché un elenco facoltativo di allegati. <br>

    Un documento è una risorsa di applicazione e possa essere autorizzato tramite la chiave master o le chiavi di risorsa

    </p>
  fullName: documentdb.DocumentClient.upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Il collegamento di raccolta o il collegamento del database se si usa un resolver di partizioni
    - id: body
      type:
      - object
      description: Rappresenta il corpo del documento. Può contenere qualsiasi numero di proprietà definite dall'utente.
    - id: body.id
      type:
      - string
      description: L'id del documento, deve essere univoco per ogni documento.
      optional: true
    - id: body.ttl
      type:
      - number
      description: La durata in secondi del documento.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: Disabilita la generazione automatica di id. Se manca l'id nel corpo e questa opzione è true, verrà restituito un errore.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachment
  id: documentdb.DocumentClient#upsertAttachment
  parent: documentdb.DocumentClient
  name: upsertAttachment(documentLink, body, options, callback)
  summary: >-
    Upsert un allegato per l'oggetto documento.

    <p>

    Ogni documento può contenere zero o più allegati. Gli allegati possono essere di qualsiasi tipo MIME - testo, immagini, dati binari. <br>

    Questi vengono archiviati esternamente in archiviazione Blob di Azure. Gli allegati vengono eliminati automaticamente quando il documento padre viene eliminato.

    </P>
  fullName: documentdb.DocumentClient.upsertAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Il collegamento automatico del documento.
    - id: body
      type:
      - Object
      description: I metadati di definisce il supporto degli allegati, ad esempio media, contentType. Può includere tutte le altre proprietà come parte di metadati.
    - id: body.contentType
      type:
      - string
      description: ContentType MIME dell'allegato.
    - id: body.media
      type:
      - string
      description: Collegamento multimediale associato il contenuto dell'allegato.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function upsertAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUser
  id: documentdb.DocumentClient#upsertUser
  parent: documentdb.DocumentClient
  name: upsertUser(databaseLink, body, options, callback)
  summary: Upsert un utente del database.
  fullName: documentdb.DocumentClient.upsertUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Il collegamento automatico del database.
    - id: body
      type:
      - object
      description: Rappresenta il corpo dell'utente.
    - id: body.id
      type:
      - string
      description: L'id dell'utente.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function upsertUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertPermission
  id: documentdb.DocumentClient#upsertPermission
  parent: documentdb.DocumentClient
  name: upsertPermission(userLink, body, options, callback)
  summary: >-
    Upsert un'autorizzazione.

    <p> Un'autorizzazione rappresenta una per ogni utente l'autorizzazione per accedere a una risorsa specifica, ad esempio, raccolta o documento.  </p>
  fullName: documentdb.DocumentClient.upsertPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Il collegamento automatico dell'utente.
    - id: body
      type:
      - object
      description: Rappresenta il corpo dell'autorizzazione.
    - id: body.id
      type:
      - string
      description: L'id dell'autorizzazione
    - id: body.permissionMode
      type:
      - string
      description: La modalità di autorizzazione, che deve essere un valore di <xref:documentdb.PermissionMode>
    - id: body.resource
      type:
      - string
      description: Il collegamento della risorsa che verrà applicata l'autorizzazione a.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function upsertPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertTrigger
  id: documentdb.DocumentClient#upsertTrigger
  parent: documentdb.DocumentClient
  name: upsertTrigger(collectionLink, trigger, options, callback)
  summary: >-
    Upsert un trigger.

    <p>

    Azure Cosmos DB supporta pre e post-trigger definiti in JavaScript, per essere eseguito su Crea, Aggiorna ed Elimina. <br>

    Per altre informazioni, vedere la documentazione dell'API JavaScript lato server.

    </p>
  fullName: documentdb.DocumentClient.upsertTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: trigger
      type:
      - object
      description: Rappresenta il corpo del trigger.
    - id: trigger.id
      type:
      - string
      description: L'id del trigger.
    - id: trigger.triggerType
      type:
      - string
      description: Il tipo di trigger, deve essere uno dei valori di <xref:documentdb.TriggerType>.
    - id: trigger.triggerOperation
      type:
      - string
      description: L'operazione di trigger, deve essere uno dei valori di <xref:documentdb.TriggerOperation>.
    - id: trigger.serverScript
      type:
      - function
      description: Il corpo del trigger, può essere passata come sotto forma di stringa troppo.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function upsertTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUserDefinedFunction
  id: documentdb.DocumentClient#upsertUserDefinedFunction
  parent: documentdb.DocumentClient
  name: upsertUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    Upsert UserDefinedFunction.

    <p>

    Azure Cosmos DB supporta funzioni UDF di JavaScript che possono essere usati all'interno di query, stored procedure e trigger. <br>

    Per altre informazioni, vedere la documentazione dell'API JavaScript lato server.

    </p>
  fullName: documentdb.DocumentClient.upsertUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: udf
      type:
      - object
      description: Rappresenta il corpo di userDefinedFunction.
    - id: udf.id
      type:
      - string
      description: L'id della udf.
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: Il tipo di funzione definita dall'utente, deve essere uno dei valori di <xref:documentdb.UserDefinedFunctionType>
    - id: udf.serverScript
      type:
      - function
      description: Rappresenta il corpo di funzione definita dall'utente, può essere passata come sotto forma di stringa troppo.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function upsertUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertStoredProcedure
  id: documentdb.DocumentClient#upsertStoredProcedure
  parent: documentdb.DocumentClient
  name: upsertStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    Upsert una stored procedure.

    <p>

    Azure Cosmos DB consente alle stored procedure da eseguire nel livello di archiviazione, direttamente in una raccolta di documenti. Lo script <br>

    viene eseguito in transazioni ACID nella partizione di risorsa di archiviazione primaria della raccolta specificata. Per altri dettagli, <br>

    vedere la documentazione dell'API JavaScript lato server.

    </p>
  fullName: documentdb.DocumentClient.upsertStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Il collegamento self link della raccolta.
    - id: sproc
      type:
      - object
      description: Rappresenta il corpo della stored procedure.
    - id: sproc.id
      type:
      - string
      description: L'id della stored procedure.
    - id: sproc.serverScript
      type:
      - function
      description: Il corpo della stored procedure, può essere passata come sotto forma di stringa troppo.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function upsertStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  id: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: Upsert un allegato per l'oggetto documento.
  fullName: documentdb.DocumentClient.upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Il collegamento automatico del documento.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: flusso che rappresenta il supporto stesso che deve essere caricato.
    - id: options
      type:
      - documentdb.MediaOptions
      description: Le opzioni di richiesta.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readMedia
  id: documentdb.DocumentClient#readMedia
  parent: documentdb.DocumentClient
  name: readMedia(mediaLink, callback)
  summary: Leggere il supporto per l'oggetto allegato.
  fullName: documentdb.DocumentClient.readMedia(mediaLink, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: Il collegamento multimediale Media dell'allegato.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Il callback per la richiesta, il parametro risultante può essere un buffer o in un flusso in base al valore <xref:documentdb.MediaReadMode>.
    content: function readMedia(mediaLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#updateMedia
  id: documentdb.DocumentClient#updateMedia
  parent: documentdb.DocumentClient
  name: updateMedia(mediaLink, readableStream, options, callback)
  summary: Aggiornare i supporti dell'allegato
  fullName: documentdb.DocumentClient.updateMedia(mediaLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: Il collegamento multimediale Media dell'allegato.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: Flusso che rappresenta il supporto stesso che deve essere caricato.
    - id: options
      type:
      - documentdb.MediaOptions
      description: opzioni per il supporto
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function updateMedia(mediaLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#executeStoredProcedure
  id: documentdb.DocumentClient#executeStoredProcedure
  parent: documentdb.DocumentClient
  name: executeStoredProcedure(sprocLink, params, options, callback)
  summary: Eseguire StoredProcedure rappresentata dall'oggetto con la chiave di partizione.
  fullName: documentdb.DocumentClient.executeStoredProcedure(sprocLink, params, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Il collegamento self link della stored procedure.
    - id: params
      type:
      - Array
      description: rappresenta i parametri della stored procedure.
      optional: true
    - id: options
      type:
      - Object
      description: chiave di partizione
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function executeStoredProcedure(sprocLink, params, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceOffer
  id: documentdb.DocumentClient#replaceOffer
  parent: documentdb.DocumentClient
  name: replaceOffer(offerLink, offer, callback)
  summary: Sostituire l'oggetto offerta.
  fullName: documentdb.DocumentClient.replaceOffer(offerLink, offer, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: Il collegamento self link dell'offerta.
    - id: offer
      type:
      - object
      description: Rappresenta il nuovo corpo offerta.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function replaceOffer(offerLink, offer, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffer
  id: documentdb.DocumentClient#readOffer
  parent: documentdb.DocumentClient
  name: readOffer(offerLink, callback)
  summary: Legge un'offerta.
  fullName: documentdb.DocumentClient.readOffer(offerLink, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: Il collegamento self link dell'offerta.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta.
    content: function readOffer(offerLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffers
  id: documentdb.DocumentClient#readOffers
  parent: documentdb.DocumentClient
  name: readOffers(options)
  summary: Elenca tutte le offerte.
  fullName: documentdb.DocumentClient.readOffers(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di queryIterator per gestire la lettura del feed."
    content: function readOffers(options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryOffers
  id: documentdb.DocumentClient#queryOffers
  parent: documentdb.DocumentClient
  name: queryOffers(query, options)
  summary: Elenca tutte le offerte che soddisfano una query.
  fullName: documentdb.DocumentClient.queryOffers(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Una query SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Le opzioni del feed.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: "- Un'istanza di QueryIterator per gestire la lettura del feed."
    content: function queryOffers(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#getDatabaseAccount
  id: documentdb.DocumentClient#getDatabaseAccount
  parent: documentdb.DocumentClient
  name: getDatabaseAccount(callback)
  summary: Ottiene le informazioni sull'account di Database.
  fullName: documentdb.DocumentClient.getDatabaseAccount(callback)
  type: Function
  syntax:
    parameters:
    - id: options.urlConnection
      type:
      - string
      description: L'url dell'endpoint il cui account del database deve essere recuperata. In caso contrario verrà usato l'url in caso contrario, corrente del client.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Callback per la richiesta. Il secondo parametro del metodo di callback sarà di tipo <xref:documentdb.DatabaseAccount>.
    content: function getDatabaseAccount(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getSessionToken
  id: documentdb.DocumentClient#getSessionToken
  parent: documentdb.DocumentClient
  name: getSessionToken(collectionLink)
  summary: Ottiene il SessionToken per un determinato collectionLink
  fullName: documentdb.DocumentClient.getSessionToken(collectionLink)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      description: Il collegamento della raccolta per il quale è necessario il token di sessione
    content: function getSessionToken(collectionLink)
  langs:
  - js
references:
- uid: documentdb.QueryIterator
  name: QueryIterator
  fullName: documentdb.QueryIterator
  isExternal: false
