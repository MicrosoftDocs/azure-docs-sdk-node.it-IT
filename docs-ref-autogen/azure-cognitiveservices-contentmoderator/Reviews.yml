### YamlMime:UniversalReference
ms.openlocfilehash: afa6fb747e4e5b55f8e84107a854615c3c631e24
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/12/2018
ms.locfileid: "40069722"
items:
- uid: azure-cognitiveservices-contentmoderator.Reviews
  name: Reviews
  fullName: Reviews
  children:
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStreamWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrlWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResultWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.createJob
  - azure-cognitiveservices-contentmoderator.Reviews.createJob_1
  - azure-cognitiveservices-contentmoderator.Reviews.createJob_2
  - azure-cognitiveservices-contentmoderator.Reviews.createJobWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.createReviews
  - azure-cognitiveservices-contentmoderator.Reviews.createReviews_1
  - azure-cognitiveservices-contentmoderator.Reviews.createReviews_2
  - azure-cognitiveservices-contentmoderator.Reviews.createReviewsWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_1
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_2
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviewsWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetails
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_1
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_2
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetailsWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.getReview
  - azure-cognitiveservices-contentmoderator.Reviews.getReview_1
  - azure-cognitiveservices-contentmoderator.Reviews.getReview_2
  - azure-cognitiveservices-contentmoderator.Reviews.getReviewWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_1
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_2
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFramesWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_1
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_2
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReviewWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame
  name: addVideoFrame
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrame(teamName: string, reviewId: string, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_1
  name: addVideoFrame
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrame(teamName: string, reviewId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_2
  name: addVideoFrame
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrame(teamName: string, reviewId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_1
  name: addVideoFrameStream
  children: []
  type: method
  langs:
  - typeScript
  summary: "Utilizzare questo metodo per aggiungere un frame per una revisione del video. Scala cronologica: Questo parametro è un fattore che consente di convertire il timestamp associato a un intervallo in millisecondi. Valore di scala cronologica viene fornito nell'output del processore multimediale di video di Content Moderator nella piattaforma servizi multimediali di Azure. Scala cronologica nell'output di moderazione dei Video è di tick al secondo."
  syntax:
    content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: frameImageZip
      type:
      - stream.Readable
      description: ''
    - id: frameMetadata
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream
  name: addVideoFrameStream
  children: []
  type: method
  langs:
  - typeScript
  summary: "Utilizzare questo metodo per aggiungere un frame per una revisione del video. Scala cronologica: Questo parametro è un fattore che consente di convertire il timestamp associato a un intervallo in millisecondi. Valore di scala cronologica viene fornito nell'output del processore multimediale di video di Content Moderator nella piattaforma servizi multimediali di Azure. Scala cronologica nell'output di moderazione dei Video è di tick al secondo."
  syntax:
    content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        Il tipo di contenuto.
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: frameImageZip
      type:
      - stream.Readable
      description: >
        File zip contenente le immagini di frame.
    - id: frameMetadata
      type:
      - string
      description: >
        Metadati del frame.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_2
  name: addVideoFrameStream
  children: []
  type: method
  langs:
  - typeScript
  summary: "Utilizzare questo metodo per aggiungere un frame per una revisione del video. Scala cronologica: Questo parametro è un fattore che consente di convertire il timestamp associato a un intervallo in millisecondi. Valore di scala cronologica viene fornito nell'output del processore multimediale di video di Content Moderator nella piattaforma servizi multimediali di Azure. Scala cronologica nell'output di moderazione dei Video è di tick al secondo."
  syntax:
    content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: frameImageZip
      type:
      - stream.Readable
      description: ''
    - id: frameMetadata
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStreamWithHttpOperationResponse
  name: addVideoFrameStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: "Utilizzare questo metodo per aggiungere un frame per una revisione del video. Scala cronologica: Questo parametro è un fattore che consente di convertire il timestamp associato a un intervallo in millisecondi. Valore di scala cronologica viene fornito nell'output del processore multimediale di video di Content Moderator nella piattaforma servizi multimediali di Azure. Scala cronologica nell'output di moderazione dei Video è di tick al secondo."
  syntax:
    content: 'function addVideoFrameStreamWithHttpOperationResponse(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        Il tipo di contenuto.
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: frameImageZip
      type:
      - stream.Readable
      description: >
        File zip contenente le immagini di frame.
    - id: frameMetadata
      type:
      - string
      description: >
        Metadati del frame.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl
  name: addVideoFrameUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: "Utilizzare questo metodo per aggiungere un frame per una revisione del video. Scala cronologica: Questo parametro è un fattore che consente di convertire il timestamp associato a un intervallo in millisecondi. Valore di scala cronologica viene fornito nell'output del processore multimediale di video di Content Moderator nella piattaforma servizi multimediali di Azure. Scala cronologica nell'output di moderazione dei Video è di tick al secondo."
  syntax:
    content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        Il tipo di contenuto.
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: >
        Il corpo per aggiungere fotogrammi video API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_1
  name: addVideoFrameUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: "Utilizzare questo metodo per aggiungere un frame per una revisione del video. Scala cronologica: Questo parametro è un fattore che consente di convertire il timestamp associato a un intervallo in millisecondi. Valore di scala cronologica viene fornito nell'output del processore multimediale di video di Content Moderator nella piattaforma servizi multimediali di Azure. Scala cronologica nell'output di moderazione dei Video è di tick al secondo."
  syntax:
    content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_2
  name: addVideoFrameUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: "Utilizzare questo metodo per aggiungere un frame per una revisione del video. Scala cronologica: Questo parametro è un fattore che consente di convertire il timestamp associato a un intervallo in millisecondi. Valore di scala cronologica viene fornito nell'output del processore multimediale di video di Content Moderator nella piattaforma servizi multimediali di Azure. Scala cronologica nell'output di moderazione dei Video è di tick al secondo."
  syntax:
    content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrlWithHttpOperationResponse
  name: addVideoFrameUrlWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: "Utilizzare questo metodo per aggiungere un frame per una revisione del video. Scala cronologica: Questo parametro è un fattore che consente di convertire il timestamp associato a un intervallo in millisecondi. Valore di scala cronologica viene fornito nell'output del processore multimediale di video di Content Moderator nella piattaforma servizi multimediali di Azure. Scala cronologica nell'output di moderazione dei Video è di tick al secondo."
  syntax:
    content: 'function addVideoFrameUrlWithHttpOperationResponse(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        Il tipo di contenuto.
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: >
        Il corpo per aggiungere fotogrammi video API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameWithHttpOperationResponse
  name: addVideoFrameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrameWithHttpOperationResponse(teamName: string, reviewId: string, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_1
  name: addVideoTranscript
  children: []
  type: method
  langs:
  - typeScript
  summary: Questa API aggiunge un file di trascrizione (versione di testo di tutte le parole parlata in un video) a una revisione del video. Il file deve essere un formato WebVTT valido.
  syntax:
    content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: vTTfile
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript
  name: addVideoTranscript
  children: []
  type: method
  langs:
  - typeScript
  summary: Questa API aggiunge un file di trascrizione (versione di testo di tutte le parole parlata in un video) a una revisione del video. Il file deve essere un formato WebVTT valido.
  syntax:
    content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: stream.Readable, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: vTTfile
      type:
      - stream.Readable
      description: >
        File di trascrizione del video.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_2
  name: addVideoTranscript
  children: []
  type: method
  langs:
  - typeScript
  summary: Questa API aggiunge un file di trascrizione (versione di testo di tutte le parole parlata in un video) a una revisione del video. Il file deve essere un formato WebVTT valido.
  syntax:
    content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: vTTfile
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult
  name: addVideoTranscriptModerationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Questa API aggiunge un file di risultati trascrizione testo sullo schermo per una revisione del video.

    File di trascrizione schermata testo risultato è il risultato dell'API traduzione testuale dello schermo. Per generare file di risultati di trascrizione schermata testo, un file di trascrizione deve essere vagliate per il contenuto volgare usando l'API traduzione testuale dello schermo.
  syntax:
    content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        Il tipo di contenuto.
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: >
        Il corpo per aggiungere i risultati di moderazione di trascrizione del video API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_1
  name: addVideoTranscriptModerationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Questa API aggiunge un file di risultati trascrizione testo sullo schermo per una revisione del video.

    File di trascrizione schermata testo risultato è il risultato dell'API traduzione testuale dello schermo. Per generare file di risultati di trascrizione schermata testo, un file di trascrizione deve essere vagliate per il contenuto volgare usando l'API traduzione testuale dello schermo.
  syntax:
    content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_2
  name: addVideoTranscriptModerationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Questa API aggiunge un file di risultati trascrizione testo sullo schermo per una revisione del video.

    File di trascrizione schermata testo risultato è il risultato dell'API traduzione testuale dello schermo. Per generare file di risultati di trascrizione schermata testo, un file di trascrizione deve essere vagliate per il contenuto volgare usando l'API traduzione testuale dello schermo.
  syntax:
    content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResultWithHttpOperationResponse
  name: addVideoTranscriptModerationResultWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Questa API aggiunge un file di risultati trascrizione testo sullo schermo per una revisione del video.

    File di trascrizione schermata testo risultato è il risultato dell'API traduzione testuale dello schermo. Per generare file di risultati di trascrizione schermata testo, un file di trascrizione deve essere vagliate per il contenuto volgare usando l'API traduzione testuale dello schermo.
  syntax:
    content: 'function addVideoTranscriptModerationResultWithHttpOperationResponse(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        Il tipo di contenuto.
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: >
        Il corpo per aggiungere i risultati di moderazione di trascrizione del video API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptWithHttpOperationResponse
  name: addVideoTranscriptWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Questa API aggiunge un file di trascrizione (versione di testo di tutte le parole parlata in un video) a una revisione del video. Il file deve essere un formato WebVTT valido.
  syntax:
    content: 'function addVideoTranscriptWithHttpOperationResponse(teamName: string, reviewId: string, vTTfile: stream.Readable, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: vTTfile
      type:
      - stream.Readable
      description: >
        File di trascrizione del video.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJob
  name: createJob
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Un processo che viene restituito l'Id per il contenuto pubblicato in questo endpoint.

    Dopo che il contenuto viene valutato in base al flusso di lavoro fornito non verrà creata o ignorata la revisione in base l'espressione del flusso di lavoro.


    <h3>Schemi di callBack </h3>


    <p>

    <h4>Esempio di CallBack di completamento processo</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id revisione, se il processo ha comportato una revisione da creare >",<br/>

    "WorkFlowId": "default",<br/>

    "Status": "< possibile scegliere di errore completa, in corso, >",<br/>

    "ContentType": "Immagine",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "CallBackType": "Processo",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Esempio di CallBack di completamento di revisione</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJob(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: contentType
      type:
      - string
      description: >
        Immagine, testo o Video. I valori possibili sono: 'Immagine', 'Testo', 'Video'
    - id: contentId
      type:
      - string
      description: >
        ID/nome per identificare il contenuto inviato.
    - id: workflowName
      type:
      - string
      description: >
        Nome del flusso di lavoro che si vuole richiamare.
    - id: jobContentType
      type:
      - string
      description: >
        Il tipo di contenuto. I valori possibili sono: ' application/json', 'image/jpeg'
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: >
        Contenuto da valutare.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.JobId>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJob_1
  name: createJob
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Un processo che viene restituito l'Id per il contenuto pubblicato in questo endpoint.

    Dopo che il contenuto viene valutato in base al flusso di lavoro fornito non verrà creata o ignorata la revisione in base l'espressione del flusso di lavoro.


    <h3>Schemi di callBack </h3>


    <p>

    <h4>Esempio di CallBack di completamento processo</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id revisione, se il processo ha comportato una revisione da creare >",<br/>

    "WorkFlowId": "default",<br/>

    "Status": "< possibile scegliere di errore completa, in corso, >",<br/>

    "ContentType": "Immagine",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "CallBackType": "Processo",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Esempio di CallBack di completamento di revisione</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJob(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, callback: ServiceCallback<JobId>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: contentId
      type:
      - string
      description: ''
    - id: workflowName
      type:
      - string
      description: ''
    - id: jobContentType
      type:
      - string
      description: ''
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.JobId>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.JobId>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJob_2
  name: createJob
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Un processo che viene restituito l'Id per il contenuto pubblicato in questo endpoint.

    Dopo che il contenuto viene valutato in base al flusso di lavoro fornito non verrà creata o ignorata la revisione in base l'espressione del flusso di lavoro.


    <h3>Schemi di callBack </h3>


    <p>

    <h4>Esempio di CallBack di completamento processo</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id revisione, se il processo ha comportato una revisione da creare >",<br/>

    "WorkFlowId": "default",<br/>

    "Status": "< possibile scegliere di errore completa, in corso, >",<br/>

    "ContentType": "Immagine",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "CallBackType": "Processo",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Esempio di CallBack di completamento di revisione</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJob(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, options: function, callback: ServiceCallback<JobId>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: contentId
      type:
      - string
      description: ''
    - id: workflowName
      type:
      - string
      description: ''
    - id: jobContentType
      type:
      - string
      description: ''
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.JobId>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.JobId>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJobWithHttpOperationResponse
  name: createJobWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Un processo che viene restituito l'Id per il contenuto pubblicato in questo endpoint.

    Dopo che il contenuto viene valutato in base al flusso di lavoro fornito non verrà creata o ignorata la revisione in base l'espressione del flusso di lavoro.


    <h3>Schemi di callBack </h3>


    <p>

    <h4>Esempio di CallBack di completamento processo</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id revisione, se il processo ha comportato una revisione da creare >",<br/>

    "WorkFlowId": "default",<br/>

    "Status": "< possibile scegliere di errore completa, in corso, >",<br/>

    "ContentType": "Immagine",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "CallBackType": "Processo",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Esempio di CallBack di completamento di revisione</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJobWithHttpOperationResponse(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: contentType
      type:
      - string
      description: >
        Immagine, testo o Video. I valori possibili sono: 'Immagine', 'Testo', 'Video'
    - id: contentId
      type:
      - string
      description: >
        ID/nome per identificare il contenuto inviato.
    - id: workflowName
      type:
      - string
      description: >
        Nome del flusso di lavoro che si vuole richiamare.
    - id: jobContentType
      type:
      - string
      description: >
        Il tipo di contenuto. I valori possibili sono: ' application/json', 'image/jpeg'
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: >
        Contenuto da valutare.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.JobId>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviews
  name: createReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options?: function)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: >
        Il tipo di contenuto.
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: >
        Corpo per le revisioni crea API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviews_1
  name: createReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], callback: ServiceCallback<string[]>)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviews_2
  name: createReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options: function, callback: ServiceCallback<string[]>)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviewsWithHttpOperationResponse
  name: createReviewsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviewsWithHttpOperationResponse(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options?: function)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: >
        Il tipo di contenuto.
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: >
        Corpo per le revisioni crea API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<string[]>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_1
  name: createVideoReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], callback: ServiceCallback<string[]>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_2
  name: createVideoReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options: function, callback: ServiceCallback<string[]>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews
  name: createVideoReviews
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        Il tipo di contenuto.
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: >
        Corpo per le revisioni crea API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviewsWithHttpOperationResponse
  name: createVideoReviewsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviewsWithHttpOperationResponse(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        Il tipo di contenuto.
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: >
        Corpo per le revisioni crea API
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<string[]>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetails
  name: getJobDetails
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottenere i dettagli del processo per un ID di processo.
  syntax:
    content: 'function getJobDetails(teamName: string, jobId: string, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del Team.
    - id: jobId
      type:
      - string
      description: >
        ID del processo.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Job>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_1
  name: getJobDetails
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottenere i dettagli del processo per un ID di processo.
  syntax:
    content: 'function getJobDetails(teamName: string, jobId: string, callback: ServiceCallback<Job>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: jobId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Job>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Job>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_2
  name: getJobDetails
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottenere i dettagli del processo per un ID di processo.
  syntax:
    content: 'function getJobDetails(teamName: string, jobId: string, options: function, callback: ServiceCallback<Job>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: jobId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Job>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Job>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetailsWithHttpOperationResponse
  name: getJobDetailsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Ottenere i dettagli del processo per un ID di processo.
  syntax:
    content: 'function getJobDetailsWithHttpOperationResponse(teamName: string, jobId: string, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del Team.
    - id: jobId
      type:
      - string
      description: >
        ID del processo.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Job>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReview
  name: getReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Restituisce esaminare i dettagli per la revisione che ID passato.
  syntax:
    content: 'function getReview(teamName: string, reviewId: string, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del Team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Review>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReview_1
  name: getReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Restituisce esaminare i dettagli per la revisione che ID passato.
  syntax:
    content: 'function getReview(teamName: string, reviewId: string, callback: ServiceCallback<Review>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Review>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Review>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReview_2
  name: getReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Restituisce esaminare i dettagli per la revisione che ID passato.
  syntax:
    content: 'function getReview(teamName: string, reviewId: string, options: function, callback: ServiceCallback<Review>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Review>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Review>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReviewWithHttpOperationResponse
  name: getReviewWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Restituisce esaminare i dettagli per la revisione che ID passato.
  syntax:
    content: 'function getReviewWithHttpOperationResponse(teamName: string, reviewId: string, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del Team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Review>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames
  name: getVideoFrames
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFrames(teamName: string, reviewId: string, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Frames>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_1
  name: getVideoFrames
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFrames(teamName: string, reviewId: string, callback: ServiceCallback<Frames>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Frames>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Frames>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_2
  name: getVideoFrames
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFrames(teamName: string, reviewId: string, options: function, callback: ServiceCallback<Frames>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Frames>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Frames>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFramesWithHttpOperationResponse
  name: getVideoFramesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Le verifiche create verrebbe visualizzata per i revisori del team. Come revisori di completare la revisione, risultati della verifica viene inviati (ad esempio HTTP POST) sul CallBackEndpoint specificato.

    <h3>Schemi di callBack </h3>

    <h4>Esempio di CallBack di completamento di revisione</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "CallBackType": "Verifica",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadati": {<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "ReviewerResultTags": {<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFramesWithHttpOperationResponse(teamName: string, reviewId: string, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Frames>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview
  name: publishVideoReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Pubblicare la revisione di video per renderlo disponibile per la revisione.
  syntax:
    content: 'function publishVideoReview(teamName: string, reviewId: string, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_1
  name: publishVideoReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Pubblicare la revisione di video per renderlo disponibile per la revisione.
  syntax:
    content: 'function publishVideoReview(teamName: string, reviewId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_2
  name: publishVideoReview
  children: []
  type: method
  langs:
  - typeScript
  summary: Pubblicare la revisione di video per renderlo disponibile per la revisione.
  syntax:
    content: 'function publishVideoReview(teamName: string, reviewId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReviewWithHttpOperationResponse
  name: publishVideoReviewWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Pubblicare la revisione di video per renderlo disponibile per la revisione.
  syntax:
    content: 'function publishVideoReviewWithHttpOperationResponse(teamName: string, reviewId: string, options?: function)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        Nome del team.
    - id: reviewId
      type:
      - string
      description: >
        ID della verifica.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
references:
- uid: azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
  spec.typeScript:
  - name: VideoFrameBodyItem
    fullName: VideoFrameBodyItem
    uid: azure-cognitiveservices-contentmoderator.VideoFrameBodyItem
  - name: '[]'
    fullName: '[]'
- uid: azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
  spec.typeScript:
  - name: TranscriptModerationBodyItem
    fullName: TranscriptModerationBodyItem
    uid: azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem
  - name: '[]'
    fullName: '[]'
- uid: azure-cognitiveservices-contentmoderator.Content
  spec.typeScript:
  - name: Content
    fullName: Content
    uid: azure-cognitiveservices-contentmoderator.Content
- uid: Promise<azure-cognitiveservices-contentmoderator.JobId>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: JobId
    fullName: JobId
    uid: azure-cognitiveservices-contentmoderator.JobId
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.JobId>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: JobId
    fullName: JobId
    uid: azure-cognitiveservices-contentmoderator.JobId
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.JobId>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: JobId
    fullName: JobId
    uid: azure-cognitiveservices-contentmoderator.JobId
  - name: '>>'
    fullName: '>>'
- uid: azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
  spec.typeScript:
  - name: CreateReviewBodyItem
    fullName: CreateReviewBodyItem
    uid: azure-cognitiveservices-contentmoderator.CreateReviewBodyItem
  - name: '[]'
    fullName: '[]'
- uid: azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
  spec.typeScript:
  - name: CreateVideoReviewsBodyItem
    fullName: CreateVideoReviewsBodyItem
    uid: azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem
  - name: '[]'
    fullName: '[]'
- uid: Promise<azure-cognitiveservices-contentmoderator.Job>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Job
    fullName: Job
    uid: azure-cognitiveservices-contentmoderator.Job
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Job>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Job
    fullName: Job
    uid: azure-cognitiveservices-contentmoderator.Job
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Job>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Job
    fullName: Job
    uid: azure-cognitiveservices-contentmoderator.Job
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.Review>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Review
    fullName: Review
    uid: azure-cognitiveservices-contentmoderator.Review
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Review>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Review
    fullName: Review
    uid: azure-cognitiveservices-contentmoderator.Review
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Review>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Review
    fullName: Review
    uid: azure-cognitiveservices-contentmoderator.Review
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.Frames>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Frames
    fullName: Frames
    uid: azure-cognitiveservices-contentmoderator.Frames
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Frames>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Frames
    fullName: Frames
    uid: azure-cognitiveservices-contentmoderator.Frames
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Frames>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Frames
    fullName: Frames
    uid: azure-cognitiveservices-contentmoderator.Frames
  - name: '>>'
    fullName: '>>'
