### YamlMime:UniversalReference
items:
  - uid: azure-arm-sql.ImportRequest
    name: ImportRequest
    fullName: ImportRequest
    children:
      - azure-arm-sql.ImportRequest.administratorLogin
      - azure-arm-sql.ImportRequest.administratorLoginPassword
      - azure-arm-sql.ImportRequest.authenticationType
      - azure-arm-sql.ImportRequest.databaseName
      - azure-arm-sql.ImportRequest.edition
      - azure-arm-sql.ImportRequest.maxSizeBytes
      - azure-arm-sql.ImportRequest.serviceObjectiveName
      - azure-arm-sql.ImportRequest.storageKey
      - azure-arm-sql.ImportRequest.storageKeyType
      - azure-arm-sql.ImportRequest.storageUri
    langs:
      - typeScript
    type: interface
    summary: Importa i parametri del database.
    extends:
      name: azure-arm-sql.ExportRequest
    package: azure-arm-sql
  - uid: azure-arm-sql.ImportRequest.administratorLogin
    name: administratorLogin
    fullName: administratorLogin
    children: []
    langs:
      - typeScript
    type: property
    summary: Il nome dell'amministratore SQL.
    syntax:
      content: 'administratorLogin: string'
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.ImportRequest.administratorLoginPassword
    name: administratorLoginPassword
    fullName: administratorLoginPassword
    children: []
    langs:
      - typeScript
    type: property
    summary: password dell'amministratore di SQL.
    syntax:
      content: 'administratorLoginPassword: string'
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.ImportRequest.authenticationType
    name: authenticationType
    fullName: authenticationType
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Il tipo di autenticazione. I valori possibili sono: ''SQL'', ''ADPassword'''
    optional: true
    syntax:
      content: 'authenticationType?: string'
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.ImportRequest.databaseName
    name: databaseName
    fullName: databaseName
    children: []
    langs:
      - typeScript
    type: property
    summary: Il nome del database da importare.
    syntax:
      content: 'databaseName: string'
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.ImportRequest.edition
    name: edition
    fullName: edition
    children: []
    langs:
      - typeScript
    type: property
    summary: 'L''edizione del database viene creato. I valori possibili sono: ''Web'', ''Business'', ''Basic'', ''Standard'', ''Premium'', ''PremiumRS'', ''Free'', ''Stretch'', ''DataWarehouse'', ''System'', ''System2'''
    syntax:
      content: 'edition: string'
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.ImportRequest.maxSizeBytes
    name: maxSizeBytes
    fullName: maxSizeBytes
    children: []
    langs:
      - typeScript
    type: property
    summary: Le dimensioni massime per il database appena importato.
    syntax:
      content: 'maxSizeBytes: string'
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.ImportRequest.serviceObjectiveName
    name: serviceObjectiveName
    fullName: serviceObjectiveName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Il nome dell''obiettivo del servizio da assegnare al database. I valori possibili sono: ''System'', ''System0'', ''System1'', ''System2'', ''Sistema3'', ''System4'', ''System2L'', ''System3L'', ''System4L'', ''Gratuito'', ''Basic'', ''S0'', ''S1'', ''S2'', ''S3'', ''S4'', ''S6'', ''S7'', ''S9'', ''S12'', ''P1'', ''P2'', ''P3'', ''P4'', ''P6'', ''P11'', ''P15'', ''PRS1'', ''PRS2'', ''PRS4'', "PRS6", "DW100" , ''DW200'', ''DW300'', ''DW400'', ''DW500'', ''DW600'', ''DW1000'', ''DW1200'', ''DW1000c'', ''DW1500'', ''DW1500c'', ''DW2000'', ''DW2000c'', ''DW3000'', ''DW2500c'', ''DW3000c'', ''DW6000'', ''DW5000c'', ''DW6000c'', ''DW7500c'', ''DW10000c'', ''DW15000c'', ''DW30000c'', ''DS100'', ''DS200'', '' DS300'', ''DS400'', ''DS500'', ''DS600'', ''DS1000'', ''DS1200'', ''DS1500'', ''DS2000'', ''ElasticPool'''
    syntax:
      content: 'serviceObjectiveName: string'
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.ImportRequest.storageKey
    name: storageKey
    fullName: storageKey
    children: []
    langs:
      - typeScript
    type: property
    summary: 'chiave di archiviazione da usare.  Se il tipo di chiave di archiviazione Ã¨ SharedAccessKey, deve essere preceduta da "?".'
    syntax:
      content: 'storageKey: string'
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.ImportRequest.storageKeyType
    name: storageKeyType
    fullName: storageKeyType
    children: []
    langs:
      - typeScript
    type: property
    summary: 'tipo di chiave di archiviazione da usare. I valori possibili sono: ''StorageAccessKey'', ''SharedAccessKey'''
    syntax:
      content: 'storageKeyType: string'
      return:
        type:
          - string
    package: azure-arm-sql
  - uid: azure-arm-sql.ImportRequest.storageUri
    name: storageUri
    fullName: storageUri
    children: []
    langs:
      - typeScript
    type: property
    summary: URI di archiviazione da usare.
    syntax:
      content: 'storageUri: string'
      return:
        type:
          - string
    package: azure-arm-sql
references:
  - uid: azure-arm-sql.ExportRequest
    name: ExportRequest
    spec.typeScript:
      - name: ExportRequest
        fullName: ExportRequest
        uid: azure-arm-sql.ExportRequest