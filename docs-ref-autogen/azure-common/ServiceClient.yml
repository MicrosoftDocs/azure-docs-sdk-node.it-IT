### YamlMime:UniversalReference
ms.openlocfilehash: e06222d0ec191b66b287ffe6fe9148fbe92ec6f7
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/13/2018
ms.locfileid: "40056268"
items:
- uid: azure-common.ServiceClient
  id: azure-common.ServiceClient
  name: ServiceClient
  summary: Crea un nuovo oggetto ServiceClient.
  fullName: azure-common.ServiceClient
  type: Class
  children:
  - azure-common.ServiceClient.#ctor
  - azure-common.ServiceClient#setHost
  - azure-common.ServiceClient#performChunkedRequest
  - azure-common.ServiceClient#performRequest
  - azure-common.ServiceClient#performRequestOutputStream
  - azure-common.ServiceClient#performRequestInputStream
  - azure-common.ServiceClient#withFilter
  - azure-common.ServiceClient#parseMetadataHeaders
  - azure-common.ServiceClient.isEmulated
  langs:
  - js
- id: azure-common.ServiceClient.#ctor
  uid: azure-common.ServiceClient.#ctor
  parent: azure-common.ServiceClient
  name: ServiceClient(host, authenticationProvider)
  fullName: azure-common.ServiceClient.ServiceClient(host, authenticationProvider)
  summary: Crea un nuovo oggetto ServiceClient.
  type: Constructor
  syntax:
    parameters:
    - id: host
      type:
      - string
      description: L'host del servizio.
    - id: authenticationProvider
      type:
      - object
      description: L'oggetto provider di autenticazione (ad esempio sharedkey / sharedkeytable / sharedaccesssignature).
    content: new ServiceClient(host, authenticationProvider)
  langs:
  - js
- uid: azure-common.ServiceClient#setHost
  id: azure-common.ServiceClient#setHost
  parent: azure-common.ServiceClient
  name: setHost(host)
  summary: Imposta un host del servizio.
  fullName: azure-common.ServiceClient.setHost(host)
  type: Function
  syntax:
    parameters:
    - id: host
      type:
      - string
      description: L'host del servizio.
    content: function setHost(host)
  langs:
  - js
- uid: azure-common.ServiceClient#performChunkedRequest
  id: azure-common.ServiceClient#performChunkedRequest
  parent: azure-common.ServiceClient
  name: performChunkedRequest(webResource, outputData, options, callback)
  summary: Esegue una richiesta di servizio REST tramite HTTP è previsto un flusso di input.
  fullName: azure-common.ServiceClient.performChunkedRequest(webResource, outputData, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: Webresource su cui eseguire la richiesta.
    - id: outputData
      type:
      - string
      description: I dati della richiesta in uscita sotto forma di stringa non elaborata.
    - id: options
      type:
      - object
      description: Le opzioni di richiesta.
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: L'intervallo di timeout, espresso in millisecondi, da utilizzare per la richiesta.
      optional: true
    - id: callback
      type:
      - function
      description: La funzione di callback di risposta in blocchi.
    content: function performChunkedRequest(webResource, outputData, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#performRequest
  id: azure-common.ServiceClient#performRequest
  parent: azure-common.ServiceClient
  name: performRequest(webResource, outputData, options, callback)
  summary: Esegue una richiesta di servizio REST tramite HTTP è previsto un flusso di input.
  fullName: azure-common.ServiceClient.performRequest(webResource, outputData, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: Webresource su cui eseguire la richiesta.
    - id: outputData
      type:
      - string
      description: I dati della richiesta in uscita sotto forma di stringa non elaborata.
    - id: options
      type:
      - object
      description: Le opzioni di richiesta.
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: L'intervallo di timeout, espresso in millisecondi, da utilizzare per la richiesta.
      optional: true
    - id: callback
      type:
      - function
      description: La funzione di callback di risposta.
    content: function performRequest(webResource, outputData, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#performRequestOutputStream
  id: azure-common.ServiceClient#performRequestOutputStream
  parent: azure-common.ServiceClient
  name: performRequestOutputStream(webResource, outputStream, options, callback)
  summary: Esegue una richiesta di servizio REST tramite HTTP è previsto un flusso di input.
  fullName: azure-common.ServiceClient.performRequestOutputStream(webResource, outputStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: Webresource su cui eseguire la richiesta.
    - id: outputStream
      type:
      - azure-common.Stream
      description: I dati della richiesta in uscita sotto forma di flusso.
    - id: options
      type:
      - object
      description: Le opzioni di richiesta.
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: L'intervallo di timeout, espresso in millisecondi, da utilizzare per la richiesta.
      optional: true
    - id: callback
      type:
      - function
      description: La funzione di callback di risposta.
    content: function performRequestOutputStream(webResource, outputStream, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#performRequestInputStream
  id: azure-common.ServiceClient#performRequestInputStream
  parent: azure-common.ServiceClient
  name: performRequestInputStream(webResource, outputData, inputStream, options, callback)
  summary: Esegue una richiesta di servizio REST tramite HTTP è previsto un flusso di input.
  fullName: azure-common.ServiceClient.performRequestInputStream(webResource, outputData, inputStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: Webresource su cui eseguire la richiesta.
    - id: outputData
      type:
      - string
      description: I dati della richiesta in uscita sotto forma di stringa non elaborata.
    - id: inputStream
      type:
      - azure-common.Stream
      description: Ingresso dati della risposta come flusso.
    - id: options
      type:
      - object
      description: Le opzioni di richiesta.
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: L'intervallo di timeout, espresso in millisecondi, da utilizzare per la richiesta.
      optional: true
    - id: callback
      type:
      - function
      description: La funzione di callback di risposta.
    content: function performRequestInputStream(webResource, outputData, inputStream, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#withFilter
  id: azure-common.ServiceClient#withFilter
  parent: azure-common.ServiceClient
  name: withFilter(filter)
  summary: >-
    Associare questa ServiceClient un'operazione di filtraggio. Le operazioni di filtro possono includere la registrazione, la ripetizione automatica dei tentativi e così via. Operazioni di filtro sono oggetti che implementano un metodo con la firma:

        "function handle (requestOptions, next)".

    Dopo avere eseguito la pre-elaborazione sulle opzioni della richiesta, il metodo deve chiamare "next" passando un callback con la firma seguente: firma:

        "function (returnObject, finalCallback, next)"

    In questo callback, e dopo l'elaborazione del returnObject (la risposta della richiesta al server), il callback deve richiamare "next", se questo esiste, per continuare a elaborare altri filtri oppure semplicemente richiamare finalCallback per concludere la chiamata al servizio.
  fullName: azure-common.ServiceClient.withFilter(filter)
  type: Function
  syntax:
    parameters:
    - id: filter
      type:
      - Object
      description: Il nuovo oggetto di filtro.
    return:
      type:
      - azure-common.ServiceClient
      description: Un nuovo client di servizio con il filtro applicato.
    content: function withFilter(filter)
  langs:
  - js
- uid: azure-common.ServiceClient#parseMetadataHeaders
  id: azure-common.ServiceClient#parseMetadataHeaders
  parent: azure-common.ServiceClient
  name: parseMetadataHeaders(headers)
  summary: Recupera le intestazioni di metadati dalle intestazioni della risposta.
  fullName: azure-common.ServiceClient.parseMetadataHeaders(headers)
  type: Function
  syntax:
    parameters:
    - id: headers
      type:
      - object
      description: Le intestazioni di metadati.
    return:
      type:
      - object
      description: Un oggetto con le intestazioni di metadati (senza il prefisso "x - ms-").
    content: function parseMetadataHeaders(headers)
  langs:
  - js
- uid: azure-common.ServiceClient.isEmulated
  id: azure-common.ServiceClient.isEmulated
  parent: azure-common.ServiceClient
  name: isEmulated()
  summary: Ottiene che il valore della variabile di ambiente per viene emulato.
  fullName: azure-common.ServiceClient.isEmulated()
  type: Function
  syntax:
    return:
      type:
      - azure-common.bool
      description: True se il client del servizio è in esecuzione in un ambiente emulato; false in caso contrario.
    content: function isEmulated()
  langs:
  - js
references:
- uid: azure-common.WebResource
  name: WebResource
  fullName: azure-common.WebResource
  isExternal: false
