### YamlMime:UniversalReference
ms.openlocfilehash: d9f21b055e48d2ddc596045ca4e0fcc01ba48301
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/12/2018
ms.locfileid: "40067837"
items:
- uid: azure-arm-eventgrid.EventSubscriptions
  name: EventSubscriptions
  fullName: EventSubscriptions
  children:
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_1
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_2
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdateWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_1
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_2
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethodWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.beginUpdate_1
  - azure-arm-eventgrid.EventSubscriptions.beginUpdate_2
  - azure-arm-eventgrid.EventSubscriptions.beginUpdate
  - azure-arm-eventgrid.EventSubscriptions.beginUpdateWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdate
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdate_1
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdate_2
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdateWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.deleteMethod_1
  - azure-arm-eventgrid.EventSubscriptions.deleteMethod
  - azure-arm-eventgrid.EventSubscriptions.deleteMethod_2
  - azure-arm-eventgrid.EventSubscriptions.deleteMethodWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.get_1
  - azure-arm-eventgrid.EventSubscriptions.get
  - azure-arm-eventgrid.EventSubscriptions.get_2
  - azure-arm-eventgrid.EventSubscriptions.getFullUrl
  - azure-arm-eventgrid.EventSubscriptions.getFullUrl_1
  - azure-arm-eventgrid.EventSubscriptions.getFullUrl_2
  - azure-arm-eventgrid.EventSubscriptions.getFullUrlWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.getWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listByResource
  - azure-arm-eventgrid.EventSubscriptions.listByResource_1
  - azure-arm-eventgrid.EventSubscriptions.listByResource_2
  - azure-arm-eventgrid.EventSubscriptions.listByResourceWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.update
  - azure-arm-eventgrid.EventSubscriptions.update_1
  - azure-arm-eventgrid.EventSubscriptions.update_2
  - azure-arm-eventgrid.EventSubscriptions.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate
  name: beginCreateOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-101">L'identificatore della risorsa a cui la sottoscrizione dell'evento deve essere creato o aggiornato.</span><span class="sxs-lookup"><span data-stu-id="1f552-101">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="1f552-102">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-102">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-103">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-103">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-104">Nome della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-104">Name of the event subscription.</span></span> <span data-ttu-id="1f552-105">I nomi di sottoscrizione evento devono essere compresa tra 3 e 64 caratteri e devono usare solo lettere alfanumeriche.</span><span class="sxs-lookup"><span data-stu-id="1f552-105">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="1f552-106">Proprietà delle sottoscrizioni di eventi contenente le informazioni sulla destinazione e Applica filtro</span><span class="sxs-lookup"><span data-stu-id="1f552-106">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_1
  name: beginCreateOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_2
  name: beginCreateOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options: function, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdateWithHttpOperationResponse
  name: beginCreateOrUpdateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-107">L'identificatore della risorsa a cui la sottoscrizione dell'evento deve essere creato o aggiornato.</span><span class="sxs-lookup"><span data-stu-id="1f552-107">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="1f552-108">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-108">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-109">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-109">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-110">Nome della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-110">Name of the event subscription.</span></span> <span data-ttu-id="1f552-111">I nomi di sottoscrizione evento devono essere compresa tra 3 e 64 caratteri e devono usare solo lettere alfanumeriche.</span><span class="sxs-lookup"><span data-stu-id="1f552-111">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="1f552-112">Proprietà delle sottoscrizioni di eventi contenente le informazioni sulla destinazione e Applica filtro</span><span class="sxs-lookup"><span data-stu-id="1f552-112">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod
  name: beginDeleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethod(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-113">L'ambito della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-113">The scope of the event subscription.</span></span> <span data-ttu-id="1f552-114">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-114">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-115">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-115">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-116">Nome della sottoscrizione di eventi</span><span class="sxs-lookup"><span data-stu-id="1f552-116">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_1
  name: beginDeleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethod(scope: string, eventSubscriptionName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_2
  name: beginDeleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethod(scope: string, eventSubscriptionName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethodWithHttpOperationResponse
  name: beginDeleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethodWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-117">L'ambito della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-117">The scope of the event subscription.</span></span> <span data-ttu-id="1f552-118">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-118">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-119">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-119">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-120">Nome della sottoscrizione di eventi</span><span class="sxs-lookup"><span data-stu-id="1f552-120">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate_1
  name: beginUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate_2
  name: beginUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options: function, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate
  name: beginUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-121">L'ambito della sottoscrizione di eventi esistente.</span><span class="sxs-lookup"><span data-stu-id="1f552-121">The scope of existing event subscription.</span></span> <span data-ttu-id="1f552-122">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-122">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-123">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-123">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-124">Nome della sottoscrizione di eventi da aggiornare</span><span class="sxs-lookup"><span data-stu-id="1f552-124">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="1f552-125">Informazioni sulla sottoscrizione di evento aggiornato</span><span class="sxs-lookup"><span data-stu-id="1f552-125">Updated event subscription information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdateWithHttpOperationResponse
  name: beginUpdateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-126">L'ambito della sottoscrizione di eventi esistente.</span><span class="sxs-lookup"><span data-stu-id="1f552-126">The scope of existing event subscription.</span></span> <span data-ttu-id="1f552-127">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-127">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-128">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-128">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-129">Nome della sottoscrizione di eventi da aggiornare</span><span class="sxs-lookup"><span data-stu-id="1f552-129">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="1f552-130">Informazioni sulla sottoscrizione di evento aggiornato</span><span class="sxs-lookup"><span data-stu-id="1f552-130">Updated event subscription information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-131">L'identificatore della risorsa a cui la sottoscrizione dell'evento deve essere creato o aggiornato.</span><span class="sxs-lookup"><span data-stu-id="1f552-131">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="1f552-132">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-132">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-133">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-133">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-134">Nome della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-134">Name of the event subscription.</span></span> <span data-ttu-id="1f552-135">I nomi di sottoscrizione evento devono essere compresa tra 3 e 64 caratteri e devono usare solo lettere alfanumeriche.</span><span class="sxs-lookup"><span data-stu-id="1f552-135">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="1f552-136">Proprietà delle sottoscrizioni di eventi contenente le informazioni sulla destinazione e Applica filtro</span><span class="sxs-lookup"><span data-stu-id="1f552-136">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate_1
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate_2
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options: function, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdateWithHttpOperationResponse
  name: createOrUpdateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-137">L'identificatore della risorsa a cui la sottoscrizione dell'evento deve essere creato o aggiornato.</span><span class="sxs-lookup"><span data-stu-id="1f552-137">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="1f552-138">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-138">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-139">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-139">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-140">Nome della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-140">Name of the event subscription.</span></span> <span data-ttu-id="1f552-141">I nomi di sottoscrizione evento devono essere compresa tra 3 e 64 caratteri e devono usare solo lettere alfanumeriche.</span><span class="sxs-lookup"><span data-stu-id="1f552-141">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="1f552-142">Proprietà delle sottoscrizioni di eventi contenente le informazioni sulla destinazione e Applica filtro</span><span class="sxs-lookup"><span data-stu-id="1f552-142">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethod(scope: string, eventSubscriptionName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethod(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-143">L'ambito della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-143">The scope of the event subscription.</span></span> <span data-ttu-id="1f552-144">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-144">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-145">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-145">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-146">Nome della sottoscrizione di eventi</span><span class="sxs-lookup"><span data-stu-id="1f552-146">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethod(scope: string, eventSubscriptionName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-147">L'ambito della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-147">The scope of the event subscription.</span></span> <span data-ttu-id="1f552-148">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-148">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-149">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-149">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-150">Nome della sottoscrizione di eventi</span><span class="sxs-lookup"><span data-stu-id="1f552-150">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(scope: string, eventSubscriptionName: string, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-151">L'ambito della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-151">The scope of the event subscription.</span></span> <span data-ttu-id="1f552-152">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-152">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-153">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-153">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-154">Nome della sottoscrizione di eventi</span><span class="sxs-lookup"><span data-stu-id="1f552-154">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(scope: string, eventSubscriptionName: string, options: function, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl
  name: getFullUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrl(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-155">L'ambito della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-155">The scope of the event subscription.</span></span> <span data-ttu-id="1f552-156">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-156">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-157">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-157">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-158">Nome della sottoscrizione di eventi</span><span class="sxs-lookup"><span data-stu-id="1f552-158">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl_1
  name: getFullUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrl(scope: string, eventSubscriptionName: string, callback: ServiceCallback<EventSubscriptionFullUrl>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl_2
  name: getFullUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrl(scope: string, eventSubscriptionName: string, options: function, callback: ServiceCallback<EventSubscriptionFullUrl>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrlWithHttpOperationResponse
  name: getFullUrlWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrlWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-159">L'ambito della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-159">The scope of the event subscription.</span></span> <span data-ttu-id="1f552-160">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-160">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-161">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-161">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-162">Nome della sottoscrizione di eventi</span><span class="sxs-lookup"><span data-stu-id="1f552-162">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionFullUrl>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-163">L'ambito della sottoscrizione di eventi.</span><span class="sxs-lookup"><span data-stu-id="1f552-163">The scope of the event subscription.</span></span> <span data-ttu-id="1f552-164">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-164">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-165">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-165">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-166">Nome della sottoscrizione di eventi</span><span class="sxs-lookup"><span data-stu-id="1f552-166">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResource
  name: listByResource
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResource(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-167">Il nome del gruppo di risorse nella sottoscrizione dell'utente.</span><span class="sxs-lookup"><span data-stu-id="1f552-167">The name of the resource group within the user's subscription.</span></span>
    - id: providerNamespace
      type:
      - string
      description: >
        <span data-ttu-id="1f552-168">Namespace del provider dell'argomento</span><span class="sxs-lookup"><span data-stu-id="1f552-168">Namespace of the provider of the topic</span></span>
    - id: resourceTypeName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-169">Nome del tipo di risorsa</span><span class="sxs-lookup"><span data-stu-id="1f552-169">Name of the resource type</span></span>
    - id: resourceName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-170">Nome della risorsa</span><span class="sxs-lookup"><span data-stu-id="1f552-170">Name of the resource</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResource_1
  name: listByResource
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResource(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: providerNamespace
      type:
      - string
      description: ''
    - id: resourceTypeName
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResource_2
  name: listByResource
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResource(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: providerNamespace
      type:
      - string
      description: ''
    - id: resourceTypeName
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResourceWithHttpOperationResponse
  name: listByResourceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResourceWithHttpOperationResponse(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-171">Il nome del gruppo di risorse nella sottoscrizione dell'utente.</span><span class="sxs-lookup"><span data-stu-id="1f552-171">The name of the resource group within the user's subscription.</span></span>
    - id: providerNamespace
      type:
      - string
      description: >
        <span data-ttu-id="1f552-172">Namespace del provider dell'argomento</span><span class="sxs-lookup"><span data-stu-id="1f552-172">Namespace of the provider of the topic</span></span>
    - id: resourceTypeName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-173">Nome del tipo di risorsa</span><span class="sxs-lookup"><span data-stu-id="1f552-173">Name of the resource type</span></span>
    - id: resourceName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-174">Nome della risorsa</span><span class="sxs-lookup"><span data-stu-id="1f552-174">Name of the resource</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup
  name: listGlobalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroup(resourceGroupName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-175">Il nome del gruppo di risorse nella sottoscrizione dell'utente.</span><span class="sxs-lookup"><span data-stu-id="1f552-175">The name of the resource group within the user's subscription.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1
  name: listGlobalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroup(resourceGroupName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2
  name: listGlobalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroup(resourceGroupName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType
  name: listGlobalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicType(resourceGroupName: string, topicTypeName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-176">Il nome del gruppo di risorse nella sottoscrizione dell'utente.</span><span class="sxs-lookup"><span data-stu-id="1f552-176">The name of the resource group within the user's subscription.</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-177">Nome del tipo di argomento</span><span class="sxs-lookup"><span data-stu-id="1f552-177">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1
  name: listGlobalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicType(resourceGroupName: string, topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2
  name: listGlobalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicType(resourceGroupName: string, topicTypeName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
  name: listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName: string, topicTypeName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-178">Il nome del gruppo di risorse nella sottoscrizione dell'utente.</span><span class="sxs-lookup"><span data-stu-id="1f552-178">The name of the resource group within the user's subscription.</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-179">Nome del tipo di argomento</span><span class="sxs-lookup"><span data-stu-id="1f552-179">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupWithHttpOperationResponse
  name: listGlobalByResourceGroupWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-180">Il nome del gruppo di risorse nella sottoscrizione dell'utente.</span><span class="sxs-lookup"><span data-stu-id="1f552-180">The name of the resource group within the user's subscription.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1
  name: listGlobalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscription(callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2
  name: listGlobalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscription(options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription
  name: listGlobalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscription(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1
  name: listGlobalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicType(topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType
  name: listGlobalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicType(topicTypeName: string, options?: function)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-181">Nome del tipo di argomento</span><span class="sxs-lookup"><span data-stu-id="1f552-181">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2
  name: listGlobalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicType(topicTypeName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
  name: listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse(topicTypeName: string, options?: function)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-182">Nome del tipo di argomento</span><span class="sxs-lookup"><span data-stu-id="1f552-182">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionWithHttpOperationResponse
  name: listGlobalBySubscriptionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup
  name: listRegionalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroup(resourceGroupName: string, location: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-183">Il nome del gruppo di risorse nella sottoscrizione dell'utente.</span><span class="sxs-lookup"><span data-stu-id="1f552-183">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="1f552-184">Nome del percorso</span><span class="sxs-lookup"><span data-stu-id="1f552-184">Name of the location</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1
  name: listRegionalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroup(resourceGroupName: string, location: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2
  name: listRegionalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroup(resourceGroupName: string, location: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType
  name: listRegionalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicType(resourceGroupName: string, location: string, topicTypeName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-185">Il nome del gruppo di risorse nella sottoscrizione dell'utente.</span><span class="sxs-lookup"><span data-stu-id="1f552-185">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="1f552-186">Nome del percorso</span><span class="sxs-lookup"><span data-stu-id="1f552-186">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-187">Nome del tipo di argomento</span><span class="sxs-lookup"><span data-stu-id="1f552-187">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1
  name: listRegionalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicType(resourceGroupName: string, location: string, topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2
  name: listRegionalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicType(resourceGroupName: string, location: string, topicTypeName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
  name: listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName: string, location: string, topicTypeName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-188">Il nome del gruppo di risorse nella sottoscrizione dell'utente.</span><span class="sxs-lookup"><span data-stu-id="1f552-188">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="1f552-189">Nome del percorso</span><span class="sxs-lookup"><span data-stu-id="1f552-189">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-190">Nome del tipo di argomento</span><span class="sxs-lookup"><span data-stu-id="1f552-190">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupWithHttpOperationResponse
  name: listRegionalByResourceGroupWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupWithHttpOperationResponse(resourceGroupName: string, location: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-191">Il nome del gruppo di risorse nella sottoscrizione dell'utente.</span><span class="sxs-lookup"><span data-stu-id="1f552-191">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="1f552-192">Nome del percorso</span><span class="sxs-lookup"><span data-stu-id="1f552-192">Name of the location</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription
  name: listRegionalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscription(location: string, options?: function)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="1f552-193">Nome del percorso</span><span class="sxs-lookup"><span data-stu-id="1f552-193">Name of the location</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1
  name: listRegionalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscription(location: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2
  name: listRegionalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscription(location: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType
  name: listRegionalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicType(location: string, topicTypeName: string, options?: function)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="1f552-194">Nome del percorso</span><span class="sxs-lookup"><span data-stu-id="1f552-194">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-195">Nome del tipo di argomento</span><span class="sxs-lookup"><span data-stu-id="1f552-195">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1
  name: listRegionalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicType(location: string, topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2
  name: listRegionalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicType(location: string, topicTypeName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
  name: listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse(location: string, topicTypeName: string, options?: function)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="1f552-196">Nome del percorso</span><span class="sxs-lookup"><span data-stu-id="1f552-196">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-197">Nome del tipo di argomento</span><span class="sxs-lookup"><span data-stu-id="1f552-197">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionWithHttpOperationResponse
  name: listRegionalBySubscriptionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionWithHttpOperationResponse(location: string, options?: function)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="1f552-198">Nome del percorso</span><span class="sxs-lookup"><span data-stu-id="1f552-198">Name of the location</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function update(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-199">L'ambito della sottoscrizione di eventi esistente.</span><span class="sxs-lookup"><span data-stu-id="1f552-199">The scope of existing event subscription.</span></span> <span data-ttu-id="1f552-200">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-200">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-201">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-201">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-202">Nome della sottoscrizione di eventi da aggiornare</span><span class="sxs-lookup"><span data-stu-id="1f552-202">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="1f552-203">Informazioni sulla sottoscrizione di evento aggiornato</span><span class="sxs-lookup"><span data-stu-id="1f552-203">Updated event subscription information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function update(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function update(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options: function, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="1f552-204">L'ambito della sottoscrizione di eventi esistente.</span><span class="sxs-lookup"><span data-stu-id="1f552-204">The scope of existing event subscription.</span></span> <span data-ttu-id="1f552-205">L'ambito può essere una sottoscrizione, o un gruppo di risorse o una risorsa di primo livello che appartengono a uno spazio dei nomi del provider di risorse o un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-205">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="1f552-206">Ad esempio, usare ' / sottoscrizioni / {subscriptionId} /' per una sottoscrizione, '/ sottoscrizioni / {subscriptionId} /resourceGroups/ {resourceGroupName}' per un gruppo di risorse e ' /resourceGroups//sottoscrizioni / {subscriptionId} {resourceGroupName} / i provider / {resourceProviderNamespace} / {resourceType} / {resourceName}' per una risorsa, e ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' per un argomento EventGrid.</span><span class="sxs-lookup"><span data-stu-id="1f552-206">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="1f552-207">Nome della sottoscrizione di eventi da aggiornare</span><span class="sxs-lookup"><span data-stu-id="1f552-207">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="1f552-208">Informazioni sulla sottoscrizione di evento aggiornato</span><span class="sxs-lookup"><span data-stu-id="1f552-208">Updated event subscription information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
references:
- uid: azure-arm-eventgrid.EventSubscription
  spec.typeScript:
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
- uid: Promise<azure-arm-eventgrid.EventSubscription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventgrid.EventSubscription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-eventgrid.EventSubscriptionUpdateParameters
  spec.typeScript:
  - name: EventSubscriptionUpdateParameters
    fullName: EventSubscriptionUpdateParameters
    uid: azure-arm-eventgrid.EventSubscriptionUpdateParameters
- uid: Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventSubscriptionFullUrl
    fullName: EventSubscriptionFullUrl
    uid: azure-arm-eventgrid.EventSubscriptionFullUrl
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: EventSubscriptionFullUrl
    fullName: EventSubscriptionFullUrl
    uid: azure-arm-eventgrid.EventSubscriptionFullUrl
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionFullUrl>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: EventSubscriptionFullUrl
    fullName: EventSubscriptionFullUrl
    uid: azure-arm-eventgrid.EventSubscriptionFullUrl
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventSubscriptionsListResult
    fullName: EventSubscriptionsListResult
    uid: azure-arm-eventgrid.EventSubscriptionsListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: EventSubscriptionsListResult
    fullName: EventSubscriptionsListResult
    uid: azure-arm-eventgrid.EventSubscriptionsListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: EventSubscriptionsListResult
    fullName: EventSubscriptionsListResult
    uid: azure-arm-eventgrid.EventSubscriptionsListResult
  - name: '>>'
    fullName: '>>'
