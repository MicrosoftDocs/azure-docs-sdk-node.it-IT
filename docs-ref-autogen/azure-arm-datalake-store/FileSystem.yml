### YamlMime:UniversalReference
ms.openlocfilehash: 051668180977efad82270f671a6fb69557e2d712
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 12/13/2018
ms.locfileid: "52044986"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: "<span data-ttu-id=\"c5d2e-101\">Utilizzato per serie aggiunta al file specificato.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-101\">Used for serial appends to the specified file.</span></span><span data-ttu-id=\"c5d2e-102\"> NOTA: La destinazione non deve contenere i dati aggiunti da ConcurrentAppend.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-102\"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id=\"c5d2e-103\">ConcurrentAppend e accodamento non può essere utilizzato in modo intercambiabile. Dopo aver modificato un file di destinazione utilizzando uno di questi aggiungere opzioni, l'altra opzione append non può essere usata nel file di destinazione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-103\">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>"
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-104">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-104">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-105">Il percorso di Data Lake Store (inizia con '/') del file a cui accodare.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-105">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c5d2e-106">Il contenuto del file da includere quando si aggiunge al file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-106">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="c5d2e-107">Le dimensioni massime del contenuto sono 4MB.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-107">The maximum content size is 4MB.</span></span>  <span data-ttu-id="c5d2e-108">Per il contenuto di dimensioni superiore a 4MB è necessario aggiungere il contenuto in blocchi di 4MB.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-108">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: "<span data-ttu-id=\"c5d2e-109\">Utilizzato per serie aggiunta al file specificato.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-109\">Used for serial appends to the specified file.</span></span><span data-ttu-id=\"c5d2e-110\"> NOTA: La destinazione non deve contenere i dati aggiunti da ConcurrentAppend.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-110\"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id=\"c5d2e-111\">ConcurrentAppend e accodamento non può essere utilizzato in modo intercambiabile. Dopo aver modificato un file di destinazione utilizzando uno di questi aggiungere opzioni, l'altra opzione append non può essere usata nel file di destinazione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-111\">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>"
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: "<span data-ttu-id=\"c5d2e-112\">Utilizzato per serie aggiunta al file specificato.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-112\">Used for serial appends to the specified file.</span></span><span data-ttu-id=\"c5d2e-113\"> NOTA: La destinazione non deve contenere i dati aggiunti da ConcurrentAppend.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-113\"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id=\"c5d2e-114\">ConcurrentAppend e accodamento non può essere utilizzato in modo intercambiabile. Dopo aver modificato un file di destinazione utilizzando uno di questi aggiungere opzioni, l'altra opzione append non può essere usata nel file di destinazione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-114\">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>"
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: "<span data-ttu-id=\"c5d2e-115\">Utilizzato per serie aggiunta al file specificato.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-115\">Used for serial appends to the specified file.</span></span><span data-ttu-id=\"c5d2e-116\"> NOTA: La destinazione non deve contenere i dati aggiunti da ConcurrentAppend.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-116\"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id=\"c5d2e-117\">ConcurrentAppend e accodamento non può essere utilizzato in modo intercambiabile. Dopo aver modificato un file di destinazione utilizzando uno di questi aggiungere opzioni, l'altra opzione append non può essere usata nel file di destinazione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c5d2e-117\">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>"
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-118">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-118">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-119">Il percorso di Data Lake Store (inizia con '/') del file a cui accodare.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-119">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c5d2e-120">Il contenuto del file da includere quando si aggiunge al file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-120">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="c5d2e-121">Le dimensioni massime del contenuto sono 4MB.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-121">The maximum content size is 4MB.</span></span>  <span data-ttu-id="c5d2e-122">Per il contenuto di dimensioni superiore a 4MB è necessario aggiungere il contenuto in blocchi di 4MB.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-122">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-123">Controlla se l'accesso specificato è disponibile nel percorso specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-123">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-124">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-124">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-125">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui si desidera controllare l'accesso.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-125">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-126">File system operazione in lettura/scrittura/esecuzione sotto forma di stringa, corrispondenza con il criterio di espressione regolare ' [rwx-]{3}'</span><span class="sxs-lookup"><span data-stu-id="c5d2e-126">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-127">Controlla se l'accesso specificato è disponibile nel percorso specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-127">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-128">Controlla se l'accesso specificato è disponibile nel percorso specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-128">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-129">Controlla se l'accesso specificato è disponibile nel percorso specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-129">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-130">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-130">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-131">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui si desidera controllare l'accesso.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-131">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-132">File system operazione in lettura/scrittura/esecuzione sotto forma di stringa, corrispondenza con il criterio di espressione regolare ' [rwx-]{3}'</span><span class="sxs-lookup"><span data-stu-id="c5d2e-132">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-133">Consente di concatenare l'elenco dei file di origine in file di destinazione, rimuovere tutti i file di origine al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-133">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-134">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-134">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-135">Il percorso di Data Lake Store (inizia con '/') del file di destinazione risultante dalla concatenazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-135">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="c5d2e-136">Un elenco di virgole separati i percorsi di Data Lake Store (inizia con '/') dei file da concatenare, nell'ordine in cui deve essere concatenati.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-136">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat(string, string, string[], Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-137">Consente di concatenare l'elenco dei file di origine in file di destinazione, rimuovere tutti i file di origine al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-137">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat(string, string, string[], ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-138">Consente di concatenare l'elenco dei file di origine in file di destinazione, rimuovere tutti i file di origine al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-138">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-139">Consente di concatenare l'elenco dei file di origine in file di destinazione, rimuovere tutti i file di origine al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-139">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-140">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-140">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-141">Il percorso di Data Lake Store (inizia con '/') del file di destinazione risultante dalla concatenazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-141">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="c5d2e-142">Un elenco di virgole separati i percorsi di Data Lake Store (inizia con '/') dei file da concatenare, nell'ordine in cui deve essere concatenati.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-142">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="c5d2e-143">Aggiunge al file specificato, facoltativamente, prima di tutto la creazione del file se non esiste ancora.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-143">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="c5d2e-144">Supporta questo metodo simultanea più aggiunge al file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-144">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="c5d2e-145">NOTA: La destinazione non deve contenere i dati aggiunti da creare o normale Append (seriale).</span><span class="sxs-lookup"><span data-stu-id="c5d2e-145">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="c5d2e-146">ConcurrentAppend e accodamento non può essere utilizzato in modo intercambiabile. Dopo aver modificato un file di destinazione utilizzando uno di questi aggiungere opzioni, l'altra opzione append non può essere usata nel file di destinazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-146">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="c5d2e-147">ConcurrentAppend non garantisce l'ordine e può comportare dati duplicati di destinazione nel file di destinazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-147">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-148">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-148">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-149">Il percorso di Data Lake Store (inizia con '/') del file a cui accodare usando simultanee accodare.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-149">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c5d2e-150">Il contenuto del file da includere quando si aggiunge al file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-150">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="c5d2e-151">Le dimensioni massime del contenuto sono 4MB.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-151">The maximum content size is 4MB.</span></span>  <span data-ttu-id="c5d2e-152">Per il contenuto di dimensioni superiore a 4MB è necessario aggiungere il contenuto in blocchi di 4MB.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-152">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="c5d2e-153">Aggiunge al file specificato, facoltativamente, prima di tutto la creazione del file se non esiste ancora.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-153">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="c5d2e-154">Supporta questo metodo simultanea più aggiunge al file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-154">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="c5d2e-155">NOTA: La destinazione non deve contenere i dati aggiunti da creare o normale Append (seriale).</span><span class="sxs-lookup"><span data-stu-id="c5d2e-155">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="c5d2e-156">ConcurrentAppend e accodamento non può essere utilizzato in modo intercambiabile. Dopo aver modificato un file di destinazione utilizzando uno di questi aggiungere opzioni, l'altra opzione append non può essere usata nel file di destinazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-156">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="c5d2e-157">ConcurrentAppend non garantisce l'ordine e può comportare dati duplicati di destinazione nel file di destinazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-157">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="c5d2e-158">Aggiunge al file specificato, facoltativamente, prima di tutto la creazione del file se non esiste ancora.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-158">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="c5d2e-159">Supporta questo metodo simultanea più aggiunge al file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-159">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="c5d2e-160">NOTA: La destinazione non deve contenere i dati aggiunti da creare o normale Append (seriale).</span><span class="sxs-lookup"><span data-stu-id="c5d2e-160">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="c5d2e-161">ConcurrentAppend e accodamento non può essere utilizzato in modo intercambiabile. Dopo aver modificato un file di destinazione utilizzando uno di questi aggiungere opzioni, l'altra opzione append non può essere usata nel file di destinazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-161">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="c5d2e-162">ConcurrentAppend non garantisce l'ordine e può comportare dati duplicati di destinazione nel file di destinazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-162">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="c5d2e-163">Aggiunge al file specificato, facoltativamente, prima di tutto la creazione del file se non esiste ancora.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-163">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="c5d2e-164">Supporta questo metodo simultanea più aggiunge al file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-164">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="c5d2e-165">NOTA: La destinazione non deve contenere i dati aggiunti da creare o normale Append (seriale).</span><span class="sxs-lookup"><span data-stu-id="c5d2e-165">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="c5d2e-166">ConcurrentAppend e accodamento non può essere utilizzato in modo intercambiabile. Dopo aver modificato un file di destinazione utilizzando uno di questi aggiungere opzioni, l'altra opzione append non può essere usata nel file di destinazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-166">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="c5d2e-167">ConcurrentAppend non garantisce l'ordine e può comportare dati duplicati di destinazione nel file di destinazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-167">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-168">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-168">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-169">Il percorso di Data Lake Store (inizia con '/') del file a cui accodare usando simultanee accodare.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-169">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c5d2e-170">Il contenuto del file da includere quando si aggiunge al file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-170">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="c5d2e-171">Le dimensioni massime del contenuto sono 4MB.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-171">The maximum content size is 4MB.</span></span>  <span data-ttu-id="c5d2e-172">Per il contenuto di dimensioni superiore a 4MB è necessario aggiungere il contenuto in blocchi di 4MB.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-172">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="c5d2e-173">Crea un file con contenuto specificato facoltativamente.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-173">Creates a file with optionally specified content.</span></span> <span data-ttu-id="c5d2e-174">NOTA: Se il contenuto viene fornito, il file risultante non può essere modificato usando ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-174">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-175">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-175">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-176">Il percorso di Data Lake Store (inizia con '/') del file da creare.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-176">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="c5d2e-177">Crea un file con contenuto specificato facoltativamente.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-177">Creates a file with optionally specified content.</span></span> <span data-ttu-id="c5d2e-178">NOTA: Se il contenuto viene fornito, il file risultante non può essere modificato usando ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-178">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="c5d2e-179">Crea un file con contenuto specificato facoltativamente.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-179">Creates a file with optionally specified content.</span></span> <span data-ttu-id="c5d2e-180">NOTA: Se il contenuto viene fornito, il file risultante non può essere modificato usando ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-180">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="c5d2e-181">Crea un file con contenuto specificato facoltativamente.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-181">Creates a file with optionally specified content.</span></span> <span data-ttu-id="c5d2e-182">NOTA: Se il contenuto viene fornito, il file risultante non può essere modificato usando ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-182">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-183">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-183">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-184">Il percorso di Data Lake Store (inizia con '/') del file da creare.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-184">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-185">Elimina il file richiesto o directory, facoltativamente, in modo ricorsivo.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-185">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-186">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-186">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-187">Il percorso di Data Lake Store (inizia con '/') del file o della directory da eliminare.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-187">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-188">Elimina il file richiesto o directory, facoltativamente, in modo ricorsivo.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-188">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-189">Elimina il file richiesto o directory, facoltativamente, in modo ricorsivo.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-189">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-190">Elimina il file richiesto o directory, facoltativamente, in modo ricorsivo.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-190">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-191">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-191">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-192">Il percorso di Data Lake Store (inizia con '/') del file o della directory da eliminare.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-192">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-193">Ottiene le voci di elenco di controllo di accesso (ACL) per il file o directory specificata.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-193">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-194">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-194">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-195">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui ottenere l'elenco ACL.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-195">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus(string, string, Object, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-196">Ottiene le voci di elenco di controllo di accesso (ACL) per il file o directory specificata.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-196">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus(string, string, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-197">Ottiene le voci di elenco di controllo di accesso (ACL) per il file o directory specificata.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-197">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-198">Ottiene le voci di elenco di controllo di accesso (ACL) per il file o directory specificata.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-198">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-199">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-199">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-200">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui ottenere l'elenco ACL.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-200">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-201">Ottiene l'oggetto riepilogo contenuto file specificato dal percorso del file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-201">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-202">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-202">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-203">Il percorso di Data Lake Store (inizia con '/') del file per cui recuperare il riepilogo.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-203">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary(string, string, Object, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-204">Ottiene l'oggetto riepilogo contenuto file specificato dal percorso del file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-204">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: Object, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary(string, string, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-205">Ottiene l'oggetto riepilogo contenuto file specificato dal percorso del file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-205">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-206">Ottiene l'oggetto riepilogo contenuto file specificato dal percorso del file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-206">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-207">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-207">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-208">Il percorso di Data Lake Store (inizia con '/') del file per cui recuperare il riepilogo.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-208">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-209">Ottiene l'oggetto di stato di file specificato dal percorso del file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-209">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-210">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-210">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-211">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui recuperare lo stato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-211">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus(string, string, Object, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-212">Ottiene l'oggetto di stato di file specificato dal percorso del file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-212">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus(string, string, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-213">Ottiene l'oggetto di stato di file specificato dal percorso del file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-213">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-214">Ottiene l'oggetto di stato di file specificato dal percorso del file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-214">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-215">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-215">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-216">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui recuperare lo stato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-216">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-217">Ottiene l'elenco di oggetti di stato di file specificato dal percorso file, con i parametri di paginazione facoltativo</span><span class="sxs-lookup"><span data-stu-id="c5d2e-217">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-218">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-218">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-219">Il percorso di Data Lake Store (inizia con '/') della directory all'elenco.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-219">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus(string, string, Object, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-220">Ottiene l'elenco di oggetti di stato di file specificato dal percorso file, con i parametri di paginazione facoltativo</span><span class="sxs-lookup"><span data-stu-id="c5d2e-220">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus(string, string, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-221">Ottiene l'elenco di oggetti di stato di file specificato dal percorso file, con i parametri di paginazione facoltativo</span><span class="sxs-lookup"><span data-stu-id="c5d2e-221">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-222">Ottiene l'elenco di oggetti di stato di file specificato dal percorso file, con i parametri di paginazione facoltativo</span><span class="sxs-lookup"><span data-stu-id="c5d2e-222">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-223">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-223">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-224">Il percorso di Data Lake Store (inizia con '/') della directory all'elenco.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-224">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-225">Crea una directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-225">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-226">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-226">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-227">Il percorso di Data Lake Store (inizia con '/') della directory da creare.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-227">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-228">Crea una directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-228">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-229">Crea una directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-229">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-230">Crea una directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-230">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-231">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-231">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-232">Il percorso di Data Lake Store (inizia con '/') della directory da creare.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-232">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-233">Consente di modificare le voci di elenco di controllo di accesso (ACL) esistenti in un file o cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-233">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-234">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-234">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-235">Il percorso di Data Lake Store (inizia con '/') del file o della directory con l'elenco ACL viene modificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-235">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-236">La specifica di ACL inclusa nelle operazioni di modifica ACL nel formato ' [predefinito:] utente | gruppo | altri:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="c5d2e-236">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-237">Consente di modificare le voci di elenco di controllo di accesso (ACL) esistenti in un file o cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-237">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-238">Consente di modificare le voci di elenco di controllo di accesso (ACL) esistenti in un file o cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-238">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-239">Consente di modificare le voci di elenco di controllo di accesso (ACL) esistenti in un file o cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-239">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-240">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-240">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-241">Il percorso di Data Lake Store (inizia con '/') del file o della directory con l'elenco ACL viene modificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-241">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-242">La specifica di ACL inclusa nelle operazioni di modifica ACL nel formato ' [predefinito:] utente | gruppo | altri:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="c5d2e-242">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-243">Consente di concatenare l'elenco dei file di origine in file di destinazione e l'eliminazione di tutti i file di origine al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-243">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="c5d2e-244">Questo metodo accetta più percorsi di file di origine rispetto al metodo Concat.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-244">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="c5d2e-245">Questo metodo e i parametri accettati sono soggetti a modifiche facilità d'uso in una versione futura.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-245">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-246">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-246">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-247">Il percorso di Data Lake Store (inizia con '/') del file di destinazione risultante dalla concatenazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-247">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c5d2e-248">Un elenco di percorsi di Data Lake Store (inizia con '/') dei file di origine.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-248">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="c5d2e-249">Deve essere un elenco di percorsi delimitato da virgole nel formato: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="c5d2e-249">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-250">Consente di concatenare l'elenco dei file di origine in file di destinazione e l'eliminazione di tutti i file di origine al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-250">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="c5d2e-251">Questo metodo accetta più percorsi di file di origine rispetto al metodo Concat.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-251">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="c5d2e-252">Questo metodo e i parametri accettati sono soggetti a modifiche facilità d'uso in una versione futura.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-252">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-253">Consente di concatenare l'elenco dei file di origine in file di destinazione e l'eliminazione di tutti i file di origine al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-253">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="c5d2e-254">Questo metodo accetta più percorsi di file di origine rispetto al metodo Concat.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-254">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="c5d2e-255">Questo metodo e i parametri accettati sono soggetti a modifiche facilità d'uso in una versione futura.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-255">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-256">Consente di concatenare l'elenco dei file di origine in file di destinazione e l'eliminazione di tutti i file di origine al termine dell'operazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-256">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="c5d2e-257">Questo metodo accetta più percorsi di file di origine rispetto al metodo Concat.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-257">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="c5d2e-258">Questo metodo e i parametri accettati sono soggetti a modifiche facilità d'uso in una versione futura.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-258">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-259">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-259">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-260">Il percorso di Data Lake Store (inizia con '/') del file di destinazione risultante dalla concatenazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-260">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c5d2e-261">Un elenco di percorsi di Data Lake Store (inizia con '/') dei file di origine.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-261">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="c5d2e-262">Deve essere un elenco di percorsi delimitato da virgole nel formato: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="c5d2e-262">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-263">Apre e legge dal file specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-263">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-264">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-264">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-265">Il percorso di Data Lake Store (inizia con '/') del file da aprire.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-265">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open(string, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-266">Apre e legge dal file specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-266">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open(string, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-267">Apre e legge dal file specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-267">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-268">Apre e legge dal file specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-268">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-269">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-269">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-270">Il percorso di Data Lake Store (inizia con '/') del file da aprire.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-270">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-271">Rimuove l'esistente controllo elenco accesso (ACL) del file specificato o della directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-271">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-272">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-272">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-273">Il percorso di Data Lake Store (inizia con '/') del file o della directory con l'ACL da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-273">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-274">Rimuove l'esistente controllo elenco accesso (ACL) del file specificato o della directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-274">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-275">Rimuove l'esistente controllo elenco accesso (ACL) del file specificato o della directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-275">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-276">Rimuove le voci di elenco di controllo di accesso (ACL) per un file o una cartella esistente.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-276">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-277">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-277">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-278">Il percorso di Data Lake Store (inizia con '/') del file o della directory con l'ACL da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-278">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-279">La specifica ACL inclusa nelle operazioni di rimozione di ACL nel formato ' [predefinito:] utente | gruppo | altri '</span><span class="sxs-lookup"><span data-stu-id="c5d2e-279">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-280">Rimuove le voci di elenco di controllo di accesso (ACL) per un file o una cartella esistente.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-280">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-281">Rimuove le voci di elenco di controllo di accesso (ACL) per un file o una cartella esistente.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-281">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-282">Rimuove le voci di elenco di controllo di accesso (ACL) per un file o una cartella esistente.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-282">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-283">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-283">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-284">Il percorso di Data Lake Store (inizia con '/') del file o della directory con l'ACL da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-284">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-285">La specifica ACL inclusa nelle operazioni di rimozione di ACL nel formato ' [predefinito:] utente | gruppo | altri '</span><span class="sxs-lookup"><span data-stu-id="c5d2e-285">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-286">Rimuove l'esistente controllo elenco accesso (ACL) del file specificato o della directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-286">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-287">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-287">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-288">Il percorso di Data Lake Store (inizia con '/') del file o della directory con l'ACL da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-288">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-289">Rimuove l'esistente predefinito controllo elenco accesso (ACL) della directory specificata.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-289">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-290">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-290">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-291">Il percorso di Data Lake Store (inizia con '/') della directory con il valore predefinito, ACL da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-291">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-292">Rimuove l'esistente predefinito controllo elenco accesso (ACL) della directory specificata.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-292">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-293">Rimuove l'esistente predefinito controllo elenco accesso (ACL) della directory specificata.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-293">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-294">Rimuove l'esistente predefinito controllo elenco accesso (ACL) della directory specificata.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-294">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-295">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-295">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-296">Il percorso di Data Lake Store (inizia con '/') della directory con il valore predefinito, ACL da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-296">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-297">Rinominare un file o directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-297">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-298">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-298">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-299">Il percorso di Data Lake Store (inizia con '/') del file o directory per lo spostamento e la ridenominazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-299">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-300">Sposta o Rinomina file o della cartella per il percorso</span><span class="sxs-lookup"><span data-stu-id="c5d2e-300">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename(string, string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-301">Rinominare un file o directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-301">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename(string, string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-302">Rinominare un file o directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-302">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-303">Rinominare un file o directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-303">Rename a file or directory.</span></span>
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-304">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-304">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-305">Il percorso di Data Lake Store (inizia con '/') del file o directory per lo spostamento e la ridenominazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-305">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-306">Sposta o Rinomina file o della cartella per il percorso</span><span class="sxs-lookup"><span data-stu-id="c5d2e-306">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-307">Imposta l'elenco di controllo di accesso (ACL) per un file o cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-307">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-308">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-308">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-309">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui impostare l'ACL.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-309">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-310">La specifica ACL inclusa nelle operazioni di creazione delle ACL nel formato ' [predefinito:] utente | gruppo | altri:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="c5d2e-310">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-311">Imposta l'elenco di controllo di accesso (ACL) per un file o cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-311">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-312">Imposta l'elenco di controllo di accesso (ACL) per un file o cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-312">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-313">Imposta l'elenco di controllo di accesso (ACL) per un file o cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-313">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-314">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-314">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-315">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui impostare l'ACL.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-315">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-316">La specifica ACL inclusa nelle operazioni di creazione delle ACL nel formato ' [predefinito:] utente | gruppo | altri:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="c5d2e-316">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-317">Imposta o rimuove l'ora di scadenza per il file specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-317">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="c5d2e-318">Questa operazione può essere eseguita solo su file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-318">This operation can only be executed against files.</span></span> <span data-ttu-id="c5d2e-319">Le cartelle non sono supportate.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-319">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-320">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-320">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-321">Il percorso di Data Lake Store (inizia con '/') del file nel quale si desidera impostare o rimuovere l'ora di scadenza.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-321">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-322">Indica il tipo di scadenza da utilizzare per il file: 1.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-322">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="c5d2e-323">NeverExpire: ExpireTime viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-323">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="c5d2e-324">2.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-324">2.</span></span> <span data-ttu-id="c5d2e-325">RelativeToNow: ExpireTime è un numero intero espresso in millisecondi che rappresenta la data di scadenza rispetto a quando la scadenza dei file viene aggiornato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-325">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="c5d2e-326">3.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-326">3.</span></span> <span data-ttu-id="c5d2e-327">RelativeToCreationDate: ExpireTime è un numero intero espresso in millisecondi che rappresenta la data di scadenza relativo alla creazione di file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-327">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="c5d2e-328">4.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-328">4.</span></span> <span data-ttu-id="c5d2e-329">Assoluto: ExpireTime è un numero intero espresso in millisecondi, come un timestamp Unix dell'ora rispetto al 1/1/1970 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-329">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="c5d2e-330">Possibili valori: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span><span class="sxs-lookup"><span data-stu-id="c5d2e-330">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-331">Imposta o rimuove l'ora di scadenza per il file specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-331">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="c5d2e-332">Questa operazione può essere eseguita solo su file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-332">This operation can only be executed against files.</span></span> <span data-ttu-id="c5d2e-333">Le cartelle non sono supportate.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-333">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-334">Imposta o rimuove l'ora di scadenza per il file specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-334">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="c5d2e-335">Questa operazione può essere eseguita solo su file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-335">This operation can only be executed against files.</span></span> <span data-ttu-id="c5d2e-336">Le cartelle non sono supportate.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-336">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-337">Imposta o rimuove l'ora di scadenza per il file specificato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-337">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="c5d2e-338">Questa operazione può essere eseguita solo su file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-338">This operation can only be executed against files.</span></span> <span data-ttu-id="c5d2e-339">Le cartelle non sono supportate.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-339">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-340">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-340">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-341">Il percorso di Data Lake Store (inizia con '/') del file nel quale si desidera impostare o rimuovere l'ora di scadenza.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-341">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-342">Indica il tipo di scadenza da utilizzare per il file: 1.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-342">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="c5d2e-343">NeverExpire: ExpireTime viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-343">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="c5d2e-344">2.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-344">2.</span></span> <span data-ttu-id="c5d2e-345">RelativeToNow: ExpireTime è un numero intero espresso in millisecondi che rappresenta la data di scadenza rispetto a quando la scadenza dei file viene aggiornato.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-345">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="c5d2e-346">3.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-346">3.</span></span> <span data-ttu-id="c5d2e-347">RelativeToCreationDate: ExpireTime è un numero intero espresso in millisecondi che rappresenta la data di scadenza relativo alla creazione di file.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-347">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="c5d2e-348">4.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-348">4.</span></span> <span data-ttu-id="c5d2e-349">Assoluto: ExpireTime è un numero intero espresso in millisecondi, come un timestamp Unix dell'ora rispetto al 1/1/1970 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-349">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="c5d2e-350">Possibili valori: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span><span class="sxs-lookup"><span data-stu-id="c5d2e-350">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-351">Imposta il proprietario di un file o directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-351">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-352">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-352">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-353">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui impostare il proprietario.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-353">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-354">Imposta il proprietario di un file o directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-354">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-355">Imposta il proprietario di un file o directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-355">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-356">Imposta il proprietario di un file o directory.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-356">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-357">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-357">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-358">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui impostare il proprietario.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-358">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-359">Imposta l'autorizzazione del file o della cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-359">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-360">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-360">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-361">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui impostare l'autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-361">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-362">Imposta l'autorizzazione del file o della cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-362">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-363">Imposta l'autorizzazione del file o della cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-363">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c5d2e-364">Imposta l'autorizzazione del file o della cartella.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-364">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-365">L'account Azure Data Lake Store per eseguire operazioni del file System in.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-365">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="c5d2e-366">Il percorso di Data Lake Store (inizia con '/') del file o directory per cui impostare l'autorizzazione.</span><span class="sxs-lookup"><span data-stu-id="c5d2e-366">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  name: FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  name: AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  name: ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  name: FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  name: FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
