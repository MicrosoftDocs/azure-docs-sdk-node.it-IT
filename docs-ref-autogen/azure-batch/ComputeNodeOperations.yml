### YamlMime:UniversalReference
items:
  - uid: azure-batch.ComputeNodeOperations
    name: ComputeNodeOperations
    fullName: ComputeNodeOperations
    children:
      - azure-batch.ComputeNodeOperations.addUser
      - azure-batch.ComputeNodeOperations.addUser_2
      - azure-batch.ComputeNodeOperations.addUser_1
      - azure-batch.ComputeNodeOperations.addUserWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.deleteUser
      - azure-batch.ComputeNodeOperations.deleteUser_2
      - azure-batch.ComputeNodeOperations.deleteUser_1
      - azure-batch.ComputeNodeOperations.deleteUserWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.disableScheduling
      - azure-batch.ComputeNodeOperations.disableScheduling_2
      - azure-batch.ComputeNodeOperations.disableScheduling_1
      - azure-batch.ComputeNodeOperations.disableSchedulingWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.enableScheduling
      - azure-batch.ComputeNodeOperations.enableScheduling_2
      - azure-batch.ComputeNodeOperations.enableScheduling_1
      - azure-batch.ComputeNodeOperations.enableSchedulingWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.get
      - azure-batch.ComputeNodeOperations.get_2
      - azure-batch.ComputeNodeOperations.get_1
      - azure-batch.ComputeNodeOperations.getRemoteDesktop
      - azure-batch.ComputeNodeOperations.getRemoteDesktop_2
      - azure-batch.ComputeNodeOperations.getRemoteDesktop_1
      - azure-batch.ComputeNodeOperations.getRemoteDesktopWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.getRemoteLoginSettings
      - azure-batch.ComputeNodeOperations.getRemoteLoginSettings_2
      - azure-batch.ComputeNodeOperations.getRemoteLoginSettings_1
      - azure-batch.ComputeNodeOperations.getRemoteLoginSettingsWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.getWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.list
      - azure-batch.ComputeNodeOperations.list_2
      - azure-batch.ComputeNodeOperations.list_1
      - azure-batch.ComputeNodeOperations.listNext
      - azure-batch.ComputeNodeOperations.listNext_2
      - azure-batch.ComputeNodeOperations.listNext_1
      - azure-batch.ComputeNodeOperations.listNextWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.listWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.reboot
      - azure-batch.ComputeNodeOperations.reboot_2
      - azure-batch.ComputeNodeOperations.reboot_1
      - azure-batch.ComputeNodeOperations.rebootWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.reimage
      - azure-batch.ComputeNodeOperations.reimage_2
      - azure-batch.ComputeNodeOperations.reimage_1
      - azure-batch.ComputeNodeOperations.reimageWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.updateUser
      - azure-batch.ComputeNodeOperations.updateUser_2
      - azure-batch.ComputeNodeOperations.updateUser_1
      - azure-batch.ComputeNodeOperations.updateUserWithHttpOperationResponse
      - azure-batch.ComputeNodeOperations.uploadBatchServiceLogs
      - azure-batch.ComputeNodeOperations.uploadBatchServiceLogs_2
      - azure-batch.ComputeNodeOperations.uploadBatchServiceLogs_1
      - azure-batch.ComputeNodeOperations.uploadBatchServiceLogsWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.addUser
    name: 'addUser(string, string, ComputeNodeUser, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addUser(poolId: string, nodeId: string, user: ComputeNodeUser, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-101">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-101">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-102">L'ID del computer in cui si desidera creare un Account utente.</span><span class="sxs-lookup"><span data-stu-id="51228-102">The ID of the machine on which you want to create a user Account.</span></span>
        - id: user
          type:
            - azure-batch.ComputeNodeUser
          description: |
            <span data-ttu-id="51228-103">Creazione dell'Account utente.</span><span class="sxs-lookup"><span data-stu-id="51228-103">The user Account to be created.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.addUser_2
    name: 'addUser(string, string, ComputeNodeUser, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addUser(poolId: string, nodeId: string, user: ComputeNodeUser, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: user
          type:
            - azure-batch.ComputeNodeUser
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.addUser_1
    name: 'addUser(string, string, ComputeNodeUser, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addUser(poolId: string, nodeId: string, user: ComputeNodeUser, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: user
          type:
            - azure-batch.ComputeNodeUser
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.addUserWithHttpOperationResponse
    name: 'addUserWithHttpOperationResponse(string, string, ComputeNodeUser, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addUserWithHttpOperationResponse(poolId: string, nodeId: string, user: ComputeNodeUser, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-104">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-104">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-105">L'ID del computer in cui si desidera creare un Account utente.</span><span class="sxs-lookup"><span data-stu-id="51228-105">The ID of the machine on which you want to create a user Account.</span></span>
        - id: user
          type:
            - azure-batch.ComputeNodeUser
          description: |
            <span data-ttu-id="51228-106">Creazione dell'Account utente.</span><span class="sxs-lookup"><span data-stu-id="51228-106">The user Account to be created.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.deleteUser
    name: 'deleteUser(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteUser(poolId: string, nodeId: string, userName: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-107">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-107">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-108">L'ID del computer in cui si desidera eliminare un Account utente.</span><span class="sxs-lookup"><span data-stu-id="51228-108">The ID of the machine on which you want to delete a user Account.</span></span>
        - id: userName
          type:
            - string
          description: |
            <span data-ttu-id="51228-109">Il nome dell'utente Account da eliminare.</span><span class="sxs-lookup"><span data-stu-id="51228-109">The name of the user Account to delete.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.deleteUser_2
    name: 'deleteUser(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteUser(poolId: string, nodeId: string, userName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: userName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.deleteUser_1
    name: 'deleteUser(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteUser(poolId: string, nodeId: string, userName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: userName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.deleteUserWithHttpOperationResponse
    name: 'deleteUserWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteUserWithHttpOperationResponse(poolId: string, nodeId: string, userName: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-110">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-110">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-111">L'ID del computer in cui si desidera eliminare un Account utente.</span><span class="sxs-lookup"><span data-stu-id="51228-111">The ID of the machine on which you want to delete a user Account.</span></span>
        - id: userName
          type:
            - string
          description: |
            <span data-ttu-id="51228-112">Il nome dell'utente Account da eliminare.</span><span class="sxs-lookup"><span data-stu-id="51228-112">The name of the user Account to delete.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.disableScheduling
    name: 'disableScheduling(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableScheduling(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-113">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-113">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-114">L'ID del nodo di calcolo in cui si desidera disabilitare la pianificazione delle attività.</span><span class="sxs-lookup"><span data-stu-id="51228-114">The ID of the Compute Node on which you want to disable Task scheduling.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.disableScheduling_2
    name: 'disableScheduling(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableScheduling(poolId: string, nodeId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.disableScheduling_1
    name: 'disableScheduling(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableScheduling(poolId: string, nodeId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.disableSchedulingWithHttpOperationResponse
    name: 'disableSchedulingWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableSchedulingWithHttpOperationResponse(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-115">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-115">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-116">L'ID del nodo di calcolo in cui si desidera disabilitare la pianificazione delle attività.</span><span class="sxs-lookup"><span data-stu-id="51228-116">The ID of the Compute Node on which you want to disable Task scheduling.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.enableScheduling
    name: 'enableScheduling(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableScheduling(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-117">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-117">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-118">L'ID del nodo di calcolo in cui si desidera abilitare la pianificazione delle attività.</span><span class="sxs-lookup"><span data-stu-id="51228-118">The ID of the Compute Node on which you want to enable Task scheduling.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.enableScheduling_2
    name: 'enableScheduling(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableScheduling(poolId: string, nodeId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.enableScheduling_1
    name: 'enableScheduling(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableScheduling(poolId: string, nodeId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.enableSchedulingWithHttpOperationResponse
    name: 'enableSchedulingWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableSchedulingWithHttpOperationResponse(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-119">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-119">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-120">L'ID del nodo di calcolo in cui si desidera abilitare la pianificazione delle attività.</span><span class="sxs-lookup"><span data-stu-id="51228-120">The ID of the Compute Node on which you want to enable Task scheduling.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-121">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-121">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-122">L'ID del nodo di calcolo che si desidera ottenere informazioni.</span><span class="sxs-lookup"><span data-stu-id="51228-122">The ID of the Compute Node that you want to get information about.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-batch.ComputeNode>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.get_2
    name: 'get(string, string, Object, ServiceCallback<ComputeNode>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(poolId: string, nodeId: string, options: Object, callback: ServiceCallback<ComputeNode>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-batch.ComputeNode>
          description: ''
      return:
        type:
          - Promise<azure-batch.ComputeNode>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.get_1
    name: 'get(string, string, ServiceCallback<ComputeNode>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(poolId: string, nodeId: string, callback: ServiceCallback<ComputeNode>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-batch.ComputeNode>
          description: ''
      return:
        type:
          - Promise<azure-batch.ComputeNode>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.getRemoteDesktop
    name: 'getRemoteDesktop(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRemoteDesktop(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-123">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-123">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-124">L'ID del nodo di calcolo per il quale si desidera ottenere il file Remote Desktop Protocol.</span><span class="sxs-lookup"><span data-stu-id="51228-124">The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<stream.Readable>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.getRemoteDesktop_2
    name: 'getRemoteDesktop(string, string, Object, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRemoteDesktop(poolId: string, nodeId: string, options: Object, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.getRemoteDesktop_1
    name: 'getRemoteDesktop(string, string, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRemoteDesktop(poolId: string, nodeId: string, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.getRemoteDesktopWithHttpOperationResponse
    name: 'getRemoteDesktopWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRemoteDesktopWithHttpOperationResponse(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-125">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-125">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-126">L'ID del nodo di calcolo per il quale si desidera ottenere il file Remote Desktop Protocol.</span><span class="sxs-lookup"><span data-stu-id="51228-126">The ID of the Compute Node for which you want to get the Remote Desktop Protocol file.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<stream.Readable>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.getRemoteLoginSettings
    name: 'getRemoteLoginSettings(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRemoteLoginSettings(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-127">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-127">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-128">L'ID del nodo di calcolo per il quale ottenere le impostazioni di account di accesso remoto.</span><span class="sxs-lookup"><span data-stu-id="51228-128">The ID of the Compute Node for which to obtain the remote login settings.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-batch.ComputeNodeGetRemoteLoginSettingsResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.getRemoteLoginSettings_2
    name: 'getRemoteLoginSettings(string, string, Object, ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRemoteLoginSettings(poolId: string, nodeId: string, options: Object, callback: ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-batch.ComputeNodeGetRemoteLoginSettingsResult>
          description: ''
      return:
        type:
          - Promise<azure-batch.ComputeNodeGetRemoteLoginSettingsResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.getRemoteLoginSettings_1
    name: 'getRemoteLoginSettings(string, string, ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRemoteLoginSettings(poolId: string, nodeId: string, callback: ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-batch.ComputeNodeGetRemoteLoginSettingsResult>
          description: ''
      return:
        type:
          - Promise<azure-batch.ComputeNodeGetRemoteLoginSettingsResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.getRemoteLoginSettingsWithHttpOperationResponse
    name: 'getRemoteLoginSettingsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRemoteLoginSettingsWithHttpOperationResponse(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-129">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-129">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-130">L'ID del nodo di calcolo per il quale ottenere le impostazioni di account di accesso remoto.</span><span class="sxs-lookup"><span data-stu-id="51228-130">The ID of the Compute Node for which to obtain the remote login settings.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-batch.ComputeNodeGetRemoteLoginSettingsResult>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getWithHttpOperationResponse(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-131">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-131">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-132">L'ID del nodo di calcolo che si desidera ottenere informazioni.</span><span class="sxs-lookup"><span data-stu-id="51228-132">The ID of the Compute Node that you want to get information about.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-batch.ComputeNode>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.list
    name: 'list(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(poolId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-133">L'ID del Pool da cui desidera elencare i nodi di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-133">The ID of the Pool from which you want to list Compute Nodes.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-batch.ComputeNodeListResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.list_2
    name: 'list(string, Object, ServiceCallback<ComputeNodeListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(poolId: string, options: Object, callback: ServiceCallback<ComputeNodeListResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-batch.ComputeNodeListResult>
          description: ''
      return:
        type:
          - Promise<azure-batch.ComputeNodeListResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.list_1
    name: 'list(string, ServiceCallback<ComputeNodeListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(poolId: string, callback: ServiceCallback<ComputeNodeListResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-batch.ComputeNodeListResult>
          description: ''
      return:
        type:
          - Promise<azure-batch.ComputeNodeListResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="51228-134">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="51228-134">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-batch.ComputeNodeListResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.listNext_2
    name: 'listNext(string, Object, ServiceCallback<ComputeNodeListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: Object, callback: ServiceCallback<ComputeNodeListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-batch.ComputeNodeListResult>
          description: ''
      return:
        type:
          - Promise<azure-batch.ComputeNodeListResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.listNext_1
    name: 'listNext(string, ServiceCallback<ComputeNodeListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<ComputeNodeListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-batch.ComputeNodeListResult>
          description: ''
      return:
        type:
          - Promise<azure-batch.ComputeNodeListResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            <span data-ttu-id="51228-135">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="51228-135">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-batch.ComputeNodeListResult>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.listWithHttpOperationResponse
    name: 'listWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listWithHttpOperationResponse(poolId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-136">L'ID del Pool da cui desidera elencare i nodi di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-136">The ID of the Pool from which you want to list Compute Nodes.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-batch.ComputeNodeListResult>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.reboot
    name: 'reboot(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reboot(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-137">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-137">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-138">L'ID del nodo di calcolo che si desidera riavviare.</span><span class="sxs-lookup"><span data-stu-id="51228-138">The ID of the Compute Node that you want to restart.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.reboot_2
    name: 'reboot(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reboot(poolId: string, nodeId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.reboot_1
    name: 'reboot(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reboot(poolId: string, nodeId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.rebootWithHttpOperationResponse
    name: 'rebootWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rebootWithHttpOperationResponse(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-139">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-139">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-140">L'ID del nodo di calcolo che si desidera riavviare.</span><span class="sxs-lookup"><span data-stu-id="51228-140">The ID of the Compute Node that you want to restart.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.reimage
    name: 'reimage(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reimage(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-141">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-141">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-142">L'ID del nodo di calcolo che si desidera riavviare.</span><span class="sxs-lookup"><span data-stu-id="51228-142">The ID of the Compute Node that you want to restart.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.reimage_2
    name: 'reimage(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reimage(poolId: string, nodeId: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.reimage_1
    name: 'reimage(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reimage(poolId: string, nodeId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.reimageWithHttpOperationResponse
    name: 'reimageWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reimageWithHttpOperationResponse(poolId: string, nodeId: string, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-143">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-143">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-144">L'ID del nodo di calcolo che si desidera riavviare.</span><span class="sxs-lookup"><span data-stu-id="51228-144">The ID of the Compute Node that you want to restart.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.updateUser
    name: 'updateUser(string, string, string, NodeUpdateUserParameter, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateUser(poolId: string, nodeId: string, userName: string, nodeUpdateUserParameter: NodeUpdateUserParameter, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-145">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-145">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-146">L'ID del computer in cui si desidera aggiornare un Account utente.</span><span class="sxs-lookup"><span data-stu-id="51228-146">The ID of the machine on which you want to update a user Account.</span></span>
        - id: userName
          type:
            - string
          description: |
            <span data-ttu-id="51228-147">Il nome dell'utente Account da aggiornare.</span><span class="sxs-lookup"><span data-stu-id="51228-147">The name of the user Account to update.</span></span>
        - id: nodeUpdateUserParameter
          type:
            - azure-batch.NodeUpdateUserParameter
          description: |
            <span data-ttu-id="51228-148">I parametri per la richiesta.</span><span class="sxs-lookup"><span data-stu-id="51228-148">The parameters for the request.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.updateUser_2
    name: 'updateUser(string, string, string, NodeUpdateUserParameter, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateUser(poolId: string, nodeId: string, userName: string, nodeUpdateUserParameter: NodeUpdateUserParameter, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: userName
          type:
            - string
          description: ''
        - id: nodeUpdateUserParameter
          type:
            - azure-batch.NodeUpdateUserParameter
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.updateUser_1
    name: 'updateUser(string, string, string, NodeUpdateUserParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateUser(poolId: string, nodeId: string, userName: string, nodeUpdateUserParameter: NodeUpdateUserParameter, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: userName
          type:
            - string
          description: ''
        - id: nodeUpdateUserParameter
          type:
            - azure-batch.NodeUpdateUserParameter
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.updateUserWithHttpOperationResponse
    name: 'updateUserWithHttpOperationResponse(string, string, string, NodeUpdateUserParameter, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateUserWithHttpOperationResponse(poolId: string, nodeId: string, userName: string, nodeUpdateUserParameter: NodeUpdateUserParameter, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-149">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-149">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-150">L'ID del computer in cui si desidera aggiornare un Account utente.</span><span class="sxs-lookup"><span data-stu-id="51228-150">The ID of the machine on which you want to update a user Account.</span></span>
        - id: userName
          type:
            - string
          description: |
            <span data-ttu-id="51228-151">Il nome dell'utente Account da aggiornare.</span><span class="sxs-lookup"><span data-stu-id="51228-151">The name of the user Account to update.</span></span>
        - id: nodeUpdateUserParameter
          type:
            - azure-batch.NodeUpdateUserParameter
          description: |
            <span data-ttu-id="51228-152">I parametri per la richiesta.</span><span class="sxs-lookup"><span data-stu-id="51228-152">The parameters for the request.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.uploadBatchServiceLogs
    name: 'uploadBatchServiceLogs(string, string, UploadBatchServiceLogsConfiguration, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadBatchServiceLogs(poolId: string, nodeId: string, uploadBatchServiceLogsConfiguration: UploadBatchServiceLogsConfiguration, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-153">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-153">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-154">L'ID del nodo di calcolo dal quale si desidera caricare i file di log del servizio Azure Batch.</span><span class="sxs-lookup"><span data-stu-id="51228-154">The ID of the Compute Node from which you want to upload the Azure Batch service log files.</span></span>
        - id: uploadBatchServiceLogsConfiguration
          type:
            - azure-batch.UploadBatchServiceLogsConfiguration
          description: |
            <span data-ttu-id="51228-155">I file di log del servizio Azure Batch caricare la configurazione.</span><span class="sxs-lookup"><span data-stu-id="51228-155">The Azure Batch service log files upload configuration.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-batch.UploadBatchServiceLogsResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.uploadBatchServiceLogs_2
    name: 'uploadBatchServiceLogs(string, string, UploadBatchServiceLogsConfiguration, Object, ServiceCallback<UploadBatchServiceLogsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadBatchServiceLogs(poolId: string, nodeId: string, uploadBatchServiceLogsConfiguration: UploadBatchServiceLogsConfiguration, options: Object, callback: ServiceCallback<UploadBatchServiceLogsResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: uploadBatchServiceLogsConfiguration
          type:
            - azure-batch.UploadBatchServiceLogsConfiguration
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-batch.UploadBatchServiceLogsResult>
          description: ''
      return:
        type:
          - Promise<azure-batch.UploadBatchServiceLogsResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.uploadBatchServiceLogs_1
    name: 'uploadBatchServiceLogs(string, string, UploadBatchServiceLogsConfiguration, ServiceCallback<UploadBatchServiceLogsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadBatchServiceLogs(poolId: string, nodeId: string, uploadBatchServiceLogsConfiguration: UploadBatchServiceLogsConfiguration, callback: ServiceCallback<UploadBatchServiceLogsResult>)'
      parameters:
        - id: poolId
          type:
            - string
          description: ''
        - id: nodeId
          type:
            - string
          description: ''
        - id: uploadBatchServiceLogsConfiguration
          type:
            - azure-batch.UploadBatchServiceLogsConfiguration
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-batch.UploadBatchServiceLogsResult>
          description: ''
      return:
        type:
          - Promise<azure-batch.UploadBatchServiceLogsResult>
    package: azure-batch
  - uid: azure-batch.ComputeNodeOperations.uploadBatchServiceLogsWithHttpOperationResponse
    name: 'uploadBatchServiceLogsWithHttpOperationResponse(string, string, UploadBatchServiceLogsConfiguration, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadBatchServiceLogsWithHttpOperationResponse(poolId: string, nodeId: string, uploadBatchServiceLogsConfiguration: UploadBatchServiceLogsConfiguration, options?: Object)'
      parameters:
        - id: poolId
          type:
            - string
          description: |
            <span data-ttu-id="51228-156">L'ID del Pool che contiene il nodo di calcolo.</span><span class="sxs-lookup"><span data-stu-id="51228-156">The ID of the Pool that contains the Compute Node.</span></span>
        - id: nodeId
          type:
            - string
          description: |
            <span data-ttu-id="51228-157">L'ID del nodo di calcolo dal quale si desidera caricare i file di log del servizio Azure Batch.</span><span class="sxs-lookup"><span data-stu-id="51228-157">The ID of the Compute Node from which you want to upload the Azure Batch service log files.</span></span>
        - id: uploadBatchServiceLogsConfiguration
          type:
            - azure-batch.UploadBatchServiceLogsConfiguration
          description: |
            <span data-ttu-id="51228-158">I file di log del servizio Azure Batch caricare la configurazione.</span><span class="sxs-lookup"><span data-stu-id="51228-158">The Azure Batch service log files upload configuration.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-batch.UploadBatchServiceLogsResult>>
    package: azure-batch
references:
  - uid: azure-batch.ComputeNodeUser
    name: ComputeNodeUser
    spec.typeScript:
      - name: ComputeNodeUser
        fullName: ComputeNodeUser
        uid: azure-batch.ComputeNodeUser
  - uid: Promise<azure-batch.ComputeNode>
    name: ComputeNode>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ComputeNode
        fullName: ComputeNode
        uid: azure-batch.ComputeNode
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-batch.ComputeNode>
    name: ComputeNode>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComputeNode
        fullName: ComputeNode
        uid: azure-batch.ComputeNode
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-batch.ComputeNodeGetRemoteLoginSettingsResult>
    name: ComputeNodeGetRemoteLoginSettingsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ComputeNodeGetRemoteLoginSettingsResult
        fullName: ComputeNodeGetRemoteLoginSettingsResult
        uid: azure-batch.ComputeNodeGetRemoteLoginSettingsResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-batch.ComputeNodeGetRemoteLoginSettingsResult>
    name: ComputeNodeGetRemoteLoginSettingsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComputeNodeGetRemoteLoginSettingsResult
        fullName: ComputeNodeGetRemoteLoginSettingsResult
        uid: azure-batch.ComputeNodeGetRemoteLoginSettingsResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-batch.ComputeNodeGetRemoteLoginSettingsResult>>
    name: ComputeNodeGetRemoteLoginSettingsResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ComputeNodeGetRemoteLoginSettingsResult
        fullName: ComputeNodeGetRemoteLoginSettingsResult
        uid: azure-batch.ComputeNodeGetRemoteLoginSettingsResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-batch.ComputeNode>>
    name: ComputeNode>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ComputeNode
        fullName: ComputeNode
        uid: azure-batch.ComputeNode
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-batch.ComputeNodeListResult>
    name: ComputeNodeListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ComputeNodeListResult
        fullName: ComputeNodeListResult
        uid: azure-batch.ComputeNodeListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-batch.ComputeNodeListResult>
    name: ComputeNodeListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComputeNodeListResult
        fullName: ComputeNodeListResult
        uid: azure-batch.ComputeNodeListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-batch.ComputeNodeListResult>>
    name: ComputeNodeListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ComputeNodeListResult
        fullName: ComputeNodeListResult
        uid: azure-batch.ComputeNodeListResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-batch.NodeUpdateUserParameter
    name: NodeUpdateUserParameter
    spec.typeScript:
      - name: NodeUpdateUserParameter
        fullName: NodeUpdateUserParameter
        uid: azure-batch.NodeUpdateUserParameter
  - uid: azure-batch.UploadBatchServiceLogsConfiguration
    name: UploadBatchServiceLogsConfiguration
    spec.typeScript:
      - name: UploadBatchServiceLogsConfiguration
        fullName: UploadBatchServiceLogsConfiguration
        uid: azure-batch.UploadBatchServiceLogsConfiguration
  - uid: Promise<azure-batch.UploadBatchServiceLogsResult>
    name: UploadBatchServiceLogsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UploadBatchServiceLogsResult
        fullName: UploadBatchServiceLogsResult
        uid: azure-batch.UploadBatchServiceLogsResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-batch.UploadBatchServiceLogsResult>
    name: UploadBatchServiceLogsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UploadBatchServiceLogsResult
        fullName: UploadBatchServiceLogsResult
        uid: azure-batch.UploadBatchServiceLogsResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-batch.UploadBatchServiceLogsResult>>
    name: UploadBatchServiceLogsResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: UploadBatchServiceLogsResult
        fullName: UploadBatchServiceLogsResult
        uid: azure-batch.UploadBatchServiceLogsResult
      - name: '>>'
        fullName: '>>'