### YamlMime:UniversalReference
ms.openlocfilehash: 70f7fdced044f28d0c42ea199dc464034747e39c
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/12/2018
ms.locfileid: "40069481"
items:
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  fullName: ModuleClient
  children:
  - azure-iot-device.ModuleClient.close
  - azure-iot-device.ModuleClient.fromAuthenticationProvider
  - azure-iot-device.ModuleClient.fromConnectionString
  - azure-iot-device.ModuleClient.fromEnvironment
  - azure-iot-device.ModuleClient.fromSharedAccessSignature
  - azure-iot-device.ModuleClient.invokeMethod
  - azure-iot-device.ModuleClient.invokeMethod_1
  - azure-iot-device.ModuleClient.onMethod
  - azure-iot-device.ModuleClient.sendOutputEvent
  - azure-iot-device.ModuleClient.sendOutputEventBatch
  - azure-iot-device.ModuleClient.setOptions
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="0c0f7-101">Client del dispositivo IoT Hub consente di connettere un dispositivo con un hub IoT di Azure.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-101">IoT Hub device client used to connect a device with an Azure IoT hub.</span></span>

    <span data-ttu-id="0c0f7-102">Gli utenti di SDK devono chiamare uno dei metodi factory, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) oppure [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) per creare un client del dispositivo IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-102">Users of the SDK should call one of the factory methods, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) to create an IoT Hub device client.</span></span>
  extends:
    name: InternalClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="0c0f7-103">Chiude la connessione di trasporto ed Elimina le risorse del cliente.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-103">Closes the transport connection and destroys the client resources.</span></span>

    <span data-ttu-id="0c0f7-104">*Nota: Dopo aver chiamato questo metodo il ModuleClient oggetto non può essere riutilizzato.*</span><span class="sxs-lookup"><span data-stu-id="0c0f7-104">*Note: After calling this method the ModuleClient object cannot be reused.*</span></span>
  syntax:
    content: 'function close(closeCallback?: (err?: Error, result?: Disconnected) => void)'
    parameters:
    - id: closeCallback
      type:
      - '(err?: Error, result?: Disconnected) => void'
      description: >
        <span data-ttu-id="0c0f7-105">Funzione da chiamare dopo il trasporto è disconnesso e il client è chiuso.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-105">Function to call once the transport is disconnected and the client closed.</span></span>
      optional: true
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromAuthenticationProvider
  name: fromAuthenticationProvider
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0c0f7-106">Crea un client modulo dell'IoT Hub dal metodo di autenticazione specificato e usando il tipo di trasporto specificato.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-106">Creates an IoT Hub module client from the given authentication method and using the given transport type.</span></span>
  syntax:
    content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
    parameters:
    - id: authenticationProvider
      type:
      - AuthenticationProvider
      description: <span data-ttu-id="0c0f7-107">Oggetto utilizzato per ottenere i parametri di autenticazione per l'hub IoT.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-107">Object used to obtain the authentication parameters for the IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="0c0f7-108">Trasporto di protocollo utilizzato per connettersi all'hub IoT.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-108">Transport protocol used to connect to IoT hub.</span></span>
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0c0f7-109">Crea un client del dispositivo IoT Hub dalla stringa di connessione specificata utilizzando il tipo di trasporto specificato.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-109">Creates an IoT Hub device client from the given connection string using the given transport type.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="0c0f7-110">Una stringa di connessione che incapsula le autorizzazioni di "connessione di dispositivi" in un hub IoT.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-110">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="0c0f7-111">Un costruttore di trasporto.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-111">A transport constructor.</span></span>
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment
  name: fromEnvironment
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="0c0f7-112">Crea un client modulo dell'IoT Hub usando le informazioni di configurazione dall'ambiente.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-112">Creates an IoT Hub module client by using configuration information from the environment.</span></span>

    <span data-ttu-id="0c0f7-113">Se una variabile di ambiente denominata `EdgeHubConnectionString` oppure `IotHubConnectionString` esiste, tale valore viene utilizzato e il comportamento è identico alla chiamata al metodo `fromConnectionString` passando che in.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-113">If an environment variable called `EdgeHubConnectionString` or `IotHubConnectionString` exists, then that value is used and behavior is identical to calling `fromConnectionString` passing that in.</span></span> <span data-ttu-id="0c0f7-114">Se tali variabili di ambiente non sono disponibili le variabili seguenti devono essere definite:</span><span class="sxs-lookup"><span data-stu-id="0c0f7-114">If those environment variables do not exist then the following variables MUST be defined:</span></span>

        - <span data-ttu-id="0c0f7-115">URI IOTEDGE_WORKLOADURI per carico di lavoro dell'iotedged API</span><span class="sxs-lookup"><span data-stu-id="0c0f7-115">IOTEDGE_WORKLOADURI          URI for iotedged's workload API</span></span>
        - <span data-ttu-id="0c0f7-116">Identificatore dispositivo IOTEDGE_DEVICEID</span><span class="sxs-lookup"><span data-stu-id="0c0f7-116">IOTEDGE_DEVICEID             Device identifier</span></span>
        - <span data-ttu-id="0c0f7-117">Identificatore del modulo IOTEDGE_MODULEID</span><span class="sxs-lookup"><span data-stu-id="0c0f7-117">IOTEDGE_MODULEID             Module identifier</span></span>
        - <span data-ttu-id="0c0f7-118">Identificatore del modulo di IOTEDGE_MODULEGENERATIONID generazione</span><span class="sxs-lookup"><span data-stu-id="0c0f7-118">IOTEDGE_MODULEGENERATIONID   Module generation identifier</span></span>
        - <span data-ttu-id="0c0f7-119">Nome host dell'IoT Hub IOTEDGE_IOTHUBHOSTNAME</span><span class="sxs-lookup"><span data-stu-id="0c0f7-119">IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name</span></span>
        - <span data-ttu-id="0c0f7-120">Schema di autenticazione IOTEDGE_AUTHSCHEME usare; deve essere "sasToken"</span><span class="sxs-lookup"><span data-stu-id="0c0f7-120">IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"</span></span>
  syntax:
    content: 'static function fromEnvironment(transportCtor: any, callback: (err?: Error, client?: ModuleClient) => void)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: <span data-ttu-id="0c0f7-121">Trasporto di protocollo utilizzato per connettersi all'hub IoT.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-121">Transport protocol used to connect to IoT hub.</span></span>
    - id: callback
      type:
      - '(err?: Error, client?: ModuleClient) => void'
      description: >
        <span data-ttu-id="0c0f7-122">Callback da richiamare quando il ModuleClient è stata constructured o se si verifica un errore durante la creazione del client.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-122">Callback to invoke when the ModuleClient has been constructured or if an error occurs while creating the client.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0c0f7-123">Crea un client modulo dell'IoT Hub dalla firma di accesso condiviso specificata utilizzando il tipo di trasporto specificato.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-123">Creates an IoT Hub module client from the given shared access signature using the given transport type.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="0c0f7-124">Una firma di accesso condiviso che incapsula le autorizzazioni di "connessione di dispositivi" in un hub IoT.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-124">A shared access signature which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod
  name: invokeMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0c0f7-125">Richiama un metodo in un dispositivo downstream o un altro modulo sullo stesso dispositivo Edge.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-125">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="0c0f7-126">Si noti che questa funzionalità funziona solo quando il modulo è in esecuzione come parte di un dispositivo perimetrale.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-126">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams, callback: MethodCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="0c0f7-127">Identificatore del dispositivo di destinazione</span><span class="sxs-lookup"><span data-stu-id="0c0f7-127">target device identifier</span></span>
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: <span data-ttu-id="0c0f7-128">parametri della chiamata al metodo diretto</span><span class="sxs-lookup"><span data-stu-id="0c0f7-128">parameters of the direct method call</span></span>
    - id: callback
      type:
      - azure-iot-device.MethodCallback
      description: >
        <span data-ttu-id="0c0f7-129">callback che verrà richiamato con un oggetto di errore o il risultato della chiamata al metodo.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-129">callback that will be invoked either with an Error object or the result of the method call.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_1
  name: invokeMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0c0f7-130">Richiama un metodo in un dispositivo downstream o un altro modulo sullo stesso dispositivo Edge.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-130">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="0c0f7-131">Si noti che questa funzionalità funziona solo quando il modulo è in esecuzione come parte di un dispositivo perimetrale.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-131">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams, callback: MethodCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    - id: callback
      type:
      - azure-iot-device.MethodCallback
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.onMethod
  name: onMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0c0f7-132">Registra un callback per un metodo denominato `methodName`.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-132">Registers a callback for a method named `methodName`.</span></span>
  syntax:
    content: 'function onMethod(methodName: string, callback: (request: DeviceMethodRequest, response: DeviceMethodResponse) => void)'
    parameters:
    - id: methodName
      type:
      - string
      description: <span data-ttu-id="0c0f7-133">Nome del metodo che verrà gestito dal callback</span><span class="sxs-lookup"><span data-stu-id="0c0f7-133">Name of the method that will be handled by the callback</span></span>
    - id: callback
      type:
      - '(request: DeviceMethodRequest, response: DeviceMethodResponse) => void'
      description: >
        <span data-ttu-id="0c0f7-134">Funzione che deve essere chiamato ogni volta che una richiesta del metodo per il metodo chiamato `methodName` viene ricevuto.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-134">Function that shall be called whenever a method request for the method called `methodName` is received.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent
  name: sendOutputEvent
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0c0f7-135">Invia un evento all'output del modulo specificato</span><span class="sxs-lookup"><span data-stu-id="0c0f7-135">Sends an event to the given module output</span></span>
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message, callback: (err?: Error, result?: MessageEnqueued) => void)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="0c0f7-136">Nome dell'output per inviare l'evento a</span><span class="sxs-lookup"><span data-stu-id="0c0f7-136">Name of the output to send the event to</span></span>
    - id: message
      type:
      - Message
      description: <span data-ttu-id="0c0f7-137">Messaggio da inviare all'output specificato</span><span class="sxs-lookup"><span data-stu-id="0c0f7-137">Message to send to the given output</span></span>
    - id: callback
      type:
      - '(err?: Error, result?: MessageEnqueued) => void'
      description: >
        <span data-ttu-id="0c0f7-138">Funzione da chiamare quando l'operazione è stata accodata.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-138">Function to call when the operation has been queued.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch
  name: sendOutputEventBatch
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0c0f7-139">Invia una serie di eventi all'output del modulo specificato</span><span class="sxs-lookup"><span data-stu-id="0c0f7-139">Sends an array of events to the given module output</span></span>
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[], callback: (err?: Error, result?: MessageEnqueued) => void)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="0c0f7-140">Nome dell'output per inviare gli eventi a</span><span class="sxs-lookup"><span data-stu-id="0c0f7-140">Name of the output to send the events to</span></span>
    - id: messages
      type:
      - Message[]
      description: ''
    - id: callback
      type:
      - '(err?: Error, result?: MessageEnqueued) => void'
      description: >
        <span data-ttu-id="0c0f7-141">Funzione da chiamare quando le operazioni sono state accodate.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-141">Function to call when the operations have been queued.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions
  name: setOptions
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0c0f7-142">Passa le opzioni per il `ModuleClient` oggetto che può essere usato per configurare il trasporto.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-142">Passes options to the `ModuleClient` object that can be used to configure the transport.</span></span>
  syntax:
    content: 'function setOptions(options: DeviceClientOptions, done?: (err?: Error, result?: TransportConfigured) => void)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: <span data-ttu-id="0c0f7-143">Oggetto <xref:DeviceClientOptions> oggetto.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-143">A <xref:DeviceClientOptions> object.</span></span>
    - id: done
      type:
      - '(err?: Error, result?: TransportConfigured) => void'
      description: >
        <span data-ttu-id="0c0f7-144">Callback da chiamare dopo che sono state impostate le opzioni.</span><span class="sxs-lookup"><span data-stu-id="0c0f7-144">The callback to call once the options have been set.</span></span>
      optional: true
  package: azure-iot-device
references:
- uid: azure-iot-device.MethodParams
  spec.typeScript:
  - name: MethodParams
    fullName: MethodParams
    uid: azure-iot-device.MethodParams
- uid: azure-iot-device.MethodCallback
  spec.typeScript:
  - name: MethodCallback
    fullName: MethodCallback
    uid: azure-iot-device.MethodCallback
- uid: azure-iot-device.DeviceClientOptions
  spec.typeScript:
  - name: DeviceClientOptions
    fullName: DeviceClientOptions
    uid: azure-iot-device.DeviceClientOptions
- uid: azure-iot-device.ModuleClient
  spec.typeScript:
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
