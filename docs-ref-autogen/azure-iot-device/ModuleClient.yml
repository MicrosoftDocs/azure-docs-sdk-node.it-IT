### YamlMime:UniversalReference
items:
  - uid: azure-iot-device.ModuleClient
    name: ModuleClient
    fullName: ModuleClient
    children:
      - azure-iot-device.ModuleClient.abandon_1
      - azure-iot-device.ModuleClient.abandon
      - azure-iot-device.ModuleClient.close_1
      - azure-iot-device.ModuleClient.close
      - azure-iot-device.ModuleClient.complete_1
      - azure-iot-device.ModuleClient.complete
      - azure-iot-device.ModuleClient.fromAuthenticationProvider
      - azure-iot-device.ModuleClient.fromConnectionString
      - azure-iot-device.ModuleClient.fromEnvironment_1
      - azure-iot-device.ModuleClient.fromEnvironment
      - azure-iot-device.ModuleClient.fromSharedAccessSignature
      - azure-iot-device.ModuleClient.getTwin_1
      - azure-iot-device.ModuleClient.getTwin
      - azure-iot-device.ModuleClient.invokeMethod_2
      - azure-iot-device.ModuleClient.invokeMethod
      - azure-iot-device.ModuleClient.invokeMethod_3
      - azure-iot-device.ModuleClient.invokeMethod_1
      - azure-iot-device.ModuleClient.onMethod
      - azure-iot-device.ModuleClient.open_1
      - azure-iot-device.ModuleClient.open
      - azure-iot-device.ModuleClient.reject_1
      - azure-iot-device.ModuleClient.reject
      - azure-iot-device.ModuleClient.sendEvent_1
      - azure-iot-device.ModuleClient.sendEvent
      - azure-iot-device.ModuleClient.sendEventBatch_1
      - azure-iot-device.ModuleClient.sendEventBatch
      - azure-iot-device.ModuleClient.sendOutputEvent_1
      - azure-iot-device.ModuleClient.sendOutputEvent
      - azure-iot-device.ModuleClient.sendOutputEventBatch_1
      - azure-iot-device.ModuleClient.sendOutputEventBatch
      - azure-iot-device.ModuleClient.setOptions_1
      - azure-iot-device.ModuleClient.setOptions
      - azure-iot-device.ModuleClient.setRetryPolicy
      - azure-iot-device.ModuleClient.setTransportOptions_1
      - azure-iot-device.ModuleClient.setTransportOptions
      - azure-iot-device.ModuleClient.updateSharedAccessSignature
    langs:
      - typeScript
    type: class
    summary: |
      <span data-ttu-id="2b626-101">Client del dispositivo IoT Hub consente di connettere un dispositivo con un hub IoT di Azure.</span><span class="sxs-lookup"><span data-stu-id="2b626-101">IoT Hub device client used to connect a device with an Azure IoT hub.</span></span>
      <span data-ttu-id="2b626-102">Gli utenti di SDK devono chiamare uno dei metodi factory, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) oppure [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) per creare un client del dispositivo IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="2b626-102">Users of the SDK should call one of the factory methods, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) to create an IoT Hub device client.</span></span>
    extends:
      name: InternalClient
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.abandon_1
    name: abandon(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageAbandoned>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.abandon
    name: 'abandon(Message, Callback<MessageAbandoned>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message, abandonCallback: Callback<MessageAbandoned>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: abandonCallback
          type:
            - Callback<MessageAbandoned>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.close_1
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="2b626-103">Chiude la connessione di trasporto ed Elimina le risorse del cliente.</span><span class="sxs-lookup"><span data-stu-id="2b626-103">Closes the transport connection and destroys the client resources.</span></span>
      <span data-ttu-id="2b626-104">*Nota: Dopo aver chiamato questo metodo il ModuleClient oggetto non può essere riutilizzato.*</span><span class="sxs-lookup"><span data-stu-id="2b626-104">*Note: After calling this method the ModuleClient object cannot be reused.*</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<Disconnected>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.close
    name: close(Callback<Disconnected>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="2b626-105">Chiude la connessione di trasporto ed Elimina le risorse del cliente.</span><span class="sxs-lookup"><span data-stu-id="2b626-105">Closes the transport connection and destroys the client resources.</span></span>
      <span data-ttu-id="2b626-106">*Nota: Dopo aver chiamato questo metodo il ModuleClient oggetto non può essere riutilizzato.*</span><span class="sxs-lookup"><span data-stu-id="2b626-106">*Note: After calling this method the ModuleClient object cannot be reused.*</span></span>
    syntax:
      content: 'function close(closeCallback: Callback<Disconnected>)'
      parameters:
        - id: closeCallback
          type:
            - Callback<Disconnected>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.complete_1
    name: complete(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageCompleted>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.complete
    name: 'complete(Message, Callback<MessageCompleted>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message, completeCallback: Callback<MessageCompleted>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: completeCallback
          type:
            - Callback<MessageCompleted>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.fromAuthenticationProvider
    name: 'fromAuthenticationProvider(AuthenticationProvider, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-107">Crea un client modulo dell'IoT Hub dal metodo di autenticazione specificato e usando il tipo di trasporto specificato.</span><span class="sxs-lookup"><span data-stu-id="2b626-107">Creates an IoT Hub module client from the given authentication method and using the given transport type.</span></span>
    syntax:
      content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
      parameters:
        - id: authenticationProvider
          type:
            - AuthenticationProvider
          description: <span data-ttu-id="2b626-108">Oggetto utilizzato per ottenere i parametri di autenticazione per l'hub IoT.</span><span class="sxs-lookup"><span data-stu-id="2b626-108">Object used to obtain the authentication parameters for the IoT hub.</span></span>
        - id: transportCtor
          type:
            - any
          description: |
            <span data-ttu-id="2b626-109">Trasporto di protocollo utilizzato per connettersi all'hub IoT.</span><span class="sxs-lookup"><span data-stu-id="2b626-109">Transport protocol used to connect to IoT hub.</span></span>
      return:
        type:
          - azure-iot-device.ModuleClient
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.fromConnectionString
    name: 'fromConnectionString(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-110">Crea un client del dispositivo IoT Hub dalla stringa di connessione specificata utilizzando il tipo di trasporto specificato.</span><span class="sxs-lookup"><span data-stu-id="2b626-110">Creates an IoT Hub device client from the given connection string using the given transport type.</span></span>
    syntax:
      content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
      parameters:
        - id: connStr
          type:
            - string
          description: <span data-ttu-id="2b626-111">Una stringa di connessione che incapsula le autorizzazioni di "connessione di dispositivi" in un hub IoT.</span><span class="sxs-lookup"><span data-stu-id="2b626-111">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
        - id: transportCtor
          type:
            - any
          description: |
            <span data-ttu-id="2b626-112">Un costruttore di trasporto.</span><span class="sxs-lookup"><span data-stu-id="2b626-112">A transport constructor.</span></span>
      return:
        type:
          - azure-iot-device.ModuleClient
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.fromEnvironment_1
    name: fromEnvironment(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="2b626-113">Crea un client modulo dell'IoT Hub usando le informazioni di configurazione dall'ambiente.</span><span class="sxs-lookup"><span data-stu-id="2b626-113">Creates an IoT Hub module client by using configuration information from the environment.</span></span>
      <span data-ttu-id="2b626-114">Se una variabile di ambiente denominata `EdgeHubConnectionString` oppure `IotHubConnectionString` esiste, tale valore viene utilizzato e il comportamento è identico alla chiamata al metodo `fromConnectionString` passando che in.</span><span class="sxs-lookup"><span data-stu-id="2b626-114">If an environment variable called `EdgeHubConnectionString` or `IotHubConnectionString` exists, then that value is used and behavior is identical to calling `fromConnectionString` passing that in.</span></span> <span data-ttu-id="2b626-115">Se tali variabili di ambiente non sono disponibili le variabili seguenti devono essere definite:</span><span class="sxs-lookup"><span data-stu-id="2b626-115">If those environment variables do not exist then the following variables MUST be defined:</span></span>

          - <span data-ttu-id="2b626-116">URI IOTEDGE_WORKLOADURI per carico di lavoro dell'iotedged API</span><span class="sxs-lookup"><span data-stu-id="2b626-116">IOTEDGE_WORKLOADURI          URI for iotedged's workload API</span></span>
          - <span data-ttu-id="2b626-117">Identificatore dispositivo IOTEDGE_DEVICEID</span><span class="sxs-lookup"><span data-stu-id="2b626-117">IOTEDGE_DEVICEID             Device identifier</span></span>
          - <span data-ttu-id="2b626-118">Identificatore del modulo IOTEDGE_MODULEID</span><span class="sxs-lookup"><span data-stu-id="2b626-118">IOTEDGE_MODULEID             Module identifier</span></span>
          - <span data-ttu-id="2b626-119">Identificatore del modulo di IOTEDGE_MODULEGENERATIONID generazione</span><span class="sxs-lookup"><span data-stu-id="2b626-119">IOTEDGE_MODULEGENERATIONID   Module generation identifier</span></span>
          - <span data-ttu-id="2b626-120">Nome host dell'IoT Hub IOTEDGE_IOTHUBHOSTNAME</span><span class="sxs-lookup"><span data-stu-id="2b626-120">IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name</span></span>
          - <span data-ttu-id="2b626-121">Schema di autenticazione IOTEDGE_AUTHSCHEME usare; deve essere "sasToken"</span><span class="sxs-lookup"><span data-stu-id="2b626-121">IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"</span></span>
    syntax:
      content: 'static function fromEnvironment(transportCtor: any)'
      parameters:
        - id: transportCtor
          type:
            - any
          description: ''
      return:
        type:
          - Promise<azure-iot-device.ModuleClient>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.fromEnvironment
    name: 'fromEnvironment(any, Callback<ModuleClient>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="2b626-122">Crea un client modulo dell'IoT Hub usando le informazioni di configurazione dall'ambiente.</span><span class="sxs-lookup"><span data-stu-id="2b626-122">Creates an IoT Hub module client by using configuration information from the environment.</span></span>
      <span data-ttu-id="2b626-123">Se una variabile di ambiente denominata `EdgeHubConnectionString` oppure `IotHubConnectionString` esiste, tale valore viene utilizzato e il comportamento è identico alla chiamata al metodo `fromConnectionString` passando che in.</span><span class="sxs-lookup"><span data-stu-id="2b626-123">If an environment variable called `EdgeHubConnectionString` or `IotHubConnectionString` exists, then that value is used and behavior is identical to calling `fromConnectionString` passing that in.</span></span> <span data-ttu-id="2b626-124">Se tali variabili di ambiente non sono disponibili le variabili seguenti devono essere definite:</span><span class="sxs-lookup"><span data-stu-id="2b626-124">If those environment variables do not exist then the following variables MUST be defined:</span></span>

          - <span data-ttu-id="2b626-125">URI IOTEDGE_WORKLOADURI per carico di lavoro dell'iotedged API</span><span class="sxs-lookup"><span data-stu-id="2b626-125">IOTEDGE_WORKLOADURI          URI for iotedged's workload API</span></span>
          - <span data-ttu-id="2b626-126">Identificatore dispositivo IOTEDGE_DEVICEID</span><span class="sxs-lookup"><span data-stu-id="2b626-126">IOTEDGE_DEVICEID             Device identifier</span></span>
          - <span data-ttu-id="2b626-127">Identificatore del modulo IOTEDGE_MODULEID</span><span class="sxs-lookup"><span data-stu-id="2b626-127">IOTEDGE_MODULEID             Module identifier</span></span>
          - <span data-ttu-id="2b626-128">Identificatore del modulo di IOTEDGE_MODULEGENERATIONID generazione</span><span class="sxs-lookup"><span data-stu-id="2b626-128">IOTEDGE_MODULEGENERATIONID   Module generation identifier</span></span>
          - <span data-ttu-id="2b626-129">Nome host dell'IoT Hub IOTEDGE_IOTHUBHOSTNAME</span><span class="sxs-lookup"><span data-stu-id="2b626-129">IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name</span></span>
          - <span data-ttu-id="2b626-130">Schema di autenticazione IOTEDGE_AUTHSCHEME usare; deve essere "sasToken"</span><span class="sxs-lookup"><span data-stu-id="2b626-130">IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"</span></span>
    syntax:
      content: 'static function fromEnvironment(transportCtor: any, callback: Callback<ModuleClient>)'
      parameters:
        - id: transportCtor
          type:
            - any
          description: <span data-ttu-id="2b626-131">Trasporto di protocollo utilizzato per connettersi all'hub IoT.</span><span class="sxs-lookup"><span data-stu-id="2b626-131">Transport protocol used to connect to IoT hub.</span></span>
        - id: callback
          type:
            - Callback<azure-iot-device.ModuleClient>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.fromSharedAccessSignature
    name: 'fromSharedAccessSignature(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-132">Crea un client modulo dell'IoT Hub dalla firma di accesso condiviso specificata utilizzando il tipo di trasporto specificato.</span><span class="sxs-lookup"><span data-stu-id="2b626-132">Creates an IoT Hub module client from the given shared access signature using the given transport type.</span></span>
    syntax:
      content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: <span data-ttu-id="2b626-133">Una firma di accesso condiviso che incapsula le autorizzazioni di "connessione di dispositivi" in un hub IoT.</span><span class="sxs-lookup"><span data-stu-id="2b626-133">A shared access signature which encapsulates "device connect" permissions on an IoT hub.</span></span>
        - id: transportCtor
          type:
            - any
          description: ''
      return:
        type:
          - azure-iot-device.ModuleClient
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.getTwin_1
    name: getTwin()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getTwin()
      parameters: []
      return:
        type:
          - Promise<azure-iot-device.Twin>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.getTwin
    name: getTwin(Callback<Twin>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTwin(done: Callback<Twin>)'
      parameters:
        - id: done
          type:
            - Callback<azure-iot-device.Twin>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.invokeMethod_2
    name: 'invokeMethod(string, MethodParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-134">Richiama un metodo in un dispositivo downstream o un altro modulo sullo stesso dispositivo Edge.</span><span class="sxs-lookup"><span data-stu-id="2b626-134">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="2b626-135">Si noti che questa funzionalità funziona solo quando il modulo è in esecuzione come parte di un dispositivo perimetrale.</span><span class="sxs-lookup"><span data-stu-id="2b626-135">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
    syntax:
      content: 'function invokeMethod(deviceId: string, methodParams: MethodParams)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: methodParams
          type:
            - azure-iot-device.MethodParams
          description: ''
      return:
        type:
          - Promise<azure-iot-device.MethodResult>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.invokeMethod
    name: 'invokeMethod(string, MethodParams, Callback<MethodResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-136">Richiama un metodo in un dispositivo downstream o un altro modulo sullo stesso dispositivo Edge.</span><span class="sxs-lookup"><span data-stu-id="2b626-136">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="2b626-137">Si noti che questa funzionalità funziona solo quando il modulo è in esecuzione come parte di un dispositivo perimetrale.</span><span class="sxs-lookup"><span data-stu-id="2b626-137">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
    syntax:
      content: 'function invokeMethod(deviceId: string, methodParams: MethodParams, callback: Callback<MethodResult>)'
      parameters:
        - id: deviceId
          type:
            - string
          description: <span data-ttu-id="2b626-138">Identificatore del dispositivo di destinazione</span><span class="sxs-lookup"><span data-stu-id="2b626-138">target device identifier</span></span>
        - id: methodParams
          type:
            - azure-iot-device.MethodParams
          description: <span data-ttu-id="2b626-139">parametri della chiamata al metodo diretto</span><span class="sxs-lookup"><span data-stu-id="2b626-139">parameters of the direct method call</span></span>
        - id: callback
          type:
            - Callback<azure-iot-device.MethodResult>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.invokeMethod_3
    name: 'invokeMethod(string, string, MethodParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-140">Richiama un metodo in un dispositivo downstream o un altro modulo sullo stesso dispositivo Edge.</span><span class="sxs-lookup"><span data-stu-id="2b626-140">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="2b626-141">Si noti che questa funzionalità funziona solo quando il modulo è in esecuzione come parte di un dispositivo perimetrale.</span><span class="sxs-lookup"><span data-stu-id="2b626-141">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
    syntax:
      content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: moduleId
          type:
            - string
          description: ''
        - id: methodParams
          type:
            - azure-iot-device.MethodParams
          description: ''
      return:
        type:
          - Promise<azure-iot-device.MethodResult>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.invokeMethod_1
    name: 'invokeMethod(string, string, MethodParams, Callback<MethodResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-142">Richiama un metodo in un dispositivo downstream o un altro modulo sullo stesso dispositivo Edge.</span><span class="sxs-lookup"><span data-stu-id="2b626-142">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="2b626-143">Si noti che questa funzionalità funziona solo quando il modulo è in esecuzione come parte di un dispositivo perimetrale.</span><span class="sxs-lookup"><span data-stu-id="2b626-143">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
    syntax:
      content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams, callback: Callback<MethodResult>)'
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: moduleId
          type:
            - string
          description: ''
        - id: methodParams
          type:
            - azure-iot-device.MethodParams
          description: ''
        - id: callback
          type:
            - Callback<azure-iot-device.MethodResult>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.onMethod
    name: 'onMethod(string, DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-144">Registra un callback per un metodo denominato `methodName`.</span><span class="sxs-lookup"><span data-stu-id="2b626-144">Registers a callback for a method named `methodName`.</span></span>
    syntax:
      content: 'function onMethod(methodName: string, callback: DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)'
      parameters:
        - id: methodName
          type:
            - string
          description: <span data-ttu-id="2b626-145">Nome del metodo che verrà gestito dal callback</span><span class="sxs-lookup"><span data-stu-id="2b626-145">Name of the method that will be handled by the callback</span></span>
        - id: callback
          type:
            - 'DoubleValueCallback<azure-iot-device.DeviceMethodRequest, azure-iot-device.DeviceMethodResponse>'
          description: |
            <span data-ttu-id="2b626-146">Funzione che deve essere chiamato ogni volta che una richiesta del metodo per il metodo chiamato `methodName` viene ricevuto.</span><span class="sxs-lookup"><span data-stu-id="2b626-146">Function that shall be called whenever a method request for the method called `methodName` is received.</span></span>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.open_1
    name: open()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function open()
      parameters: []
      return:
        type:
          - Promise<Connected>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.open
    name: open(Callback<Connected>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function open(openCallback: Callback<Connected>)'
      parameters:
        - id: openCallback
          type:
            - Callback<Connected>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.reject_1
    name: reject(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageRejected>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.reject
    name: 'reject(Message, Callback<MessageRejected>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message, rejectCallback: Callback<MessageRejected>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: rejectCallback
          type:
            - Callback<MessageRejected>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.sendEvent_1
    name: sendEvent(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEvent(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.sendEvent
    name: 'sendEvent(Message, Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEvent(message: Message, sendEventCallback: Callback<MessageEnqueued>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: sendEventCallback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.sendEventBatch_1
    name: 'sendEventBatch(Message[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEventBatch(messages: Message[])'
      parameters:
        - id: messages
          type:
            - 'Message[]'
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.sendEventBatch
    name: 'sendEventBatch(Message[], Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEventBatch(messages: Message[], sendEventBatchCallback: Callback<MessageEnqueued>)'
      parameters:
        - id: messages
          type:
            - 'Message[]'
          description: ''
        - id: sendEventBatchCallback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.sendOutputEvent_1
    name: 'sendOutputEvent(string, Message)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-147">Invia un evento all'output del modulo specificato</span><span class="sxs-lookup"><span data-stu-id="2b626-147">Sends an event to the given module output</span></span>
    syntax:
      content: 'function sendOutputEvent(outputName: string, message: Message)'
      parameters:
        - id: outputName
          type:
            - string
          description: ''
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.sendOutputEvent
    name: 'sendOutputEvent(string, Message, Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-148">Invia un evento all'output del modulo specificato</span><span class="sxs-lookup"><span data-stu-id="2b626-148">Sends an event to the given module output</span></span>
    syntax:
      content: 'function sendOutputEvent(outputName: string, message: Message, callback: Callback<MessageEnqueued>)'
      parameters:
        - id: outputName
          type:
            - string
          description: <span data-ttu-id="2b626-149">Nome dell'output per inviare l'evento a</span><span class="sxs-lookup"><span data-stu-id="2b626-149">Name of the output to send the event to</span></span>
        - id: message
          type:
            - Message
          description: <span data-ttu-id="2b626-150">Messaggio da inviare all'output specificato</span><span class="sxs-lookup"><span data-stu-id="2b626-150">Message to send to the given output</span></span>
        - id: callback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.sendOutputEventBatch_1
    name: 'sendOutputEventBatch(string, Message[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-151">Invia una serie di eventi all'output del modulo specificato</span><span class="sxs-lookup"><span data-stu-id="2b626-151">Sends an array of events to the given module output</span></span>
    syntax:
      content: 'function sendOutputEventBatch(outputName: string, messages: Message[])'
      parameters:
        - id: outputName
          type:
            - string
          description: ''
        - id: messages
          type:
            - 'Message[]'
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.sendOutputEventBatch
    name: 'sendOutputEventBatch(string, Message[], Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-152">Invia una serie di eventi all'output del modulo specificato</span><span class="sxs-lookup"><span data-stu-id="2b626-152">Sends an array of events to the given module output</span></span>
    syntax:
      content: 'function sendOutputEventBatch(outputName: string, messages: Message[], callback: Callback<MessageEnqueued>)'
      parameters:
        - id: outputName
          type:
            - string
          description: <span data-ttu-id="2b626-153">Nome dell'output per inviare gli eventi a</span><span class="sxs-lookup"><span data-stu-id="2b626-153">Name of the output to send the events to</span></span>
        - id: messages
          type:
            - 'Message[]'
          description: ''
        - id: callback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.setOptions_1
    name: setOptions(DeviceClientOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-154">Passa le opzioni per il `ModuleClient` oggetto che può essere usato per configurare il trasporto.</span><span class="sxs-lookup"><span data-stu-id="2b626-154">Passes options to the `ModuleClient` object that can be used to configure the transport.</span></span>
    syntax:
      content: 'function setOptions(options: DeviceClientOptions)'
      parameters:
        - id: options
          type:
            - azure-iot-device.DeviceClientOptions
          description: ''
      return:
        type:
          - Promise<TransportConfigured>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.setOptions
    name: 'setOptions(DeviceClientOptions, Callback<TransportConfigured>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b626-155">Passa le opzioni per il `ModuleClient` oggetto che può essere usato per configurare il trasporto.</span><span class="sxs-lookup"><span data-stu-id="2b626-155">Passes options to the `ModuleClient` object that can be used to configure the transport.</span></span>
    syntax:
      content: 'function setOptions(options: DeviceClientOptions, done: Callback<TransportConfigured>)'
      parameters:
        - id: options
          type:
            - azure-iot-device.DeviceClientOptions
          description: '<span data-ttu-id="2b626-156">Oggetto <xref:DeviceClientOptions>.</span><span class="sxs-lookup"><span data-stu-id="2b626-156">A <xref:DeviceClientOptions> object.</span></span>'
        - id: done
          type:
            - Callback<TransportConfigured>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.setRetryPolicy
    name: setRetryPolicy(RetryPolicy)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2b626-157">Imposta i criteri di ripetizione dei tentativi utilizzato dal client in tutte le operazioni.</span><span class="sxs-lookup"><span data-stu-id="2b626-157">Sets the retry policy used by the client on all operations.</span></span> <span data-ttu-id="2b626-158">Il valore predefinito è [ExponentialBackoffWithJitter](xref:azure-iot-common.ExponentialBackoffWithJitter).</span><span class="sxs-lookup"><span data-stu-id="2b626-158">The default is [ExponentialBackoffWithJitter](xref:azure-iot-common.ExponentialBackoffWithJitter).</span></span>'
    syntax:
      content: 'function setRetryPolicy(policy: RetryPolicy)'
      parameters:
        - id: policy
          type:
            - RetryPolicy
          description: |
            <span data-ttu-id="2b626-159">I criteri di ripetizione dei tentativi che devono essere utilizzato per tutte le operazioni future.</span><span class="sxs-lookup"><span data-stu-id="2b626-159">The retry policy that should be used for all future operations.</span></span>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.setTransportOptions_1
    name: setTransportOptions(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTransportOptions(options: any)'
      parameters:
        - id: options
          type:
            - any
          description: ''
      return:
        type:
          - Promise<TransportConfigured>
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.setTransportOptions
    name: 'setTransportOptions(any, Callback<TransportConfigured>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTransportOptions(options: any, done: Callback<TransportConfigured>)'
      parameters:
        - id: options
          type:
            - any
          description: ''
        - id: done
          type:
            - Callback<TransportConfigured>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.ModuleClient.updateSharedAccessSignature
    name: 'updateSharedAccessSignature(string, Callback<SharedAccessSignatureUpdated>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateSharedAccessSignature(sharedAccessSignature: string, updateSasCallback?: Callback<SharedAccessSignatureUpdated>)'
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: ''
        - id: updateSasCallback
          type:
            - Callback<SharedAccessSignatureUpdated>
          description: ''
          optional: true
    package: azure-iot-device
references:
  - uid: Callback<azure-iot-device.Twin>
    name: Twin>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device.Twin
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iot-device.Twin>
    name: Twin>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device.Twin
      - name: '>'
        fullName: '>'
  - uid: azure-iot-device.MethodParams
    name: MethodParams
    spec.typeScript:
      - name: MethodParams
        fullName: MethodParams
        uid: azure-iot-device.MethodParams
  - uid: Callback<azure-iot-device.MethodResult>
    name: MethodResult>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: MethodResult
        fullName: MethodResult
        uid: azure-iot-device.MethodResult
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iot-device.MethodResult>
    name: MethodResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: MethodResult
        fullName: MethodResult
        uid: azure-iot-device.MethodResult
      - name: '>'
        fullName: '>'
  - uid: 'DoubleValueCallback<azure-iot-device.DeviceMethodRequest, azure-iot-device.DeviceMethodResponse>'
    name: DeviceMethodResponse>
    spec.typeScript:
      - name: DoubleValueCallback<
        fullName: DoubleValueCallback<
      - name: DeviceMethodRequest
        fullName: DeviceMethodRequest
        uid: azure-iot-device.DeviceMethodRequest
      - name: ', '
        fullName: ', '
      - name: DeviceMethodResponse
        fullName: DeviceMethodResponse
        uid: azure-iot-device.DeviceMethodResponse
      - name: '>'
        fullName: '>'
  - uid: azure-iot-device.DeviceClientOptions
    name: DeviceClientOptions
    spec.typeScript:
      - name: DeviceClientOptions
        fullName: DeviceClientOptions
        uid: azure-iot-device.DeviceClientOptions
  - uid: azure-iot-device.ModuleClient
    name: ModuleClient
    spec.typeScript:
      - name: ModuleClient
        fullName: ModuleClient
        uid: azure-iot-device.ModuleClient
  - uid: Callback<azure-iot-device.ModuleClient>
    name: ModuleClient>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: ModuleClient
        fullName: ModuleClient
        uid: azure-iot-device.ModuleClient
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iot-device.ModuleClient>
    name: ModuleClient>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ModuleClient
        fullName: ModuleClient
        uid: azure-iot-device.ModuleClient
      - name: '>'
        fullName: '>'