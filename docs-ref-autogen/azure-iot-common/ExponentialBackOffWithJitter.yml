### YamlMime:UniversalReference
ms.openlocfilehash: 566bfe341884a40c4792a091f7842a7ab5ea7ac6
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 12/13/2018
ms.locfileid: "52057196"
items:
- uid: azure-iot-common.ExponentialBackOffWithJitter
  name: ExponentialBackOffWithJitter
  fullName: ExponentialBackOffWithJitter
  children:
  - azure-iot-common.ExponentialBackOffWithJitter.constructor
  - azure-iot-common.ExponentialBackOffWithJitter.immediateFirstRetry
  - azure-iot-common.ExponentialBackOffWithJitter.nextRetryTimeout
  - azure-iot-common.ExponentialBackOffWithJitter.normalParameters
  - azure-iot-common.ExponentialBackOffWithJitter.shouldRetry
  - azure-iot-common.ExponentialBackOffWithJitter.throttledParameters
  langs:
  - typeScript
  type: class
  summary: >-
    <span data-ttu-id="6a6da-101">Implementa un Backoff esponenziale con instabilità Riprova strategia.</span><span class="sxs-lookup"><span data-stu-id="6a6da-101">Implements an Exponential Backoff with Jitter retry strategy.</span></span>

    <span data-ttu-id="6a6da-102">La funzione per calcolare l'intervallo successivo è il seguente (x è la ripetizione dei tentativi xth): F (x) = min (Cmin + (2^(x-1)-1) \* rand (C \* (1 – Jd), C\*(1-Ju)), Cmax)</span><span class="sxs-lookup"><span data-stu-id="6a6da-102">The function to calculate the next interval is the following (x is the xth retry): F(x) = min(Cmin+ (2^(x-1)-1) \* rand(C \* (1 – Jd), C\*(1-Ju)), Cmax)</span></span>
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.constructor
  name: ExponentialBackOffWithJitter(boolean, ErrorFilter)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="6a6da-103">Inizializza una nuova istanza della classe <xref:azure-iot-common.ExponentialBackOffWithJitter>.</span><span class="sxs-lookup"><span data-stu-id="6a6da-103">Initializes a new instance of the <xref:azure-iot-common.ExponentialBackOffWithJitter> class.</span></span>
  syntax:
    content: 'new ExponentialBackOffWithJitter(immediateFirstRetry?: boolean, errorFilter?: ErrorFilter)'
    parameters:
    - id: immediateFirstRetry
      type:
      - boolean
      description: >
        <span data-ttu-id="6a6da-104">valore booleano che indica se il primo tentativo immediato (impostazione predefinita) oppure attendere l'intervallo prima (valore c).</span><span class="sxs-lookup"><span data-stu-id="6a6da-104">boolean indicating whether the first retry should be immediate (default) or wait the first interval (c value).</span></span>
      optional: true
    - id: errorFilter
      type:
      - ErrorFilter
      description: ''
      optional: true
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.immediateFirstRetry
  name: immediateFirstRetry
  fullName: immediateFirstRetry
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="6a6da-105">Valore booleano che indica se il primo tentativo deve essere immediato (se impostato su true) o dopo il ritardo normalParameters.c (se impostato su false).</span><span class="sxs-lookup"><span data-stu-id="6a6da-105">Boolean indicating whether the first retry should be immediate (if set to true) or after the normalParameters.c delay (if set to false).</span></span>
  syntax:
    content: 'immediateFirstRetry: boolean'
    return:
      type:
      - boolean
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.nextRetryTimeout
  name: nextRetryTimeout(number, boolean)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6a6da-106">Calcola l'intervallo di attesa prima di riprovare a ogni nuovo tentativo provvisorio.</span><span class="sxs-lookup"><span data-stu-id="6a6da-106">Computes the interval to wait before retrying at each new retry tentative.</span></span>
  syntax:
    content: 'function nextRetryTimeout(retryCount: number, isThrottled: boolean)'
    parameters:
    - id: retryCount
      type:
      - number
      description: <span data-ttu-id="6a6da-107">Tentativi correnti provvisorio.</span><span class="sxs-lookup"><span data-stu-id="6a6da-107">Current retry tentative.</span></span>
    - id: isThrottled
      type:
      - boolean
      description: <span data-ttu-id="6a6da-108">Valore booleano che indica se l'hub IoT di Azure limita le operazioni.</span><span class="sxs-lookup"><span data-stu-id="6a6da-108">Boolean indicating whether the Azure IoT hub is throttling operations.</span></span>
    return:
      type:
      - number
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.normalParameters
  name: normalParameters
  fullName: normalParameters
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="6a6da-109">Ripetere i parametri utilizzati per la quale calcolare il ritardo tra i singoli tentativi in situazioni normali (ie. non limitato).</span><span class="sxs-lookup"><span data-stu-id="6a6da-109">Retry parameters used to calculate the delay between each retry in normal situations (ie. not throttled).</span></span>
  syntax:
    content: 'normalParameters: ExponentialBackoffWithJitterParameters'
    return:
      type:
      - azure-iot-common.ExponentialBackoffWithJitterParameters
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.shouldRetry
  name: shouldRetry(Error)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6a6da-110">In base all'errore passato come argomento, determina se un errore è temporaneo e, se l'operazione dovrebbe essere ritentata o No.</span><span class="sxs-lookup"><span data-stu-id="6a6da-110">Based on the error passed as argument, determines if an error is transient and if the operation should be retried or not.</span></span>
  syntax:
    content: 'function shouldRetry(error: Error)'
    parameters:
    - id: error
      type:
      - Error
      description: <span data-ttu-id="6a6da-111">Errore rilevato dall'operazione.</span><span class="sxs-lookup"><span data-stu-id="6a6da-111">The error encountered by the operation.</span></span>
    return:
      type:
      - boolean
  package: azure-iot-common
- uid: azure-iot-common.ExponentialBackOffWithJitter.throttledParameters
  name: throttledParameters
  fullName: throttledParameters
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="6a6da-112">Ripetere i parametri utilizzati per la quale calcolare il ritardo tra i singoli tentativi in casi limitati.</span><span class="sxs-lookup"><span data-stu-id="6a6da-112">Retry parameters used to calculate the delay between each retry in throttled situations.</span></span>
  syntax:
    content: 'throttledParameters: ExponentialBackoffWithJitterParameters'
    return:
      type:
      - azure-iot-common.ExponentialBackoffWithJitterParameters
  package: azure-iot-common
references:
- uid: azure-iot-common.ExponentialBackoffWithJitterParameters
  name: ExponentialBackoffWithJitterParameters
  spec.typeScript:
  - name: ExponentialBackoffWithJitterParameters
    fullName: ExponentialBackoffWithJitterParameters
    uid: azure-iot-common.ExponentialBackoffWithJitterParameters
