### YamlMime:UniversalReference
ms.openlocfilehash: 858b717f1dea3f40631df1ebf9774f2e877a5c37
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/12/2018
ms.locfileid: "40068990"
items:
- uid: adal-node.TokenCache
  name: TokenCache
  fullName: TokenCache
  children:
  - adal-node.TokenCache.add
  - adal-node.TokenCache.find
  - adal-node.TokenCache.remove
  langs:
  - typeScript
  type: interface
  summary: Si tratta di un'interfaccia che può essere implementata per fornire la persistenza di cache di token personalizzata.
  package: adal-node
- uid: adal-node.TokenCache.add
  name: add
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiunge una raccolta di voci nella cache in una singola operazione batch.
  syntax:
    content: 'function add(entries: TokenResponse[], callback: (err: Error, result: boolean) => void)'
    parameters:
    - id: entries
      type:
      - adal-node.TokenResponse[]
      description: Matrice di voci da aggiungere alla cache.
    - id: callback
      type:
      - '(err: Error, result: boolean) => void'
      description: >
        Questa funzione viene chiamata una volta completata l'operazione.  Qualsiasi errore viene fornito come primo parametro.
  package: adal-node
- uid: adal-node.TokenCache.find
  name: find
  children: []
  type: method
  langs:
  - typeScript
  summary: Trova tutte le voci nella cache che corrispondono a tutti i valori passati.
  syntax:
    content: 'function find(query: any, callback: (err: Error, results: any[]) => void)'
    parameters:
    - id: query
      type:
      - any
      description: Questo oggetto verrà confrontato con ogni voce nella cache.  Verranno restituite tutte le voci che corrispondono a tutti i valori in questo oggetto.  Tutti i valori nell'oggetto passato devono corrispondere esattamente i valori in un oggetto potenzialmente restituito.  L'oggetto restituito può avere più valori rispetto al passato nell'oggetto di query. Per dare un'occhiata http://underscorejs.org/#where per un esempio su come inviare query.
    - id: callback
      type:
      - '(err: Error, results: any[]) => void'
      description: "\n"
  package: adal-node
- uid: adal-node.TokenCache.remove
  name: remove
  children: []
  type: method
  langs:
  - typeScript
  summary: Rimuove una raccolta di voci dalla cache in una singola operazione batch.
  syntax:
    content: 'function remove(entires: TokenResponse[], callback: (err: Error, result: null) => void)'
    parameters:
    - id: entires
      type:
      - adal-node.TokenResponse[]
      description: ''
    - id: callback
      type:
      - '(err: Error, result: null) => void'
      description: >
        Questa funzione viene chiamata una volta completata l'operazione.  Qualsiasi errore viene fornito come primo parametro.
  package: adal-node
references:
- uid: adal-node.TokenResponse[]
  spec.typeScript:
  - name: TokenResponse
    fullName: TokenResponse
    uid: adal-node.TokenResponse
  - name: '[]'
    fullName: '[]'
