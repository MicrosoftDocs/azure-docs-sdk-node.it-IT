### YamlMime:UniversalReference
ms.openlocfilehash: 0072104c4d902989f067af297e6e0dd3ed56c2c6
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/12/2018
ms.locfileid: "40067207"
items:
- uid: azure-arm-servicemap.Ports
  name: Ports
  fullName: Ports
  children:
  - azure-arm-servicemap.Ports.get
  - azure-arm-servicemap.Ports.get_1
  - azure-arm-servicemap.Ports.get_2
  - azure-arm-servicemap.Ports.getLiveness_1
  - azure-arm-servicemap.Ports.getLiveness_2
  - azure-arm-servicemap.Ports.getLiveness
  - azure-arm-servicemap.Ports.getLivenessWithHttpOperationResponse
  - azure-arm-servicemap.Ports.getWithHttpOperationResponse
  - azure-arm-servicemap.Ports.listAcceptingProcesses
  - azure-arm-servicemap.Ports.listAcceptingProcesses_1
  - azure-arm-servicemap.Ports.listAcceptingProcesses_2
  - azure-arm-servicemap.Ports.listAcceptingProcessesNext
  - azure-arm-servicemap.Ports.listAcceptingProcessesNext_1
  - azure-arm-servicemap.Ports.listAcceptingProcessesNext_2
  - azure-arm-servicemap.Ports.listAcceptingProcessesNextWithHttpOperationResponse
  - azure-arm-servicemap.Ports.listAcceptingProcessesWithHttpOperationResponse
  - azure-arm-servicemap.Ports.listConnections
  - azure-arm-servicemap.Ports.listConnections_1
  - azure-arm-servicemap.Ports.listConnections_2
  - azure-arm-servicemap.Ports.listConnectionsNext
  - azure-arm-servicemap.Ports.listConnectionsNext_1
  - azure-arm-servicemap.Ports.listConnectionsNext_2
  - azure-arm-servicemap.Ports.listConnectionsNextWithHttpOperationResponse
  - azure-arm-servicemap.Ports.listConnectionsWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-101">Restituisce la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-101">Returns the specified port.</span></span> <span data-ttu-id="0ea1a-102">La porta deve essere attiva durante l'intervallo di tempo specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-102">The port must be live during the specified time interval.</span></span> <span data-ttu-id="0ea1a-103">Se la porta non in tempo reale durante l'intervallo, viene restituito codice di stato 404 (non trovato).</span><span class="sxs-lookup"><span data-stu-id="0ea1a-103">If the port is not live during the interval, status 404 (Not Found) is returned.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-104">Nome gruppo di risorse all'interno di subscriptionId specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-104">Resource group name within the specified subscriptionId.</span></span>
    - id: workspaceName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-105">Area di lavoro OMS che contiene le risorse di interesse.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-105">OMS workspace containing the resources of interest.</span></span>
    - id: machineName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-106">Nome della risorsa macchina.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-106">Machine resource name.</span></span>
    - id: portName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-107">Nome della risorsa porta.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-107">Port resource name.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-servicemap.Port>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-108">Restituisce la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-108">Returns the specified port.</span></span> <span data-ttu-id="0ea1a-109">La porta deve essere attiva durante l'intervallo di tempo specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-109">The port must be live during the specified time interval.</span></span> <span data-ttu-id="0ea1a-110">Se la porta non in tempo reale durante l'intervallo, viene restituito codice di stato 404 (non trovato).</span><span class="sxs-lookup"><span data-stu-id="0ea1a-110">If the port is not live during the interval, status 404 (Not Found) is returned.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, callback: ServiceCallback<Port>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: workspaceName
      type:
      - string
      description: ''
    - id: machineName
      type:
      - string
      description: ''
    - id: portName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.Port>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.Port>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-111">Restituisce la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-111">Returns the specified port.</span></span> <span data-ttu-id="0ea1a-112">La porta deve essere attiva durante l'intervallo di tempo specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-112">The port must be live during the specified time interval.</span></span> <span data-ttu-id="0ea1a-113">Se la porta non in tempo reale durante l'intervallo, viene restituito codice di stato 404 (non trovato).</span><span class="sxs-lookup"><span data-stu-id="0ea1a-113">If the port is not live during the interval, status 404 (Not Found) is returned.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options: function, callback: ServiceCallback<Port>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: workspaceName
      type:
      - string
      description: ''
    - id: machineName
      type:
      - string
      description: ''
    - id: portName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.Port>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.Port>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.getLiveness_1
  name: getLiveness
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-114">Ottiene lo stato di attività della porta nell'intervallo di tempo specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-114">Obtains the liveness status of the port during the specified time interval.</span></span>
  syntax:
    content: 'function getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, callback: ServiceCallback<Liveness>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: workspaceName
      type:
      - string
      description: ''
    - id: machineName
      type:
      - string
      description: ''
    - id: portName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.Liveness>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.Liveness>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.getLiveness_2
  name: getLiveness
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-115">Ottiene lo stato di attività della porta nell'intervallo di tempo specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-115">Obtains the liveness status of the port during the specified time interval.</span></span>
  syntax:
    content: 'function getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options: function, callback: ServiceCallback<Liveness>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: workspaceName
      type:
      - string
      description: ''
    - id: machineName
      type:
      - string
      description: ''
    - id: portName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.Liveness>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.Liveness>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.getLiveness
  name: getLiveness
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-116">Ottiene lo stato di attività della porta nell'intervallo di tempo specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-116">Obtains the liveness status of the port during the specified time interval.</span></span>
  syntax:
    content: 'function getLiveness(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-117">Nome gruppo di risorse all'interno di subscriptionId specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-117">Resource group name within the specified subscriptionId.</span></span>
    - id: workspaceName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-118">Area di lavoro OMS che contiene le risorse di interesse.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-118">OMS workspace containing the resources of interest.</span></span>
    - id: machineName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-119">Nome della risorsa macchina.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-119">Machine resource name.</span></span>
    - id: portName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-120">Nome della risorsa porta.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-120">Port resource name.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-servicemap.Liveness>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.getLivenessWithHttpOperationResponse
  name: getLivenessWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-121">Ottiene lo stato di attività della porta nell'intervallo di tempo specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-121">Obtains the liveness status of the port during the specified time interval.</span></span>
  syntax:
    content: 'function getLivenessWithHttpOperationResponse(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-122">Nome gruppo di risorse all'interno di subscriptionId specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-122">Resource group name within the specified subscriptionId.</span></span>
    - id: workspaceName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-123">Area di lavoro OMS che contiene le risorse di interesse.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-123">OMS workspace containing the resources of interest.</span></span>
    - id: machineName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-124">Nome della risorsa macchina.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-124">Machine resource name.</span></span>
    - id: portName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-125">Nome della risorsa porta.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-125">Port resource name.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-servicemap.Liveness>>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-126">Restituisce la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-126">Returns the specified port.</span></span> <span data-ttu-id="0ea1a-127">La porta deve essere attiva durante l'intervallo di tempo specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-127">The port must be live during the specified time interval.</span></span> <span data-ttu-id="0ea1a-128">Se la porta non in tempo reale durante l'intervallo, viene restituito codice di stato 404 (non trovato).</span><span class="sxs-lookup"><span data-stu-id="0ea1a-128">If the port is not live during the interval, status 404 (Not Found) is returned.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-129">Nome gruppo di risorse all'interno di subscriptionId specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-129">Resource group name within the specified subscriptionId.</span></span>
    - id: workspaceName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-130">Area di lavoro OMS che contiene le risorse di interesse.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-130">OMS workspace containing the resources of interest.</span></span>
    - id: machineName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-131">Nome della risorsa macchina.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-131">Machine resource name.</span></span>
    - id: portName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-132">Nome della risorsa porta.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-132">Port resource name.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-servicemap.Port>>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listAcceptingProcesses
  name: listAcceptingProcesses
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-133">Restituisce una raccolta di processi accettazione sulla porta specificata</span><span class="sxs-lookup"><span data-stu-id="0ea1a-133">Returns a collection of processes accepting on the specified port</span></span>
  syntax:
    content: 'function listAcceptingProcesses(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-134">Nome gruppo di risorse all'interno di subscriptionId specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-134">Resource group name within the specified subscriptionId.</span></span>
    - id: workspaceName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-135">Area di lavoro OMS che contiene le risorse di interesse.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-135">OMS workspace containing the resources of interest.</span></span>
    - id: machineName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-136">Nome della risorsa macchina.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-136">Machine resource name.</span></span>
    - id: portName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-137">Nome della risorsa porta.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-137">Port resource name.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-servicemap.ProcessCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listAcceptingProcesses_1
  name: listAcceptingProcesses
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-138">Restituisce una raccolta di processi accettazione sulla porta specificata</span><span class="sxs-lookup"><span data-stu-id="0ea1a-138">Returns a collection of processes accepting on the specified port</span></span>
  syntax:
    content: 'function listAcceptingProcesses(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, callback: ServiceCallback<ProcessCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: workspaceName
      type:
      - string
      description: ''
    - id: machineName
      type:
      - string
      description: ''
    - id: portName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.ProcessCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.ProcessCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listAcceptingProcesses_2
  name: listAcceptingProcesses
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-139">Restituisce una raccolta di processi accettazione sulla porta specificata</span><span class="sxs-lookup"><span data-stu-id="0ea1a-139">Returns a collection of processes accepting on the specified port</span></span>
  syntax:
    content: 'function listAcceptingProcesses(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options: function, callback: ServiceCallback<ProcessCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: workspaceName
      type:
      - string
      description: ''
    - id: machineName
      type:
      - string
      description: ''
    - id: portName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.ProcessCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.ProcessCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listAcceptingProcessesNext
  name: listAcceptingProcessesNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-140">Restituisce una raccolta di processi accettazione sulla porta specificata</span><span class="sxs-lookup"><span data-stu-id="0ea1a-140">Returns a collection of processes accepting on the specified port</span></span>
  syntax:
    content: 'function listAcceptingProcessesNext(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-141">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-141">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-servicemap.ProcessCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listAcceptingProcessesNext_1
  name: listAcceptingProcessesNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-142">Restituisce una raccolta di processi accettazione sulla porta specificata</span><span class="sxs-lookup"><span data-stu-id="0ea1a-142">Returns a collection of processes accepting on the specified port</span></span>
  syntax:
    content: 'function listAcceptingProcessesNext(nextPageLink: string, callback: ServiceCallback<ProcessCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.ProcessCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.ProcessCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listAcceptingProcessesNext_2
  name: listAcceptingProcessesNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-143">Restituisce una raccolta di processi accettazione sulla porta specificata</span><span class="sxs-lookup"><span data-stu-id="0ea1a-143">Returns a collection of processes accepting on the specified port</span></span>
  syntax:
    content: 'function listAcceptingProcessesNext(nextPageLink: string, options: function, callback: ServiceCallback<ProcessCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.ProcessCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.ProcessCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listAcceptingProcessesNextWithHttpOperationResponse
  name: listAcceptingProcessesNextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-144">Restituisce una raccolta di processi accettazione sulla porta specificata</span><span class="sxs-lookup"><span data-stu-id="0ea1a-144">Returns a collection of processes accepting on the specified port</span></span>
  syntax:
    content: 'function listAcceptingProcessesNextWithHttpOperationResponse(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-145">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-145">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-servicemap.ProcessCollection>>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listAcceptingProcessesWithHttpOperationResponse
  name: listAcceptingProcessesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-146">Restituisce una raccolta di processi accettazione sulla porta specificata</span><span class="sxs-lookup"><span data-stu-id="0ea1a-146">Returns a collection of processes accepting on the specified port</span></span>
  syntax:
    content: 'function listAcceptingProcessesWithHttpOperationResponse(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-147">Nome gruppo di risorse all'interno di subscriptionId specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-147">Resource group name within the specified subscriptionId.</span></span>
    - id: workspaceName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-148">Area di lavoro OMS che contiene le risorse di interesse.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-148">OMS workspace containing the resources of interest.</span></span>
    - id: machineName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-149">Nome della risorsa macchina.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-149">Machine resource name.</span></span>
    - id: portName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-150">Nome della risorsa porta.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-150">Port resource name.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-servicemap.ProcessCollection>>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listConnections
  name: listConnections
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-151">Restituisce una raccolta di connessioni stabilite tramite la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-151">Returns a collection of connections established via the specified port.</span></span>
  syntax:
    content: 'function listConnections(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-152">Nome gruppo di risorse all'interno di subscriptionId specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-152">Resource group name within the specified subscriptionId.</span></span>
    - id: workspaceName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-153">Area di lavoro OMS che contiene le risorse di interesse.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-153">OMS workspace containing the resources of interest.</span></span>
    - id: machineName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-154">Nome della risorsa macchina.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-154">Machine resource name.</span></span>
    - id: portName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-155">Nome della risorsa porta.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-155">Port resource name.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-servicemap.ConnectionCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listConnections_1
  name: listConnections
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-156">Restituisce una raccolta di connessioni stabilite tramite la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-156">Returns a collection of connections established via the specified port.</span></span>
  syntax:
    content: 'function listConnections(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, callback: ServiceCallback<ConnectionCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: workspaceName
      type:
      - string
      description: ''
    - id: machineName
      type:
      - string
      description: ''
    - id: portName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.ConnectionCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.ConnectionCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listConnections_2
  name: listConnections
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-157">Restituisce una raccolta di connessioni stabilite tramite la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-157">Returns a collection of connections established via the specified port.</span></span>
  syntax:
    content: 'function listConnections(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options: function, callback: ServiceCallback<ConnectionCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: workspaceName
      type:
      - string
      description: ''
    - id: machineName
      type:
      - string
      description: ''
    - id: portName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.ConnectionCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.ConnectionCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listConnectionsNext
  name: listConnectionsNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-158">Restituisce una raccolta di connessioni stabilite tramite la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-158">Returns a collection of connections established via the specified port.</span></span>
  syntax:
    content: 'function listConnectionsNext(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-159">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-159">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-servicemap.ConnectionCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listConnectionsNext_1
  name: listConnectionsNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-160">Restituisce una raccolta di connessioni stabilite tramite la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-160">Returns a collection of connections established via the specified port.</span></span>
  syntax:
    content: 'function listConnectionsNext(nextPageLink: string, callback: ServiceCallback<ConnectionCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.ConnectionCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.ConnectionCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listConnectionsNext_2
  name: listConnectionsNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-161">Restituisce una raccolta di connessioni stabilite tramite la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-161">Returns a collection of connections established via the specified port.</span></span>
  syntax:
    content: 'function listConnectionsNext(nextPageLink: string, options: function, callback: ServiceCallback<ConnectionCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-servicemap.ConnectionCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-servicemap.ConnectionCollection>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listConnectionsNextWithHttpOperationResponse
  name: listConnectionsNextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-162">Restituisce una raccolta di connessioni stabilite tramite la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-162">Returns a collection of connections established via the specified port.</span></span>
  syntax:
    content: 'function listConnectionsNextWithHttpOperationResponse(nextPageLink: string, options?: function)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-163">Il parametro NextLink della chiamata riuscita precedente all'operazione di elenco.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-163">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-servicemap.ConnectionCollection>>
  package: azure-arm-servicemap
- uid: azure-arm-servicemap.Ports.listConnectionsWithHttpOperationResponse
  name: listConnectionsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea1a-164">Restituisce una raccolta di connessioni stabilite tramite la porta specificata.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-164">Returns a collection of connections established via the specified port.</span></span>
  syntax:
    content: 'function listConnectionsWithHttpOperationResponse(resourceGroupName: string, workspaceName: string, machineName: string, portName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-165">Nome gruppo di risorse all'interno di subscriptionId specificato.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-165">Resource group name within the specified subscriptionId.</span></span>
    - id: workspaceName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-166">Area di lavoro OMS che contiene le risorse di interesse.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-166">OMS workspace containing the resources of interest.</span></span>
    - id: machineName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-167">Nome della risorsa macchina.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-167">Machine resource name.</span></span>
    - id: portName
      type:
      - string
      description: >
        <span data-ttu-id="0ea1a-168">Nome della risorsa porta.</span><span class="sxs-lookup"><span data-stu-id="0ea1a-168">Port resource name.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-servicemap.ConnectionCollection>>
  package: azure-arm-servicemap
references:
- uid: Promise<azure-arm-servicemap.Port>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Port
    fullName: Port
    uid: azure-arm-servicemap.Port
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-servicemap.Port>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Port
    fullName: Port
    uid: azure-arm-servicemap.Port
  - name: '>'
    fullName: '>'
- uid: Promise<azure-arm-servicemap.Liveness>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Liveness
    fullName: Liveness
    uid: azure-arm-servicemap.Liveness
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-servicemap.Liveness>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Liveness
    fullName: Liveness
    uid: azure-arm-servicemap.Liveness
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-servicemap.Liveness>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Liveness
    fullName: Liveness
    uid: azure-arm-servicemap.Liveness
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-arm-servicemap.Port>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Port
    fullName: Port
    uid: azure-arm-servicemap.Port
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-servicemap.ProcessCollection>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ProcessCollection
    fullName: ProcessCollection
    uid: azure-arm-servicemap.ProcessCollection
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-servicemap.ProcessCollection>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ProcessCollection
    fullName: ProcessCollection
    uid: azure-arm-servicemap.ProcessCollection
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-servicemap.ProcessCollection>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ProcessCollection
    fullName: ProcessCollection
    uid: azure-arm-servicemap.ProcessCollection
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-servicemap.ConnectionCollection>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ConnectionCollection
    fullName: ConnectionCollection
    uid: azure-arm-servicemap.ConnectionCollection
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-servicemap.ConnectionCollection>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ConnectionCollection
    fullName: ConnectionCollection
    uid: azure-arm-servicemap.ConnectionCollection
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-servicemap.ConnectionCollection>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ConnectionCollection
    fullName: ConnectionCollection
    uid: azure-arm-servicemap.ConnectionCollection
  - name: '>>'
    fullName: '>>'
