### YamlMime:UniversalReference
ms.openlocfilehash: 145293f6ed7479b70bb9d3084353eda83a7bad33
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 12/13/2018
ms.locfileid: "52038111"
items:
- uid: azure-cognitiveservices-face.LargeFaceListOperations
  name: LargeFaceListOperations
  fullName: LargeFaceListOperations
  children:
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.create
  - azure-cognitiveservices-face.LargeFaceListOperations.create_2
  - azure-cognitiveservices-face.LargeFaceListOperations.create_1
  - azure-cognitiveservices-face.LargeFaceListOperations.createWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_2
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_1
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.get
  - azure-cognitiveservices-face.LargeFaceListOperations.get_2
  - azure-cognitiveservices-face.LargeFaceListOperations.get_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatusWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.getWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.list
  - azure-cognitiveservices-face.LargeFaceListOperations.list_2
  - azure-cognitiveservices-face.LargeFaceListOperations.list_1
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces_2
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces_1
  - azure-cognitiveservices-face.LargeFaceListOperations.listFacesWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.listWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.train
  - azure-cognitiveservices-face.LargeFaceListOperations.train_2
  - azure-cognitiveservices-face.LargeFaceListOperations.train_1
  - azure-cognitiveservices-face.LargeFaceListOperations.trainWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.update
  - azure-cognitiveservices-face.LargeFaceListOperations.update_2
  - azure-cognitiveservices-face.LargeFaceListOperations.update_1
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream
  name: addFaceFromStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-101">Aggiungere un volto a un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-101">Add a face to a large face list.</span></span> <span data-ttu-id="0ea86-102">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0ea86-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="0ea86-103">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="0ea86-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-104">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-104">Id referencing a particular large face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="0ea86-105">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="0ea86-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2
  name: addFaceFromStream(string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-106">Aggiungere un volto a un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-106">Add a face to a large face list.</span></span> <span data-ttu-id="0ea86-107">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0ea86-107">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="0ea86-108">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="0ea86-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1
  name: addFaceFromStream(string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-109">Aggiungere un volto a un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-109">Add a face to a large face list.</span></span> <span data-ttu-id="0ea86-110">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0ea86-110">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="0ea86-111">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="0ea86-111">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-112">Aggiungere un volto a un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-112">Add a face to a large face list.</span></span> <span data-ttu-id="0ea86-113">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0ea86-113">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="0ea86-114">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="0ea86-114">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(largeFaceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-115">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-115">Id referencing a particular large face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="0ea86-116">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="0ea86-116">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl
  name: addFaceFromUrl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-117">Aggiungere un volto a un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-117">Add a face to a large face list.</span></span> <span data-ttu-id="0ea86-118">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0ea86-118">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="0ea86-119">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="0ea86-119">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-120">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-120">Id referencing a particular large face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-121">Raggiungibile pubblicamente URL di un'immagine</span><span class="sxs-lookup"><span data-stu-id="0ea86-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-122">Aggiungere un volto a un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-122">Add a face to a large face list.</span></span> <span data-ttu-id="0ea86-123">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0ea86-123">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="0ea86-124">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="0ea86-124">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-125">Aggiungere un volto a un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-125">Add a face to a large face list.</span></span> <span data-ttu-id="0ea86-126">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0ea86-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="0ea86-127">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="0ea86-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-128">Aggiungere un volto a un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-128">Add a face to a large face list.</span></span> <span data-ttu-id="0ea86-129">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0ea86-129">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="0ea86-130">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="0ea86-130">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(largeFaceListId: string, url: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-131">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-131">Id referencing a particular large face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-132">Raggiungibile pubblicamente URL di un'immagine</span><span class="sxs-lookup"><span data-stu-id="0ea86-132">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-133">Creare un elenco di visi di grandi dimensioni vuota.</span><span class="sxs-lookup"><span data-stu-id="0ea86-133">Create an empty large face list.</span></span> <span data-ttu-id="0ea86-134">Gli elenchi sono permessi fino a 64 volti di grandi dimensioni presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="0ea86-134">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-135">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-135">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create_2
  name: create(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-136">Creare un elenco di visi di grandi dimensioni vuota.</span><span class="sxs-lookup"><span data-stu-id="0ea86-136">Create an empty large face list.</span></span> <span data-ttu-id="0ea86-137">Gli elenchi sono permessi fino a 64 volti di grandi dimensioni presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="0ea86-137">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create_1
  name: create(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-138">Creare un elenco di visi di grandi dimensioni vuota.</span><span class="sxs-lookup"><span data-stu-id="0ea86-138">Create an empty large face list.</span></span> <span data-ttu-id="0ea86-139">Gli elenchi sono permessi fino a 64 volti di grandi dimensioni presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="0ea86-139">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-140">Creare un elenco di visi di grandi dimensioni vuota.</span><span class="sxs-lookup"><span data-stu-id="0ea86-140">Create an empty large face list.</span></span> <span data-ttu-id="0ea86-141">Gli elenchi sono permessi fino a 64 volti di grandi dimensioni presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="0ea86-141">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-142">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-142">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace
  name: deleteFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-143">Eliminare un'immagine esistente da un elenco di visi di grandi dimensioni (specificato da un persisitedFaceId e un largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="0ea86-143">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="0ea86-144">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="0ea86-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-145">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-145">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-146">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-146">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_2
  name: deleteFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-147">Eliminare un'immagine esistente da un elenco di visi di grandi dimensioni (specificato da un persisitedFaceId e un largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="0ea86-147">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="0ea86-148">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="0ea86-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_1
  name: deleteFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-149">Eliminare un'immagine esistente da un elenco di visi di grandi dimensioni (specificato da un persisitedFaceId e un largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="0ea86-149">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="0ea86-150">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="0ea86-150">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-151">Eliminare un'immagine esistente da un elenco di visi di grandi dimensioni (specificato da un persisitedFaceId e un largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="0ea86-151">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="0ea86-152">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="0ea86-152">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-153">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-153">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-154">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod
  name: deleteMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-155">Eliminare un elenco di visi grandi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="0ea86-155">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="0ea86-156">Persistente viso verranno eliminate anche le immagini nell'elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-156">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-157">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-157">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_2
  name: deleteMethod(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-158">Eliminare un elenco di visi grandi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="0ea86-158">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="0ea86-159">Persistente viso verranno eliminate anche le immagini nell'elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-159">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_1
  name: deleteMethod(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-160">Eliminare un elenco di visi grandi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="0ea86-160">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="0ea86-161">Persistente viso verranno eliminate anche le immagini nell'elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-161">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-162">Eliminare un elenco di visi grandi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="0ea86-162">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="0ea86-163">Persistente viso verranno eliminate anche le immagini nell'elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-163">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-164">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-164">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get
  name: get(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-165">Recuperare le informazioni dell'elenco un viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-165">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-166">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-166">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get_2
  name: get(string, Object, ServiceCallback<LargeFaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-167">Recuperare le informazioni dell'elenco un viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-167">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, options: Object, callback: ServiceCallback<LargeFaceList>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get_1
  name: get(string, ServiceCallback<LargeFaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-168">Recuperare le informazioni dell'elenco un viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-168">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, callback: ServiceCallback<LargeFaceList>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace
  name: getFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-169">Recuperare informazioni su un viso persistente (specificato da persistedFaceId e relativo largeFaceListId appartenente).</span><span class="sxs-lookup"><span data-stu-id="0ea86-169">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-170">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-170">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-171">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-171">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace_2
  name: getFace(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-172">Recuperare informazioni su un viso persistente (specificato da persistedFaceId e relativo largeFaceListId appartenente).</span><span class="sxs-lookup"><span data-stu-id="0ea86-172">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace_1
  name: getFace(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-173">Recuperare informazioni su un viso persistente (specificato da persistedFaceId e relativo largeFaceListId appartenente).</span><span class="sxs-lookup"><span data-stu-id="0ea86-173">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-174">Recuperare informazioni su un viso persistente (specificato da persistedFaceId e relativo largeFaceListId appartenente).</span><span class="sxs-lookup"><span data-stu-id="0ea86-174">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-175">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-175">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-176">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-176">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus
  name: getTrainingStatus(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-177">Recuperare lo stato di training di un elenco di visi di grandi dimensioni (corso o completato).</span><span class="sxs-lookup"><span data-stu-id="0ea86-177">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-178">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-178">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2
  name: getTrainingStatus(string, Object, ServiceCallback<TrainingStatus>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-179">Recuperare lo stato di training di un elenco di visi di grandi dimensioni (corso o completato).</span><span class="sxs-lookup"><span data-stu-id="0ea86-179">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, options: Object, callback: ServiceCallback<TrainingStatus>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1
  name: getTrainingStatus(string, ServiceCallback<TrainingStatus>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-180">Recuperare lo stato di training di un elenco di visi di grandi dimensioni (corso o completato).</span><span class="sxs-lookup"><span data-stu-id="0ea86-180">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, callback: ServiceCallback<TrainingStatus>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatusWithHttpOperationResponse
  name: getTrainingStatusWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-181">Recuperare lo stato di training di un elenco di visi di grandi dimensioni (corso o completato).</span><span class="sxs-lookup"><span data-stu-id="0ea86-181">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatusWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-182">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-182">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-183">Recuperare le informazioni dell'elenco un viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-183">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-184">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-184">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-185">Recuperare informazioni su tutti gli elenchi di visi grandi esistenti.</span><span class="sxs-lookup"><span data-stu-id="0ea86-185">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="0ea86-186">Verrà restituiti solo largeFaceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="0ea86-186">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list_2
  name: list(Object, ServiceCallback<LargeFaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-187">Recuperare informazioni su tutti gli elenchi di visi grandi esistenti.</span><span class="sxs-lookup"><span data-stu-id="0ea86-187">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="0ea86-188">Verrà restituiti solo largeFaceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="0ea86-188">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<LargeFaceList[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list_1
  name: list(ServiceCallback<LargeFaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-189">Recuperare informazioni su tutti gli elenchi di visi grandi esistenti.</span><span class="sxs-lookup"><span data-stu-id="0ea86-189">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="0ea86-190">Verrà restituiti solo largeFaceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="0ea86-190">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<LargeFaceList[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces
  name: listFaces(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-191">Elencare tutti i volti in un elenco di visi di grandi dimensioni e recuperare informazioni viso (userData e persistedFaceIds delle facce registrate del volto inclusi).</span><span class="sxs-lookup"><span data-stu-id="0ea86-191">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-192">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-192">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces_2
  name: listFaces(string, Object, ServiceCallback<PersistedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-193">Elencare tutti i volti in un elenco di visi di grandi dimensioni e recuperare informazioni viso (userData e persistedFaceIds delle facce registrate del volto inclusi).</span><span class="sxs-lookup"><span data-stu-id="0ea86-193">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, options: Object, callback: ServiceCallback<PersistedFace[]>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces_1
  name: listFaces(string, ServiceCallback<PersistedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-194">Elencare tutti i volti in un elenco di visi di grandi dimensioni e recuperare informazioni viso (userData e persistedFaceIds delle facce registrate del volto inclusi).</span><span class="sxs-lookup"><span data-stu-id="0ea86-194">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, callback: ServiceCallback<PersistedFace[]>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFacesWithHttpOperationResponse
  name: listFacesWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-195">Elencare tutti i volti in un elenco di visi di grandi dimensioni e recuperare informazioni viso (userData e persistedFaceIds delle facce registrate del volto inclusi).</span><span class="sxs-lookup"><span data-stu-id="0ea86-195">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFacesWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-196">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-196">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-197">Recuperare informazioni su tutti gli elenchi di visi grandi esistenti.</span><span class="sxs-lookup"><span data-stu-id="0ea86-197">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="0ea86-198">Verrà restituiti solo largeFaceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="0ea86-198">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train
  name: train(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-199">Accodare un'attività di formazione elenco viso di grandi dimensioni, l'attività di formazione potrebbe non essere avviato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-199">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-200">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-200">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train_2
  name: train(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-201">Accodare un'attività di formazione elenco viso di grandi dimensioni, l'attività di formazione potrebbe non essere avviato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-201">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train_1
  name: train(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-202">Accodare un'attività di formazione elenco viso di grandi dimensioni, l'attività di formazione potrebbe non essere avviato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-202">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.trainWithHttpOperationResponse
  name: trainWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-203">Accodare un'attività di formazione elenco viso di grandi dimensioni, l'attività di formazione potrebbe non essere avviato immediatamente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-203">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function trainWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-204">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-204">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update
  name: update(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-205">Aggiornare le informazioni di un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-205">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-206">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-206">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update_2
  name: update(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-207">Aggiornare le informazioni di un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-207">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update_1
  name: update(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-208">Aggiornare le informazioni di un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-208">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace
  name: updateFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-209">Aggiornare il campo di userData dell'immagine di un persistente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-209">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-210">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-210">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-211">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-211">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace_2
  name: updateFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-212">Aggiornare il campo di userData dell'immagine di un persistente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-212">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace_1
  name: updateFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-213">Aggiornare il campo di userData dell'immagine di un persistente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-213">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-214">Aggiornare il campo di userData dell'immagine di un persistente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-214">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-215">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-215">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-216">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="0ea86-216">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0ea86-217">Aggiornare le informazioni di un elenco di visi di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-217">Update information of a large face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="0ea86-218">ID che fanno riferimento a un elenco specifico viso di grandi dimensioni.</span><span class="sxs-lookup"><span data-stu-id="0ea86-218">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.LargeFaceList>
  name: LargeFaceList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
  name: LargeFaceList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.TrainingStatus>
  name: TrainingStatus>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
  name: TrainingStatus>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus>>
  name: TrainingStatus>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList>>
  name: LargeFaceList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.LargeFaceList[]>
  name: LargeFaceList[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
  name: LargeFaceList[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<azure-cognitiveservices-face.PersistedFace[]>
  name: PersistedFace[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
  name: PersistedFace[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace[]>>
  name: PersistedFace[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList[]>>
  name: LargeFaceList[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>>'
    fullName: '[]>>'
