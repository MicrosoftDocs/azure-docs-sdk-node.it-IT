### YamlMime:UniversalReference
ms.openlocfilehash: e2d905a200190804df26d4317afebcd13d535944
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 12/13/2018
ms.locfileid: "52168486"
items:
- uid: azure-cognitiveservices-face.FaceListOperations
  name: FaceListOperations
  fullName: FaceListOperations
  children:
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_2
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_1
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_2
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_1
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.create
  - azure-cognitiveservices-face.FaceListOperations.create_2
  - azure-cognitiveservices-face.FaceListOperations.create_1
  - azure-cognitiveservices-face.FaceListOperations.createWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.deleteFace
  - azure-cognitiveservices-face.FaceListOperations.deleteFace_2
  - azure-cognitiveservices-face.FaceListOperations.deleteFace_1
  - azure-cognitiveservices-face.FaceListOperations.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod_2
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod_1
  - azure-cognitiveservices-face.FaceListOperations.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.get
  - azure-cognitiveservices-face.FaceListOperations.get_2
  - azure-cognitiveservices-face.FaceListOperations.get_1
  - azure-cognitiveservices-face.FaceListOperations.getWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.list
  - azure-cognitiveservices-face.FaceListOperations.list_2
  - azure-cognitiveservices-face.FaceListOperations.list_1
  - azure-cognitiveservices-face.FaceListOperations.listWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.update
  - azure-cognitiveservices-face.FaceListOperations.update_2
  - azure-cognitiveservices-face.FaceListOperations.update_1
  - azure-cognitiveservices-face.FaceListOperations.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream
  name: addFaceFromStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-101">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-101">Add a face to a face list.</span></span> <span data-ttu-id="953c9-102">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="953c9-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="953c9-103">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="953c9-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-104">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-104">Id referencing a particular face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="953c9-105">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="953c9-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_2
  name: addFaceFromStream(string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-106">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-106">Add a face to a face list.</span></span> <span data-ttu-id="953c9-107">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="953c9-107">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="953c9-108">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="953c9-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_1
  name: addFaceFromStream(string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-109">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-109">Add a face to a face list.</span></span> <span data-ttu-id="953c9-110">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="953c9-110">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="953c9-111">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="953c9-111">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-112">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-112">Add a face to a face list.</span></span> <span data-ttu-id="953c9-113">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="953c9-113">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="953c9-114">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="953c9-114">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(faceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-115">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-115">Id referencing a particular face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="953c9-116">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="953c9-116">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl
  name: addFaceFromUrl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-117">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-117">Add a face to a face list.</span></span> <span data-ttu-id="953c9-118">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="953c9-118">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="953c9-119">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="953c9-119">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-120">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-120">Id referencing a particular face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="953c9-121">Raggiungibile pubblicamente URL di un'immagine</span><span class="sxs-lookup"><span data-stu-id="953c9-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-122">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-122">Add a face to a face list.</span></span> <span data-ttu-id="953c9-123">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="953c9-123">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="953c9-124">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="953c9-124">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-125">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-125">Add a face to a face list.</span></span> <span data-ttu-id="953c9-126">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="953c9-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="953c9-127">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="953c9-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-128">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-128">Add a face to a face list.</span></span> <span data-ttu-id="953c9-129">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="953c9-129">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="953c9-130">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="953c9-130">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-131">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-131">Id referencing a particular face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="953c9-132">Raggiungibile pubblicamente URL di un'immagine</span><span class="sxs-lookup"><span data-stu-id="953c9-132">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-133">Creare un elenco di visi vuoto.</span><span class="sxs-lookup"><span data-stu-id="953c9-133">Create an empty face list.</span></span> <span data-ttu-id="953c9-134">Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="953c9-134">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-135">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-135">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create_2
  name: create(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-136">Creare un elenco di visi vuoto.</span><span class="sxs-lookup"><span data-stu-id="953c9-136">Create an empty face list.</span></span> <span data-ttu-id="953c9-137">Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="953c9-137">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create_1
  name: create(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-138">Creare un elenco di visi vuoto.</span><span class="sxs-lookup"><span data-stu-id="953c9-138">Create an empty face list.</span></span> <span data-ttu-id="953c9-139">Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="953c9-139">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-140">Creare un elenco di visi vuoto.</span><span class="sxs-lookup"><span data-stu-id="953c9-140">Create an empty face list.</span></span> <span data-ttu-id="953c9-141">Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="953c9-141">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-142">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-142">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace
  name: deleteFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-143">Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId).</span><span class="sxs-lookup"><span data-stu-id="953c9-143">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="953c9-144">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="953c9-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-145">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-145">Id referencing a particular face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-146">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="953c9-146">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace_2
  name: deleteFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-147">Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId).</span><span class="sxs-lookup"><span data-stu-id="953c9-147">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="953c9-148">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="953c9-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace_1
  name: deleteFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-149">Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId).</span><span class="sxs-lookup"><span data-stu-id="953c9-149">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="953c9-150">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="953c9-150">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-151">Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId).</span><span class="sxs-lookup"><span data-stu-id="953c9-151">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="953c9-152">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="953c9-152">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-153">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-153">Id referencing a particular face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-154">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="953c9-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod
  name: deleteMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-155">Eliminare un elenco di visi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="953c9-155">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="953c9-156">Persistente viso verranno eliminate anche le immagini nell'elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-156">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-157">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-157">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod_2
  name: deleteMethod(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-158">Eliminare un elenco di visi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="953c9-158">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="953c9-159">Persistente viso verranno eliminate anche le immagini nell'elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-159">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod_1
  name: deleteMethod(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-160">Eliminare un elenco di visi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="953c9-160">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="953c9-161">Persistente viso verranno eliminate anche le immagini nell'elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-161">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-162">Eliminare un elenco di visi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="953c9-162">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="953c9-163">Persistente viso verranno eliminate anche le immagini nell'elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-163">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-164">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-164">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get
  name: get(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-165">Recuperare le informazioni di un elenco visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-165">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-166">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-166">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get_2
  name: get(string, Object, ServiceCallback<FaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-167">Recuperare le informazioni di un elenco visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-167">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options: Object, callback: ServiceCallback<FaceList>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get_1
  name: get(string, ServiceCallback<FaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-168">Recuperare le informazioni di un elenco visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-168">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-169">Recuperare le informazioni di un elenco visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-169">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-170">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-170">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-171">Recuperare informazioni su tutti gli elenchi di visi esistente.</span><span class="sxs-lookup"><span data-stu-id="953c9-171">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="953c9-172">Verrà restituiti solo faceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="953c9-172">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list_2
  name: list(Object, ServiceCallback<FaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-173">Recuperare informazioni su tutti gli elenchi di visi esistente.</span><span class="sxs-lookup"><span data-stu-id="953c9-173">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="953c9-174">Verrà restituiti solo faceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="953c9-174">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<FaceList[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list_1
  name: list(ServiceCallback<FaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-175">Recuperare informazioni su tutti gli elenchi di visi esistente.</span><span class="sxs-lookup"><span data-stu-id="953c9-175">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="953c9-176">Verrà restituiti solo faceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="953c9-176">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<FaceList[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-177">Recuperare informazioni su tutti gli elenchi di visi esistente.</span><span class="sxs-lookup"><span data-stu-id="953c9-177">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="953c9-178">Verrà restituiti solo faceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="953c9-178">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update
  name: update(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-179">Aggiornare le informazioni di un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-179">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-180">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-180">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update_2
  name: update(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-181">Aggiornare le informazioni di un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-181">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update_1
  name: update(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-182">Aggiornare le informazioni di un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-182">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="953c9-183">Aggiornare le informazioni di un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="953c9-183">Update information of a face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="953c9-184">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="953c9-184">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.FaceList>
  name: FaceList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.FaceList>
  name: FaceList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList>>
  name: FaceList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.FaceList[]>
  name: FaceList[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.FaceList[]>
  name: FaceList[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList[]>>
  name: FaceList[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>>'
    fullName: '[]>>'
