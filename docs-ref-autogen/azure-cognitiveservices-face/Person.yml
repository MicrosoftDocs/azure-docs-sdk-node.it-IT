### YamlMime:UniversalReference
ms.openlocfilehash: 2c5dc4613b6576877b90e42f2a0c2b54bfb52838
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/12/2018
ms.locfileid: "40057918"
items:
- uid: azure-cognitiveservices-face.Person
  name: Person
  fullName: Person
  children:
  - azure-cognitiveservices-face.Person.addPersonFace
  - azure-cognitiveservices-face.Person.addPersonFace_1
  - azure-cognitiveservices-face.Person.addPersonFace_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.create
  - azure-cognitiveservices-face.Person.create_1
  - azure-cognitiveservices-face.Person.create_2
  - azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteFace_1
  - azure-cognitiveservices-face.Person.deleteFace_2
  - azure-cognitiveservices-face.Person.deleteFace
  - azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteMethod
  - azure-cognitiveservices-face.Person.deleteMethod_1
  - azure-cognitiveservices-face.Person.deleteMethod_2
  - azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.get
  - azure-cognitiveservices-face.Person.get_1
  - azure-cognitiveservices-face.Person.get_2
  - azure-cognitiveservices-face.Person.getFace
  - azure-cognitiveservices-face.Person.getFace_2
  - azure-cognitiveservices-face.Person.getFace_1
  - azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.list
  - azure-cognitiveservices-face.Person.list_1
  - azure-cognitiveservices-face.Person.list_2
  - azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.update
  - azure-cognitiveservices-face.Person.update_1
  - azure-cognitiveservices-face.Person.update_2
  - azure-cognitiveservices-face.Person.updateFace
  - azure-cognitiveservices-face.Person.updateFace_1
  - azure-cognitiveservices-face.Person.updateFace_2
  - azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-101">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="0501f-102">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0501f-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-103">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-103">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-104">Persona di destinazione che viene aggiunto il volto a.</span><span class="sxs-lookup"><span data-stu-id="0501f-104">Target person that the face is added to.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_1
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-105">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-105">Add a representative face to a person for identification.</span></span> <span data-ttu-id="0501f-106">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0501f-106">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_2
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-107">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-107">Add a representative face to a person for identification.</span></span> <span data-ttu-id="0501f-108">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0501f-108">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-109">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-109">Add a representative face to a person for identification.</span></span> <span data-ttu-id="0501f-110">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0501f-110">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-111">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-111">Add a representative face to a person for identification.</span></span> <span data-ttu-id="0501f-112">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0501f-112">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-113">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-113">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-114">Persona di destinazione che viene aggiunto il volto a.</span><span class="sxs-lookup"><span data-stu-id="0501f-114">Target person that the face is added to.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="0501f-115">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="0501f-115">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-116">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-116">Add a representative face to a person for identification.</span></span> <span data-ttu-id="0501f-117">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0501f-117">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  name: addPersonFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-118">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-118">Add a representative face to a person for identification.</span></span> <span data-ttu-id="0501f-119">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0501f-119">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-120">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-120">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-121">Persona di destinazione che viene aggiunto il volto a.</span><span class="sxs-lookup"><span data-stu-id="0501f-121">Target person that the face is added to.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="0501f-122">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="0501f-122">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  name: addPersonFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-123">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-123">Add a representative face to a person for identification.</span></span> <span data-ttu-id="0501f-124">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="0501f-124">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-125">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-125">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-126">Persona di destinazione che viene aggiunto il volto a.</span><span class="sxs-lookup"><span data-stu-id="0501f-126">Target person that the face is added to.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-127">Creare una nuova persona in un gruppo di persone specificate.</span><span class="sxs-lookup"><span data-stu-id="0501f-127">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-128">Che specifica il gruppo di persona di destinazione per creare l'utente.</span><span class="sxs-lookup"><span data-stu-id="0501f-128">Specifying the target person group to create the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-129">Creare una nuova persona in un gruppo di persone specificate.</span><span class="sxs-lookup"><span data-stu-id="0501f-129">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-130">Creare una nuova persona in un gruppo di persone specificate.</span><span class="sxs-lookup"><span data-stu-id="0501f-130">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: function, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-131">Creare una nuova persona in un gruppo di persone specificate.</span><span class="sxs-lookup"><span data-stu-id="0501f-131">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-132">Che specifica il gruppo di persona di destinazione per creare l'utente.</span><span class="sxs-lookup"><span data-stu-id="0501f-132">Specifying the target person group to create the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-133">Eliminare una faccia da una persona.</span><span class="sxs-lookup"><span data-stu-id="0501f-133">Delete a face from a person.</span></span> <span data-ttu-id="0501f-134">Verrà eliminati anche immagine relativo per il viso persistente.</span><span class="sxs-lookup"><span data-stu-id="0501f-134">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-135">Eliminare una faccia da una persona.</span><span class="sxs-lookup"><span data-stu-id="0501f-135">Delete a face from a person.</span></span> <span data-ttu-id="0501f-136">Verrà eliminati anche immagine relativo per il viso persistente.</span><span class="sxs-lookup"><span data-stu-id="0501f-136">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-137">Eliminare una faccia da una persona.</span><span class="sxs-lookup"><span data-stu-id="0501f-137">Delete a face from a person.</span></span> <span data-ttu-id="0501f-138">Verrà eliminati anche immagine relativo per il viso persistente.</span><span class="sxs-lookup"><span data-stu-id="0501f-138">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-139">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-139">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-140">Specificando la persona che la destinazione persistente visi appartengono a.</span><span class="sxs-lookup"><span data-stu-id="0501f-140">Specifying the person that the target persisted face belong to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-141">Visi persistenti da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="0501f-141">The persisted face to remove.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-142">Eliminare una faccia da una persona.</span><span class="sxs-lookup"><span data-stu-id="0501f-142">Delete a face from a person.</span></span> <span data-ttu-id="0501f-143">Verrà eliminati anche immagine relativo per il viso persistente.</span><span class="sxs-lookup"><span data-stu-id="0501f-143">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-144">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-144">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-145">Specificando la persona che la destinazione persistente visi appartengono a.</span><span class="sxs-lookup"><span data-stu-id="0501f-145">Specifying the person that the target persisted face belong to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-146">Visi persistenti da rimuovere.</span><span class="sxs-lookup"><span data-stu-id="0501f-146">The persisted face to remove.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-147">Eliminare una persona esistente da un gruppo di persone.</span><span class="sxs-lookup"><span data-stu-id="0501f-147">Delete an existing person from a person group.</span></span> <span data-ttu-id="0501f-148">Persistente viso verranno eliminate anche le immagini dell'utente.</span><span class="sxs-lookup"><span data-stu-id="0501f-148">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-149">Specifica il gruppo di persone che contiene la persona.</span><span class="sxs-lookup"><span data-stu-id="0501f-149">Specifying the person group containing the person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-150">PersonId destinazione da eliminare.</span><span class="sxs-lookup"><span data-stu-id="0501f-150">The target personId to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-151">Eliminare una persona esistente da un gruppo di persone.</span><span class="sxs-lookup"><span data-stu-id="0501f-151">Delete an existing person from a person group.</span></span> <span data-ttu-id="0501f-152">Persistente viso verranno eliminate anche le immagini dell'utente.</span><span class="sxs-lookup"><span data-stu-id="0501f-152">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-153">Eliminare una persona esistente da un gruppo di persone.</span><span class="sxs-lookup"><span data-stu-id="0501f-153">Delete an existing person from a person group.</span></span> <span data-ttu-id="0501f-154">Persistente viso verranno eliminate anche le immagini dell'utente.</span><span class="sxs-lookup"><span data-stu-id="0501f-154">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-155">Eliminare una persona esistente da un gruppo di persone.</span><span class="sxs-lookup"><span data-stu-id="0501f-155">Delete an existing person from a person group.</span></span> <span data-ttu-id="0501f-156">Persistente viso verranno eliminate anche le immagini dell'utente.</span><span class="sxs-lookup"><span data-stu-id="0501f-156">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-157">Specifica il gruppo di persone che contiene la persona.</span><span class="sxs-lookup"><span data-stu-id="0501f-157">Specifying the person group containing the person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-158">PersonId destinazione da eliminare.</span><span class="sxs-lookup"><span data-stu-id="0501f-158">The target personId to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-159">Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.</span><span class="sxs-lookup"><span data-stu-id="0501f-159">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-160">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-160">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-161">Specificare la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-161">Specifying the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-162">Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.</span><span class="sxs-lookup"><span data-stu-id="0501f-162">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-163">Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.</span><span class="sxs-lookup"><span data-stu-id="0501f-163">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: function, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-164">Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).</span><span class="sxs-lookup"><span data-stu-id="0501f-164">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-165">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-165">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-166">Specificare la persona di destinazione a cui appartiene il viso.</span><span class="sxs-lookup"><span data-stu-id="0501f-166">Specifying the target person that the face belongs to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-167">PersistedFaceId della destinazione persistente viso della persona.</span><span class="sxs-lookup"><span data-stu-id="0501f-167">The persistedFaceId of the target persisted face of the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_2
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-168">Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).</span><span class="sxs-lookup"><span data-stu-id="0501f-168">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_1
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-169">Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).</span><span class="sxs-lookup"><span data-stu-id="0501f-169">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-170">Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).</span><span class="sxs-lookup"><span data-stu-id="0501f-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-171">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-171">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-172">Specificare la persona di destinazione a cui appartiene il viso.</span><span class="sxs-lookup"><span data-stu-id="0501f-172">Specifying the target person that the face belongs to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-173">PersistedFaceId della destinazione persistente viso della persona.</span><span class="sxs-lookup"><span data-stu-id="0501f-173">The persistedFaceId of the target persisted face of the person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-174">Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.</span><span class="sxs-lookup"><span data-stu-id="0501f-174">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-175">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-175">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-176">Specificare la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-176">Specifying the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-177">Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).</span><span class="sxs-lookup"><span data-stu-id="0501f-177">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-178">personGroupId del gruppo di persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-178">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-179">Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).</span><span class="sxs-lookup"><span data-stu-id="0501f-179">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-180">Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).</span><span class="sxs-lookup"><span data-stu-id="0501f-180">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options: function, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-181">Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).</span><span class="sxs-lookup"><span data-stu-id="0501f-181">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-182">personGroupId del gruppo di persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-182">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-183">Nome dell'aggiornamento o una persona userData.</span><span class="sxs-lookup"><span data-stu-id="0501f-183">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-184">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-184">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-185">personId della persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-185">personId of the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-186">Nome dell'aggiornamento o una persona userData.</span><span class="sxs-lookup"><span data-stu-id="0501f-186">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-187">Nome dell'aggiornamento o una persona userData.</span><span class="sxs-lookup"><span data-stu-id="0501f-187">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-188">Aggiornamento di una persona persistente campo userData del viso.</span><span class="sxs-lookup"><span data-stu-id="0501f-188">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-189">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-189">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-190">personId della persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-190">personId of the target person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-191">persistedFaceId della faccia di destinazione, che viene mantenuto e non scadranno.</span><span class="sxs-lookup"><span data-stu-id="0501f-191">persistedFaceId of target face, which is persisted and will not expire.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_1
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-192">Aggiornamento di una persona persistente campo userData del viso.</span><span class="sxs-lookup"><span data-stu-id="0501f-192">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_2
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-193">Aggiornamento di una persona persistente campo userData del viso.</span><span class="sxs-lookup"><span data-stu-id="0501f-193">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-194">Aggiornamento di una persona persistente campo userData del viso.</span><span class="sxs-lookup"><span data-stu-id="0501f-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-195">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-195">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-196">personId della persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-196">personId of the target person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-197">persistedFaceId della faccia di destinazione, che viene mantenuto e non scadranno.</span><span class="sxs-lookup"><span data-stu-id="0501f-197">persistedFaceId of target face, which is persisted and will not expire.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="0501f-198">Nome dell'aggiornamento o una persona userData.</span><span class="sxs-lookup"><span data-stu-id="0501f-198">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-199">Specifica il gruppo di persone che contiene la persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-199">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="0501f-200">personId della persona di destinazione.</span><span class="sxs-lookup"><span data-stu-id="0501f-200">personId of the target person.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>>'
    fullName: '[]>>'
