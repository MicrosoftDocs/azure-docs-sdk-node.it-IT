### YamlMime:UniversalReference
ms.openlocfilehash: 2c5dc4613b6576877b90e42f2a0c2b54bfb52838
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/12/2018
ms.locfileid: "40057918"
items:
- uid: azure-cognitiveservices-face.Person
  name: Person
  fullName: Person
  children:
  - azure-cognitiveservices-face.Person.addPersonFace
  - azure-cognitiveservices-face.Person.addPersonFace_1
  - azure-cognitiveservices-face.Person.addPersonFace_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.create
  - azure-cognitiveservices-face.Person.create_1
  - azure-cognitiveservices-face.Person.create_2
  - azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteFace_1
  - azure-cognitiveservices-face.Person.deleteFace_2
  - azure-cognitiveservices-face.Person.deleteFace
  - azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteMethod
  - azure-cognitiveservices-face.Person.deleteMethod_1
  - azure-cognitiveservices-face.Person.deleteMethod_2
  - azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.get
  - azure-cognitiveservices-face.Person.get_1
  - azure-cognitiveservices-face.Person.get_2
  - azure-cognitiveservices-face.Person.getFace
  - azure-cognitiveservices-face.Person.getFace_2
  - azure-cognitiveservices-face.Person.getFace_1
  - azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.list
  - azure-cognitiveservices-face.Person.list_1
  - azure-cognitiveservices-face.Person.list_2
  - azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.update
  - azure-cognitiveservices-face.Person.update_1
  - azure-cognitiveservices-face.Person.update_2
  - azure-cognitiveservices-face.Person.updateFace
  - azure-cognitiveservices-face.Person.updateFace_1
  - azure-cognitiveservices-face.Person.updateFace_2
  - azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un viso rappresentativo per una persona per l'identificazione. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        Persona di destinazione che viene aggiunto il volto a.
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_1
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un viso rappresentativo per una persona per l'identificazione. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_2
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un viso rappresentativo per una persona per l'identificazione. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un viso rappresentativo per una persona per l'identificazione. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un viso rappresentativo per una persona per l'identificazione. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        Persona di destinazione che viene aggiunto il volto a.
    - id: image
      type:
      - stream.Readable
      description: >
        Un flusso dell'immagine.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un viso rappresentativo per una persona per l'identificazione. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  name: addPersonFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un viso rappresentativo per una persona per l'identificazione. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.
  syntax:
    content: 'function addPersonFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        Persona di destinazione che viene aggiunto il volto a.
    - id: image
      type:
      - stream.Readable
      description: >
        Un flusso dell'immagine.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  name: addPersonFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un viso rappresentativo per una persona per l'identificazione. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.
  syntax:
    content: 'function addPersonFaceWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        Persona di destinazione che viene aggiunto il volto a.
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Creare una nuova persona in un gruppo di persone specificate.
  syntax:
    content: 'function create(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Che specifica il gruppo di persona di destinazione per creare l'utente.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Creare una nuova persona in un gruppo di persone specificate.
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Creare una nuova persona in un gruppo di persone specificate.
  syntax:
    content: 'function create(personGroupId: string, options: function, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Creare una nuova persona in un gruppo di persone specificate.
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Che specifica il gruppo di persona di destinazione per creare l'utente.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare una faccia da una persona. Verrà eliminati anche immagine relativo per il viso persistente.
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare una faccia da una persona. Verrà eliminati anche immagine relativo per il viso persistente.
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare una faccia da una persona. Verrà eliminati anche immagine relativo per il viso persistente.
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        Specificando la persona che la destinazione persistente visi appartengono a.
    - id: persistedFaceId
      type:
      - string
      description: >
        Visi persistenti da rimuovere.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare una faccia da una persona. Verrà eliminati anche immagine relativo per il viso persistente.
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        Specificando la persona che la destinazione persistente visi appartengono a.
    - id: persistedFaceId
      type:
      - string
      description: >
        Visi persistenti da rimuovere.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare una persona esistente da un gruppo di persone. Persistente viso verranno eliminate anche le immagini dell'utente.
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona.
    - id: personId
      type:
      - string
      description: >
        PersonId destinazione da eliminare.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare una persona esistente da un gruppo di persone. Persistente viso verranno eliminate anche le immagini dell'utente.
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare una persona esistente da un gruppo di persone. Persistente viso verranno eliminate anche le immagini dell'utente.
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare una persona esistente da un gruppo di persone. Persistente viso verranno eliminate anche le immagini dell'utente.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona.
    - id: personId
      type:
      - string
      description: >
        PersonId destinazione da eliminare.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        Specificare la persona di destinazione.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: function, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        Specificare la persona di destinazione a cui appartiene il viso.
    - id: persistedFaceId
      type:
      - string
      description: >
        PersistedFaceId della destinazione persistente viso della persona.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_2
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_1
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        Specificare la persona di destinazione a cui appartiene il viso.
    - id: persistedFaceId
      type:
      - string
      description: >
        PersistedFaceId della destinazione persistente viso della persona.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        Specificare la persona di destinazione.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).
  syntax:
    content: 'function list(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        personGroupId del gruppo di persona di destinazione.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).
  syntax:
    content: 'function list(personGroupId: string, options: function, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        personGroupId del gruppo di persona di destinazione.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Nome dell'aggiornamento o una persona userData.
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        personId della persona di destinazione.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Nome dell'aggiornamento o una persona userData.
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Nome dell'aggiornamento o una persona userData.
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornamento di una persona persistente campo userData del viso.
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        personId della persona di destinazione.
    - id: persistedFaceId
      type:
      - string
      description: >
        persistedFaceId della faccia di destinazione, che viene mantenuto e non scadranno.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_1
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornamento di una persona persistente campo userData del viso.
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_2
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornamento di una persona persistente campo userData del viso.
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornamento di una persona persistente campo userData del viso.
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        personId della persona di destinazione.
    - id: persistedFaceId
      type:
      - string
      description: >
        persistedFaceId della faccia di destinazione, che viene mantenuto e non scadranno.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Nome dell'aggiornamento o una persona userData.
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        Specifica il gruppo di persone che contiene la persona di destinazione.
    - id: personId
      type:
      - string
      description: >
        personId della persona di destinazione.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>>'
    fullName: '[]>>'
