### YamlMime:UniversalReference
ms.openlocfilehash: b668012a360630506b3de5e9274fb380c44683f9
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 12/13/2018
ms.locfileid: "52170006"
items:
- uid: azure-cognitiveservices-face.PersonGroupPerson
  name: PersonGroupPerson
  fullName: PersonGroupPerson
  children:
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.create
  - azure-cognitiveservices-face.PersonGroupPerson.create_2
  - azure-cognitiveservices-face.PersonGroupPerson.create_1
  - azure-cognitiveservices-face.PersonGroupPerson.createWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_2
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_1
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.get
  - azure-cognitiveservices-face.PersonGroupPerson.get_2
  - azure-cognitiveservices-face.PersonGroupPerson.get_1
  - azure-cognitiveservices-face.PersonGroupPerson.getFace
  - azure-cognitiveservices-face.PersonGroupPerson.getFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.getFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.getWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.list
  - azure-cognitiveservices-face.PersonGroupPerson.list_2
  - azure-cognitiveservices-face.PersonGroupPerson.list_1
  - azure-cognitiveservices-face.PersonGroupPerson.listWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.update
  - azure-cognitiveservices-face.PersonGroupPerson.update_2
  - azure-cognitiveservices-face.PersonGroupPerson.update_1
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream
  name: addFaceFromStream(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-101">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="f5298-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="f5298-102">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="f5298-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-103">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-103">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-104">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-104">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="f5298-105">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="f5298-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2
  name: addFaceFromStream(string, string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-106">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="f5298-106">Add a representative face to a person for identification.</span></span> <span data-ttu-id="f5298-107">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="f5298-107">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1
  name: addFaceFromStream(string, string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-108">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="f5298-108">Add a representative face to a person for identification.</span></span> <span data-ttu-id="f5298-109">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="f5298-109">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-110">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="f5298-110">Add a representative face to a person for identification.</span></span> <span data-ttu-id="f5298-111">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="f5298-111">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-112">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-112">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-113">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-113">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="f5298-114">Un flusso dell'immagine.</span><span class="sxs-lookup"><span data-stu-id="f5298-114">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl
  name: addFaceFromUrl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-115">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="f5298-115">Add a representative face to a person for identification.</span></span> <span data-ttu-id="f5298-116">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="f5298-116">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-117">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-117">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-118">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-118">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="f5298-119">Raggiungibile pubblicamente URL di un'immagine</span><span class="sxs-lookup"><span data-stu-id="f5298-119">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-120">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="f5298-120">Add a representative face to a person for identification.</span></span> <span data-ttu-id="f5298-121">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="f5298-121">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-122">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="f5298-122">Add a representative face to a person for identification.</span></span> <span data-ttu-id="f5298-123">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="f5298-123">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-124">Aggiungere un viso rappresentativo per una persona per l'identificazione.</span><span class="sxs-lookup"><span data-stu-id="f5298-124">Add a representative face to a person for identification.</span></span> <span data-ttu-id="f5298-125">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="f5298-125">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-126">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-126">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-127">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-127">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="f5298-128">Raggiungibile pubblicamente URL di un'immagine</span><span class="sxs-lookup"><span data-stu-id="f5298-128">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-129">Creare una nuova persona in un gruppo di persone specificate.</span><span class="sxs-lookup"><span data-stu-id="f5298-129">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-130">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-130">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create_2
  name: create(string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-131">Creare una nuova persona in un gruppo di persone specificate.</span><span class="sxs-lookup"><span data-stu-id="f5298-131">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create_1
  name: create(string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-132">Creare una nuova persona in un gruppo di persone specificate.</span><span class="sxs-lookup"><span data-stu-id="f5298-132">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-133">Creare una nuova persona in un gruppo di persone specificate.</span><span class="sxs-lookup"><span data-stu-id="f5298-133">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-134">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-134">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace
  name: deleteFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-135">Eliminare una faccia da una persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-135">Delete a face from a person.</span></span> <span data-ttu-id="f5298-136">Verranno eliminati anche funzionalità relativo per il viso persistente.</span><span class="sxs-lookup"><span data-stu-id="f5298-136">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-137">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-137">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-138">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-138">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-139">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="f5298-139">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace_2
  name: deleteFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-140">Eliminare una faccia da una persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-140">Delete a face from a person.</span></span> <span data-ttu-id="f5298-141">Verranno eliminati anche funzionalità relativo per il viso persistente.</span><span class="sxs-lookup"><span data-stu-id="f5298-141">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace_1
  name: deleteFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-142">Eliminare una faccia da una persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-142">Delete a face from a person.</span></span> <span data-ttu-id="f5298-143">Verranno eliminati anche funzionalità relativo per il viso persistente.</span><span class="sxs-lookup"><span data-stu-id="f5298-143">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-144">Eliminare una faccia da una persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-144">Delete a face from a person.</span></span> <span data-ttu-id="f5298-145">Verranno eliminati anche funzionalità relativo per il viso persistente.</span><span class="sxs-lookup"><span data-stu-id="f5298-145">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-146">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-146">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-147">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-147">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-148">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="f5298-148">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-149">Eliminare una persona esistente da un gruppo di persone.</span><span class="sxs-lookup"><span data-stu-id="f5298-149">Delete an existing person from a person group.</span></span> <span data-ttu-id="f5298-150">Tutti archiviati dati utente e verranno eliminate le funzionalità di volti nella voce di persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-150">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-151">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-151">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-152">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-152">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-153">Eliminare una persona esistente da un gruppo di persone.</span><span class="sxs-lookup"><span data-stu-id="f5298-153">Delete an existing person from a person group.</span></span> <span data-ttu-id="f5298-154">Tutti archiviati dati utente e verranno eliminate le funzionalità di volti nella voce di persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-154">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-155">Eliminare una persona esistente da un gruppo di persone.</span><span class="sxs-lookup"><span data-stu-id="f5298-155">Delete an existing person from a person group.</span></span> <span data-ttu-id="f5298-156">Tutti archiviati dati utente e verranno eliminate le funzionalità di volti nella voce di persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-156">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-157">Eliminare una persona esistente da un gruppo di persone.</span><span class="sxs-lookup"><span data-stu-id="f5298-157">Delete an existing person from a person group.</span></span> <span data-ttu-id="f5298-158">Tutti archiviati dati utente e verranno eliminate le funzionalità di volti nella voce di persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-158">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-159">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-159">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-160">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-160">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-161">Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.</span><span class="sxs-lookup"><span data-stu-id="f5298-161">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-162">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-162">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-163">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-163">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get_2
  name: get(string, string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-164">Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.</span><span class="sxs-lookup"><span data-stu-id="f5298-164">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get_1
  name: get(string, string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-165">Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.</span><span class="sxs-lookup"><span data-stu-id="f5298-165">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace
  name: getFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-166">Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).</span><span class="sxs-lookup"><span data-stu-id="f5298-166">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-167">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-167">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-168">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-168">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-169">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="f5298-169">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace_2
  name: getFace(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-170">Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).</span><span class="sxs-lookup"><span data-stu-id="f5298-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace_1
  name: getFace(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-171">Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).</span><span class="sxs-lookup"><span data-stu-id="f5298-171">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-172">Recuperare informazioni su un viso persistente (specificato da persistedFaceId, personId e relativo personGroupId appartenente).</span><span class="sxs-lookup"><span data-stu-id="f5298-172">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-173">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-173">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-174">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-174">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-175">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="f5298-175">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-176">Recuperare le informazioni di una persona, tra cui userData, nome e registrato i visi persistenti.</span><span class="sxs-lookup"><span data-stu-id="f5298-176">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-177">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-177">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-178">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-178">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list
  name: list(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-179">Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).</span><span class="sxs-lookup"><span data-stu-id="f5298-179">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-180">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-180">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list_2
  name: list(string, Object, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-181">Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).</span><span class="sxs-lookup"><span data-stu-id="f5298-181">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options: Object, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list_1
  name: list(string, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-182">Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).</span><span class="sxs-lookup"><span data-stu-id="f5298-182">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-183">Elenca tutte le persone in un gruppo di persone e recuperare le informazioni di persona (inclusi personId, nome, userData e persistedFaceIds delle facce registrate dell'utente).</span><span class="sxs-lookup"><span data-stu-id="f5298-183">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-184">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-184">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update
  name: update(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-185">Nome dell'aggiornamento o una persona userData.</span><span class="sxs-lookup"><span data-stu-id="f5298-185">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-186">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-186">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-187">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-187">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update_2
  name: update(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-188">Nome dell'aggiornamento o una persona userData.</span><span class="sxs-lookup"><span data-stu-id="f5298-188">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update_1
  name: update(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-189">Nome dell'aggiornamento o una persona userData.</span><span class="sxs-lookup"><span data-stu-id="f5298-189">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace
  name: updateFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-190">Aggiornamento di una persona persistente campo userData del viso.</span><span class="sxs-lookup"><span data-stu-id="f5298-190">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-191">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-191">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-192">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-192">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-193">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="f5298-193">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace_2
  name: updateFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-194">Aggiornamento di una persona persistente campo userData del viso.</span><span class="sxs-lookup"><span data-stu-id="f5298-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace_1
  name: updateFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-195">Aggiornamento di una persona persistente campo userData del viso.</span><span class="sxs-lookup"><span data-stu-id="f5298-195">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-196">Aggiornamento di una persona persistente campo userData del viso.</span><span class="sxs-lookup"><span data-stu-id="f5298-196">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-197">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-197">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-198">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-198">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-199">ID che fanno riferimento a un particolare persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="f5298-199">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f5298-200">Nome dell'aggiornamento o una persona userData.</span><span class="sxs-lookup"><span data-stu-id="f5298-200">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-201">ID che fanno riferimento a un gruppo di persone particolare.</span><span class="sxs-lookup"><span data-stu-id="f5298-201">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="f5298-202">ID che fanno riferimento a una determinata persona.</span><span class="sxs-lookup"><span data-stu-id="f5298-202">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  name: Person>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  name: Person[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>>'
    fullName: '[]>>'
