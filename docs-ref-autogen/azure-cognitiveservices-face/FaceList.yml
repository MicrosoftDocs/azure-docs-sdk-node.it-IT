### YamlMime:UniversalReference
ms.openlocfilehash: 2f68db2640bf5f18ec526b603a0c002bd8b3eb2f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/12/2018
ms.locfileid: "40071137"
items:
- uid: azure-cognitiveservices-face.FaceList
  name: FaceList
  fullName: FaceList
  children:
  - azure-cognitiveservices-face.FaceList.addFace
  - azure-cognitiveservices-face.FaceList.addFace_1
  - azure-cognitiveservices-face.FaceList.addFace_2
  - azure-cognitiveservices-face.FaceList.addFaceFromStream_1
  - azure-cognitiveservices-face.FaceList.addFaceFromStream
  - azure-cognitiveservices-face.FaceList.addFaceFromStream_2
  - azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.create_1
  - azure-cognitiveservices-face.FaceList.create
  - azure-cognitiveservices-face.FaceList.create_2
  - azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.deleteFace
  - azure-cognitiveservices-face.FaceList.deleteFace_1
  - azure-cognitiveservices-face.FaceList.deleteFace_2
  - azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.deleteMethod
  - azure-cognitiveservices-face.FaceList.deleteMethod_1
  - azure-cognitiveservices-face.FaceList.deleteMethod_2
  - azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.get_1
  - azure-cognitiveservices-face.FaceList.get_2
  - azure-cognitiveservices-face.FaceList.get
  - azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.list
  - azure-cognitiveservices-face.FaceList.list_1
  - azure-cognitiveservices-face.FaceList.list_2
  - azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.update
  - azure-cognitiveservices-face.FaceList.update_1
  - azure-cognitiveservices-face.FaceList.update_2
  - azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un volto a un elenco di visi. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.
  syntax:
    content: 'function addFace(faceListId: string, url: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi.
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace_1
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un volto a un elenco di visi. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.
  syntax:
    content: 'function addFace(faceListId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace_2
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un volto a un elenco di visi. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.
  syntax:
    content: 'function addFace(faceListId: string, url: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_1
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un volto a un elenco di visi. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.
  syntax:
    content: 'function addFaceFromStream(faceListId: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un volto a un elenco di visi. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.
  syntax:
    content: 'function addFaceFromStream(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_2
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un volto a un elenco di visi. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.
  syntax:
    content: 'function addFaceFromStream(faceListId: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un volto a un elenco di visi. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
  name: addFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiungere un volto a un elenco di visi. Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace. Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.
  syntax:
    content: 'function addFaceWithHttpOperationResponse(faceListId: string, url: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi.
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Creare un elenco di visi vuoto. Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.
  syntax:
    content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Creare un elenco di visi vuoto. Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.
  syntax:
    content: 'function create(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi particolare.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Creare un elenco di visi vuoto. Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.
  syntax:
    content: 'function create(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Creare un elenco di visi vuoto. Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.
  syntax:
    content: 'function createWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi particolare.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId). Verrà eliminati anche immagine persistente correlati alla superficie.
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        faceListId di un elenco di visi esistente.
    - id: persistedFaceId
      type:
      - string
      description: >
        persistedFaceId di un viso esistente.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId). Verrà eliminati anche immagine persistente correlati alla superficie.
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId). Verrà eliminati anche immagine persistente correlati alla superficie.
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId). Verrà eliminati anche immagine persistente correlati alla superficie.
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(faceListId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        faceListId di un elenco di visi esistente.
    - id: persistedFaceId
      type:
      - string
      description: >
        persistedFaceId di un viso esistente.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare un elenco di visi esistente in base a faceListId. Persistente viso verranno eliminate anche le immagini nell'elenco di visi.
  syntax:
    content: 'function deleteMethod(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare un elenco di visi esistente in base a faceListId. Persistente viso verranno eliminate anche le immagini nell'elenco di visi.
  syntax:
    content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare un elenco di visi esistente in base a faceListId. Persistente viso verranno eliminate anche le immagini nell'elenco di visi.
  syntax:
    content: 'function deleteMethod(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminare un elenco di visi esistente in base a faceListId. Persistente viso verranno eliminate anche le immagini nell'elenco di visi.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare le informazioni di un elenco visi.
  syntax:
    content: 'function get(faceListId: string, callback: ServiceCallback<GetFaceListResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare le informazioni di un elenco visi.
  syntax:
    content: 'function get(faceListId: string, options: function, callback: ServiceCallback<GetFaceListResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare le informazioni di un elenco visi.
  syntax:
    content: 'function get(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare le informazioni di un elenco visi.
  syntax:
    content: 'function getWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare informazioni su tutti gli elenchi di visi esistente. Verrà restituiti solo faceListId, il nome e userData.
  syntax:
    content: 'function list(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare informazioni su tutti gli elenchi di visi esistente. Verrà restituiti solo faceListId, il nome e userData.
  syntax:
    content: 'function list(callback: ServiceCallback<GetFaceListResult[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare informazioni su tutti gli elenchi di visi esistente. Verrà restituiti solo faceListId, il nome e userData.
  syntax:
    content: 'function list(options: function, callback: ServiceCallback<GetFaceListResult[]>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Recuperare informazioni su tutti gli elenchi di visi esistente. Verrà restituiti solo faceListId, il nome e userData.
  syntax:
    content: 'function listWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornare le informazioni di un elenco di visi.
  syntax:
    content: 'function update(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornare le informazioni di un elenco di visi.
  syntax:
    content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornare le informazioni di un elenco di visi.
  syntax:
    content: 'function update(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Aggiornare le informazioni di un elenco di visi.
  syntax:
    content: 'function updateWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        ID che fanno riferimento a un elenco di visi.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.GetFaceListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>>'
    fullName: '[]>>'
