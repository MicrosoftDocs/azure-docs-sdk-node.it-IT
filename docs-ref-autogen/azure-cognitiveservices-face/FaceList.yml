### YamlMime:UniversalReference
ms.openlocfilehash: 25324c49c3affa264812b52af82725a5ac6a15c4
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 08/22/2018
ms.locfileid: "41686268"
items:
- uid: azure-cognitiveservices-face.FaceList
  name: FaceList
  fullName: FaceList
  children:
  - azure-cognitiveservices-face.FaceList.addFace
  - azure-cognitiveservices-face.FaceList.addFace_1
  - azure-cognitiveservices-face.FaceList.addFace_2
  - azure-cognitiveservices-face.FaceList.addFaceFromStream_1
  - azure-cognitiveservices-face.FaceList.addFaceFromStream
  - azure-cognitiveservices-face.FaceList.addFaceFromStream_2
  - azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.create_1
  - azure-cognitiveservices-face.FaceList.create
  - azure-cognitiveservices-face.FaceList.create_2
  - azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.deleteFace
  - azure-cognitiveservices-face.FaceList.deleteFace_1
  - azure-cognitiveservices-face.FaceList.deleteFace_2
  - azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.deleteMethod
  - azure-cognitiveservices-face.FaceList.deleteMethod_1
  - azure-cognitiveservices-face.FaceList.deleteMethod_2
  - azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.get_1
  - azure-cognitiveservices-face.FaceList.get_2
  - azure-cognitiveservices-face.FaceList.get
  - azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.list
  - azure-cognitiveservices-face.FaceList.list_1
  - azure-cognitiveservices-face.FaceList.list_2
  - azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.update
  - azure-cognitiveservices-face.FaceList.update_1
  - azure-cognitiveservices-face.FaceList.update_2
  - azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-101">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-101">Add a face to a face list.</span></span> <span data-ttu-id="6d8fe-102">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="6d8fe-103">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-104">ID che fanno riferimento a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-104">Id referencing a Face List.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace_1
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-105">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-105">Add a face to a face list.</span></span> <span data-ttu-id="6d8fe-106">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-106">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="6d8fe-107">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-107">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace_2
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-108">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-108">Add a face to a face list.</span></span> <span data-ttu-id="6d8fe-109">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-109">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="6d8fe-110">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-110">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, options: Object, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_1
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-111">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-111">Add a face to a face list.</span></span> <span data-ttu-id="6d8fe-112">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-112">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="6d8fe-113">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-113">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-114">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-114">Add a face to a face list.</span></span> <span data-ttu-id="6d8fe-115">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-115">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="6d8fe-116">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-116">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-117">ID che fanno riferimento a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-117">Id referencing a Face List.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_2
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-118">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-118">Add a face to a face list.</span></span> <span data-ttu-id="6d8fe-119">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-119">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="6d8fe-120">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-120">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, options: Object, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-121">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-121">Add a face to a face list.</span></span> <span data-ttu-id="6d8fe-122">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-122">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="6d8fe-123">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-123">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-124">ID che fanno riferimento a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-124">Id referencing a Face List.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
  name: addFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-125">Aggiungere un volto a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-125">Add a face to a face list.</span></span> <span data-ttu-id="6d8fe-126">Quadrante dell'input viene specificato come un'immagine con un rettangolo targetFace.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="6d8fe-127">Restituisce un persistedFaceId che rappresenta il volto aggiunto e persistedFaceId non scadranno.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceWithHttpOperationResponse(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-128">ID che fanno riferimento a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-128">Id referencing a Face List.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-129">Creare un elenco di visi vuoto.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-129">Create an empty face list.</span></span> <span data-ttu-id="6d8fe-130">Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-130">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-131">Creare un elenco di visi vuoto.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-131">Create an empty face list.</span></span> <span data-ttu-id="6d8fe-132">Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-132">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-133">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-133">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-134">Creare un elenco di visi vuoto.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-134">Create an empty face list.</span></span> <span data-ttu-id="6d8fe-135">Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-135">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-136">Creare un elenco di visi vuoto.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-136">Create an empty face list.</span></span> <span data-ttu-id="6d8fe-137">Gli elenchi sono permessi fino a 64 volti presente in una sottoscrizione.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-137">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-138">ID che fanno riferimento a un elenco di visi particolare.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-138">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-139">Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId).</span><span class="sxs-lookup"><span data-stu-id="6d8fe-139">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="6d8fe-140">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-140">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-141">faceListId di un elenco di visi esistente.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-141">faceListId of an existing face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-142">persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-142">persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-143">Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId).</span><span class="sxs-lookup"><span data-stu-id="6d8fe-143">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="6d8fe-144">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-145">Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId).</span><span class="sxs-lookup"><span data-stu-id="6d8fe-145">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="6d8fe-146">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-146">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-147">Eliminare un'immagine esistente da un elenco di visi (specificato da un persisitedFaceId e un faceListId).</span><span class="sxs-lookup"><span data-stu-id="6d8fe-147">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="6d8fe-148">Verrà eliminati anche immagine persistente correlati alla superficie.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-149">faceListId di un elenco di visi esistente.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-149">faceListId of an existing face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-150">persistedFaceId di un viso esistente.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-150">persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-151">Eliminare un elenco di visi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-151">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="6d8fe-152">Persistente viso verranno eliminate anche le immagini nell'elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-152">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-153">ID che fanno riferimento a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-153">Id referencing a Face List.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-154">Eliminare un elenco di visi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-154">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="6d8fe-155">Persistente viso verranno eliminate anche le immagini nell'elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-155">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-156">Eliminare un elenco di visi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-156">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="6d8fe-157">Persistente viso verranno eliminate anche le immagini nell'elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-157">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-158">Eliminare un elenco di visi esistente in base a faceListId.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-158">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="6d8fe-159">Persistente viso verranno eliminate anche le immagini nell'elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-159">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-160">ID che fanno riferimento a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-160">Id referencing a Face List.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-161">Recuperare le informazioni di un elenco visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-161">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, callback: ServiceCallback<GetFaceListResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-162">Recuperare le informazioni di un elenco visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-162">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options: Object, callback: ServiceCallback<GetFaceListResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-163">Recuperare le informazioni di un elenco visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-163">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-164">ID che fanno riferimento a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-164">Id referencing a Face List.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-165">Recuperare le informazioni di un elenco visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-165">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-166">ID che fanno riferimento a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-166">Id referencing a Face List.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-167">Recuperare informazioni su tutti gli elenchi di visi esistente.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-167">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="6d8fe-168">Verrà restituiti solo faceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-168">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-169">Recuperare informazioni su tutti gli elenchi di visi esistente.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-169">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="6d8fe-170">Verrà restituiti solo faceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-170">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<GetFaceListResult[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-171">Recuperare informazioni su tutti gli elenchi di visi esistente.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-171">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="6d8fe-172">Verrà restituiti solo faceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-172">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<GetFaceListResult[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-173">Recuperare informazioni su tutti gli elenchi di visi esistente.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-173">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="6d8fe-174">Verrà restituiti solo faceListId, il nome e userData.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-174">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-175">Aggiornare le informazioni di un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-175">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-176">ID che fanno riferimento a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-176">Id referencing a Face List.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-177">Aggiornare le informazioni di un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-177">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-178">Aggiornare le informazioni di un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-178">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="6d8fe-179">Aggiornare le informazioni di un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-179">Update information of a face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="6d8fe-180">ID che fanno riferimento a un elenco di visi.</span><span class="sxs-lookup"><span data-stu-id="6d8fe-180">Id referencing a Face List.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.GetFaceListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>>'
    fullName: '[]>>'
