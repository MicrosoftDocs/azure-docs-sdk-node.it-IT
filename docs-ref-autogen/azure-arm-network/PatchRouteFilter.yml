### YamlMime:UniversalReference
ms.openlocfilehash: de8a9449aa22045fd88b9f40467088baed2a11cd
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: it-IT
ms.lasthandoff: 12/20/2018
ms.locfileid: "53660045"
items:
- uid: azure-arm-network.PatchRouteFilter
  name: PatchRouteFilter
  fullName: PatchRouteFilter
  children:
  - azure-arm-network.PatchRouteFilter.etag
  - azure-arm-network.PatchRouteFilter.name
  - azure-arm-network.PatchRouteFilter.peerings
  - azure-arm-network.PatchRouteFilter.provisioningState
  - azure-arm-network.PatchRouteFilter.rules
  - azure-arm-network.PatchRouteFilter.tags
  - azure-arm-network.PatchRouteFilter.type
  langs:
  - typeScript
  type: interface
  summary: <span data-ttu-id="67d50-101">Risorsa filtro di route.</span><span class="sxs-lookup"><span data-stu-id="67d50-101">Route Filter Resource.</span></span>
  extends:
    name: azure-arm-network.SubResource
  package: azure-arm-network
- uid: azure-arm-network.PatchRouteFilter.etag
  name: etag
  fullName: etag
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="67d50-102">Stringa univoca di sola lettura che cambia ogni volta che la risorsa viene aggiornata.</span><span class="sxs-lookup"><span data-stu-id="67d50-102">A unique read-only string that changes whenever the resource is updated.</span></span>
  optional: true
  syntax:
    content: 'etag?: string'
    return:
      type:
      - string
  package: azure-arm-network
- uid: azure-arm-network.PatchRouteFilter.name
  name: name
  fullName: name
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="67d50-103">Il nome della risorsa che è univoco all'interno di un gruppo di risorse.</span><span class="sxs-lookup"><span data-stu-id="67d50-103">The name of the resource that is unique within a resource group.</span></span> <span data-ttu-id="67d50-104">Questo nome è utilizzabile per accedere alla risorsa.</span><span class="sxs-lookup"><span data-stu-id="67d50-104">This name can be used to access the resource.</span></span>
  optional: true
  syntax:
    content: 'name?: string'
    return:
      type:
      - string
  package: azure-arm-network
- uid: azure-arm-network.PatchRouteFilter.peerings
  name: peerings
  fullName: peerings
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="67d50-105">Raccolta di riferimenti a express route peering del circuito.</span><span class="sxs-lookup"><span data-stu-id="67d50-105">A collection of references to express route circuit peerings.</span></span>
  optional: true
  syntax:
    content: 'peerings?: ExpressRouteCircuitPeering[]'
    return:
      type:
      - azure-arm-network.ExpressRouteCircuitPeering[]
  package: azure-arm-network
- uid: azure-arm-network.PatchRouteFilter.provisioningState
  name: provisioningState
  fullName: provisioningState
  children: []
  langs:
  - typeScript
  type: property
  summary: "<span data-ttu-id=\"67d50-106\">Lo stato di provisioning della risorsa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67d50-106\">The provisioning state of the resource.</span></span> <span data-ttu-id=\"67d50-107\">I valori possibili sono: 'Aggiorna', 'Eliminazione', 'Riuscito' e \"Non riuscito\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"67d50-107\">Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.</span></span>"
  optional: true
  syntax:
    content: 'provisioningState?: string'
    return:
      type:
      - string
  package: azure-arm-network
- uid: azure-arm-network.PatchRouteFilter.rules
  name: rules
  fullName: rules
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="67d50-108">Raccolta di RouteFilterRules contenuti all'interno di un filtro di route.</span><span class="sxs-lookup"><span data-stu-id="67d50-108">Collection of RouteFilterRules contained within a route filter.</span></span>
  optional: true
  syntax:
    content: 'rules?: RouteFilterRule[]'
    return:
      type:
      - azure-arm-network.RouteFilterRule[]
  package: azure-arm-network
- uid: azure-arm-network.PatchRouteFilter.tags
  name: tags
  fullName: tags
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="67d50-109">Tag delle risorse.</span><span class="sxs-lookup"><span data-stu-id="67d50-109">Resource tags.</span></span>
  optional: true
  syntax:
    content: 'tags?: [key: string]: string'
    return:
      type:
      - '[key: string]: string'
  package: azure-arm-network
- uid: azure-arm-network.PatchRouteFilter.type
  name: type
  fullName: type
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="67d50-110">Tipo di risorsa.</span><span class="sxs-lookup"><span data-stu-id="67d50-110">Resource type.</span></span>
  optional: true
  syntax:
    content: 'type?: string'
    return:
      type:
      - string
  package: azure-arm-network
references:
- uid: azure-arm-network.SubResource
  name: SubResource
  spec.typeScript:
  - name: SubResource
    fullName: SubResource
    uid: azure-arm-network.SubResource
- uid: azure-arm-network.ExpressRouteCircuitPeering[]
  name: ExpressRouteCircuitPeering[]
  spec.typeScript:
  - name: ExpressRouteCircuitPeering
    fullName: ExpressRouteCircuitPeering
    uid: azure-arm-network.ExpressRouteCircuitPeering
  - name: '[]'
    fullName: '[]'
- uid: azure-arm-network.RouteFilterRule[]
  name: RouteFilterRule[]
  spec.typeScript:
  - name: RouteFilterRule
    fullName: RouteFilterRule
    uid: azure-arm-network.RouteFilterRule
  - name: '[]'
    fullName: '[]'
